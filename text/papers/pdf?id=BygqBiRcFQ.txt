Under review as a conference paper at ICLR 2019
DIFFUSION SCATTERING TRANSFORMS ON GRAPHS
Anonymous authors Paper under double-blind review
ABSTRACT
Stability is a key aspect of data analysis. In many applications, the natural notion of stability is geometric, as illustrated for example in computer vision. Scattering transforms construct deep convolutional representations which are certified stable to input deformations. This stability to deformations can be interpreted as stability with respect to changes in the metric structure of the domain. In this work, we show that scattering transforms can be generalized to nonEuclidean domains using diffusion wavelets, while preserving a notion of stability with respect to metric changes in the domain, measured with diffusion maps. The resulting representation is stable to metric perturbations of the domain while being able to capture "high-frequency" information, akin to the Euclidean Scattering.
1 INTRODUCTION
Convolutional Neural Networks (CNN) are layered information processing architectures. Each of the layers in a CNN is itself the composition of a convolution operation with a pointwise nonlinearity where the filters used at different layers are the outcome of a data-driven optimization process (LeCun et al., 2010; 2015). Scattering transforms have an analogous layered architecture but differ from CNNs in that the convolutional filters used at different layers are not trained but selected from a multi-resolution filter bank (Mallat, 2012; Bruna & Mallat, 2013). The fact that they are not trained endows scattering transforms with intrinsic value in situations where training is impossible ­ and inherent limitations in the converse case. That said, an equally important value of scattering transforms is that by isolating the convolutional layered architecture from training effects it permits analysis of the fundamental properties of CNN information processing architectures. This analysis is undertaken in Mallat (2012); Bruna & Mallat (2013) where the fundamental conclusion is about the stability of scattering transforms with respect to deformations in the underlying domain that are close to translations.
In this paper we consider graphs and signals supported on graphs such as brain connectivity networks and functional activity levels (Huang et al., 2016), social networks and opinions (Jackson, 2008), or user similarity networks and ratings in recommendation systems (Huang et al., 2018). Our specific goals are: (i) To define a family of graph-scattering transforms. (ii) To define a notion of deformation for graph signals. (iii) To study the stability of graph scattering transforms with respect to this notion of deformation. To accomplish goal (i) we consider the family of graph diffusion wavelets which provide an appropriate construction of a multi-resolution filter bank (Coifman & Maggioni, 2006). Our diffusion scattering transforms are defined as the layered composition of diffusion wavelet filter banks and pointwise nonlinearities. To accomplish goal (ii) we adopt the graph diffusion distance as a measure of deformation of the underlying domain (Coifman & Lafon, 2006; Nadler et al., 2006). Diffusion distances measure the similarity of two graphs through the time it takes for a signal to be diffused on the graph. The major accomplishment of this paper is to show that the diffusion graph scattering transforms are stable with respect to deformations as measured with respect to diffusion distances. Specifically, consider a signal x supported on graph G whose diffusion scattering transform is denoted by the operator G. Consider now a deformation of the signal's domain so that the signal's support is now described by the graph G whose diffusion scattering operator is G . We show that the operator distance G - G is bounded by a constant multiplied by the diffusion distance between the graphs G and G . The constant in this bound depends on the spectral gap of G but, very importantly, does not depend on the number of nodes in the graph.
It is important to point out that finding stable representations is not difficult. E.g., taking signal averages is a representation that is stable to domain deformations ­ indeed, invariant. The challenge
1

Under review as a conference paper at ICLR 2019
is finding a representation that is stable and rich in its description of the signal. In our numerical analyses we show that linear filters can provide representations that are either stable or rich but that cannot be stable and rich at the same time. The situation is analogous to (Euclidean) scattering transforms and is also associated with high frequency components. We can obtain a stable representation by eliminating high frequency components but the representation loses important signal features. Alternatively, we can retain high frequency components to have a rich representation but that representation is unstable to deformations. Diffusion scattering transforms are observed to be not only stable ­ as predicted by our theoretical analysis ­ but also sufficiently rich to achieve good performance in graph signal classification examples.
2 RELATED WORK
Since graph and graph signals are of increasing interest but do not have the regular structure that would make use of CNNs appealing, it is pertinent to ask the question of what should be an appropriate generalization of CNNs to graphs and the graph signals whose topology they describe (Bronstein et al., 2017). If one accepts the value of convolutions as prima facie, a natural solution is to replace convolutions with graph shift invariant filters which are known to be valid generalizations of (convolutional) time invariant filters (Bruna et al., 2014). This idea is not only natural but has been demonstrated to work well in practical implementations of Graph Neural Networks (GNNs) (Defferrard et al., 2016; Gama et al., 2018; Gilmer et al., 2017; Henaff et al., 2015; Kipf & Welling, 2017). Same as Euclidean scattering transforms, our graph scattering transforms differ from GNNs in that they do not have to be trained. The advantages and limitations of the absence of training notwithstanding, our work also sheds light on the question of why graph convolutions are appropriate generalizations of regular domain convolutions for signal classification problems. Our work suggests that the value of GNNs stems from their stability relative to deformations of the underlying domain that are close to permutations ­ which is the property that a pair of graphs must satisfy to have small diffusion distance.
The stability results obtained in this paper build on the notion of scattering transforms. These scattering representations were introduced by Mallat (2012) and further developed in Bruna & Mallat (2013) with computer vision applications. Since, these representations have been extended to handle transformations on more complex groups, such as roto-translations (Sifre & Mallat, 2013; Oyallon & Mallat, 2015), and to domains such as audio processing (Ande´n & Mallat, 2014) and quantum chemistry (Eickenberg et al., 2017).
Similarly as in this work, extensions of scattering to general graphs have been considered in Chen et al. (2014) and Zou & Lerman (2018). Chen et al. (2014) focuses on Haar wavelets that hierarchically coarsen the graph, and relies on building multiresolution pairings. The recent Zou & Lerman (2018) is closest to our work. There, the authors define graph scattering using spectrally constructed wavelets from (Hammond et al., 2011), and establish some properties of the resulting representation, such as energy conservation and stability to spectral perturbations. In contrast, our stability results are established with respect to diffusion metric perturbations, which are generally far weaker. We use diffusion wavelets (Coifman & Maggioni, 2006) to obtain multi-resolution graph filter banks that are localized in frequency as well as in the graph domain, while spanning the whole spectrum. Diffusion wavelets serve as the constructive basis for the obtained stability results. Our work is also closely related to recent analysis of stability of Graph Neural Networks in the context of surface representations in (Kostrikov et al., 2017). In our work, however, we do not rely on extrinsic deformations and exploit the specific multiresolution structure of wavelets.
3 PROBLEM SET-UP
This section introduces our framework and states the desired stability properties of signal representations defined on general non-Euclidean domains.
3.1 EUCLIDEAN STABILITY TO DEFORMATIONS WITH SCATTERING
Motivated by computer vision applications, our analysis starts with the notion of deformation stability. If x(u)  L2() is an image defined over an Euclidean domain   Rd, we are interested
2

Under review as a conference paper at ICLR 2019

in signal representations  : L2()  RK that are stable with respect to small deformations. If
x (u) := x(u -  (u)) denotes a change of variables with a differentiable field  :    such that  < 1, then we ask

 x,  , (x) - (x ) x  , with

(1)

 :=   denoting a uniform bound on the operator norm of  . In this setting, a notorious challenge to achieving (1) while keeping enough discriminative power in (x) is to transform the
high-frequency content of x in such a way that it becomes stable.

Scattering transforms (Mallat, 2012; Bruna & Mallat, 2013) provide such representations by cas-
cading wavelet decompositions with pointwise modulus activation functions. We briefly summarize here their basic definition. Given a mother wavelet   L1() with at least a vanishing mo-
ment (u)du = 0 and with good spatial localization, we consider rotated and dilated versions j,c(u) = 2-jd(2-jRcu) using scale parameter j and angle   {2c/C}c=0,...,C-1. A wavelet decomposition operator is defined as a filter bank spanning all scales up to a cutoff 2J and all angles: J : x  (x  j,c)jJ,cC . This filter bank is combined with a pointwise modulus activation function (z) = |z|, as well as a low-pass average pooling operator U computing the average over
the domain. The resulting representation using m layers becomes

(x) = {S0(x), S1(x), . . . , Sm-1(x)} , with

(2)

Sk(x) = U J  . . . J x = {U (||x  1 |  2 | · · ·  k |); }1,...,k (k = 0, . . . , m - 1).

The resulting signal representation has the structure of a CNN, in which feature maps are not recombined with each other, and trainable filters are replaced by multiscale, oriented wavelets. It is shown in Mallat (2012) that for appropriate signal classes and wavelet families, the resulting scattering transform satisfies a deformation stablity condition of the form (1), which has been subsequently generalised to broader multiresolution families (Wiatowski & Bo¨lcskei, 2018). In essence, the mechanism that provides stability is to capture high-frequency information with the appropriate spatio-temporal tradeoffs, using spatially localized wavelets.

3.2 DEFORMATIONS AND METRIC STABILITY
Whereas deformations provide the natural framework to describe geometric stability in Euclidean domains, their generalization to non-Euclidean, non-smooth domains is not straightforward.
Let x  L2(X ). If X is embedded into a low-dimension Euclidean space   Rd, such as a 2surface within a three-dimensional space, then one can still define meaningful deformations on X via extrinsic deformations of  (Kostrikov et al., 2017). However, in this work we are interested in intrinsic notions of geometric stability, that do not necessarily rely on a pre-existent low-dimensional embedding of the domain.
The change of variables (u) = u -  (u) defining the deformation can be seen as a perturbation of the Euclidean metric in L2(Rd). Indeed,
x , y L2(Rd,µ) = x (u)y (u)dµ(u) = x(u)y(u)|I -  (u)|dµ(u) = x, y L2(Rd,µ~) ,
Rd Rd
with dµ~(u) = |I -  (u)|dµ(u), and |I -  (u)|  1 if  is small, where I is the identity. Therefore, a possible way to extend the notion of deformation stability to general domains L2(X ) is to think of X as a metric space and reason in terms of stability of  : L2(X )  RK to metric changes in X . This requires a representation that can be defined on generic metric spaces, as well as a criteria to compare how close two metric spaces are.

3.3 DIFFUSION WAVELETS AND METRICS ON GRAPHS
Graphs are flexible data structures that enable general metric structures and modeling non-Euclidean domains. The main ingredients of the scattering transform can be generalized using tools from computational harmonic analysis on graphs.
In particular, diffusion wavelets (Coifman & Maggioni, 2006) provide a simple framework to define a multi-resolution analysis from powers of a diffusion operator defined on a graph. A weighted,

3

Under review as a conference paper at ICLR 2019

undirected graph G = (V, E, W ) with |V | = n nodes, edge set E and adjacency matrix W  Rn×n defines a diffusion process A in its nodes, given in its symmetric form by the normalized adjacency

A := D-1/2W D-1/2 , with D = diag(d1, . . . , dn) ,

(3)

where di = (i,j)E Wi,j denotes the degree of node i. Denote by d = W 1 the degree vector
containing di in the ith element. By construction, A is well-localized in space, it is self-adjoint and satisfies A  1. Let 0  1  . . . n-1 denote its eigenvalues in decreasing order. Defining d1/2 = ( d1, . . . , dn), one can easily verify that the normalized squared root degree vector v = d1/2/ d1/2 2 = d/ d 1 is the eigenvector with associated eigenvalue 0 = 1. Also, note that n-1 = -1 if and only if G has a connected component that is non-trivial and bipartite (Chung,
1997).

In the following, it will be convenient to assume that the spectrum of A (which is real and discrete

since A is self-adjoint and in finite-dimensions) is non-negative. Since we shall be taking powers

of A, this will avoid folding negative eigenvalues into positive ones, and facilitates doing functional

calculus

on

T.

For

that

purpose,

we

adopt

the

so-called

lazy diffusion,

given

by

T

=

1 2

(I

+ A).

In

Section 4 we use this diffusion operator to define both a multiscale wavelet filter bank and a low-pass

average pooling, leading to the diffusion scattering representation.

This diffusion operator can also be used to construct a metric on G. The so-called diffusion distances
(Coifman & Lafon, 2006; Nadler et al., 2006) measure distances between two nodes x, x  V in terms of their associated diffusion at time s: dG,s(x, x ) = TGs x - TGs x , where x is a vector with all zeros except a 1 in position x.

In this work, we build on this diffusion metric to define a distance between two graphs G, G . Assuming first that G and G have the same size, the simplest formulation is to compare the diffusion metric generated by G and G up to a node permutation:
Definition 3.1. Let G = (V, E, W ), G = (V , E , W ) have the same size |V | = |V | = n. The normalized diffusion distance between graphs G, G at time s > 0 is

ds(G, G ) := inf
n

(TGs )(TGs ) - T(TGs )(TGs )

= inf
n

TG2s - TTG2s

,

where n is the space of n × n permutation matrices.

(4)

The diffusion distance is defined at a specific time s. As s increases, this distance becomes weaker1, since it compares points at later stages of diffusion. The role of time is thus to select the smoothness of the `graph deformation', similarly as  measures the smoothness of the deformation in the Euclidean case. For convenience, we denote d(G, G ) = d1/2(G, G ) and use the distance at s = 1/2 as our main deformation measure. The quantity d defines a distance between graphs (seen as metric spaces) stronger than other alternatives such as the Gromov-Hausdorff distance, defined as

dGs H(G,

G

)

=

inf


sup
x,x V

|dsG(x, x

)

-

dGs

((x), (x

))|

with dGs (x, x ) = TGt (x - x ) L2(G) . We choose d(G, G ) in this work for convenience, but leave for future work the study of stability relative to dsGH. Finally, we consider for simplicity only the case where the sizes of G and G are equal, but definition (3.1) can be naturally extended to compare variable-sized graphs by replacing permutations by soft-correspondences (see Bronstein et al., 2010).

3.4 PROBLEM STATEMENT

Our goal is to build a stable and rich representation G(x). The stability property is stated in terms of the diffusion metric above: For a chosen diffusion time s,  x  Rn , G = (V, E, W ), G = (V , E , W ) with |V | = |V | = n , we want

G(x) - G (x)

x ds(G, G ) .

(5)

1In the sense that it defines a weaker topology, i.e., limm ds(G, Gm)  0  limm ds (G, Gm) = 0 for s > s, but not vice-versa.

4

Under review as a conference paper at ICLR 2019

This representation can be used to model both signals and domains, or just domains G, by considering a prespecified x = f (G), such as the degree, or by marginalizing from an exchangeable distribution, G = ExQG(x).
The motivation of (5) is two-fold: On the one had, we are interested in applications where the signal of interest may be measured in dynamic environments that modify the domain, e.g. in measuring brain signals across different individuals. On the other hand, in other applications, such as building generative models for graphs, we may be interested in representing the domain G itself. A representation from the adjacency matrix of G needs to build invariance to node permutations, while capturing enough discriminative information to separate different graphs. In particular, and similarly as with Gromov-Hausdorff distances, the definition of d(G, G ) involves a matching problem between two kernel matrices, which defines an NP-hard combinatorial problem. This further motivates the need for efficient representations of graphs G that can efficiently tell apart two graphs, and such that () = G - G() can be used as a differentiable loss for training generative models.

4 GRAPH DIFFUSION SCATTERING

Let T be a lazy diffusion operator associated with a graph G of size n such as those described in
Section 3.3. Following Coifman & Maggioni (2006), we construct a family of multiscale filters by exploiting the powers of the diffusion operator T 2j . We define

0 := I - T , j := T 2j-1 (I - T 2j-1 ) = T 2j-1 - T 2j , (j > 0) .

(6)

This corresponds to a graph wavelet filter bank with optimal spatial localization. The finest scale 0 corresponds to one half of the normalized Laplacian operator 0 = (1/2) = 1/2(I - D-1/2W D-1/2), here seen as a temporal difference in a diffusion process. The coarser scales j capture temporal differences at increasingly spaced diffusion times. For j = 0, . . . , Jn - 1, we consider the linear operator

 : L2(G)  (L2(G))Jn x  (j x)j=0,...,Jn-1 ,

(7)

which is the analog of the wavelet filter bank in the Euclidean domain. Whereas several other options exist to define graph wavelet decompositions (Rustamov & Guibas, 2013; Gavish et al., 2010), and GNN designs that favor frequency localization, such as Cayley filters (Levie et al., 2017), we consider here wavelets that can be expressed with few diffusion terms, favoring spatial over frequential localization, for stability reasons that will become apparent next. We choose dyadic scales for convenience, but the construction is analogous if one replaces scales 2j by j for any  > 1 in (6).

If the graph G exhibits a spectral gap, i.e., G = supi=1,...n-1 |i| < 1, the following proposition proves that the linear operator  defines a stable frame.

Proposition 4.1. For each n, let  define the diffusion wavelet decomposition (7) and assume G < 1. Then there exists a constant 0 < C() depending only on  such that for any x  Rn
satisfying x, v = 0,

Jn -1

C() x 2 

j x 2  x 2 .

(8)

j=0

This proposition thus provides the Littlewood-Paley bounds of , which control the ability of the

filter bank to capture and amplify the signal x along each `frequency'. It also informs us about how

the spectral gap  determines the appropriate diffusion scale J: The maximum of p(u) = (ur-u2r)2

is

at

u

=

2-1/r ,

thus

the

cutoff

r

should

align

with



as

r

=

-1 log2 

,

therefore

the

maximum

scale

can be adjusted as J = 1 + log2 r

=1+

log2

-1 log2 

.

Recall that the Euclidean Scattering transform is constructed by cascading three building blocks: a
wavelet decomposition operator, a pointwise modulus activation function, and an averaging operator. Following the Euclidean scattering, given a graph G and x  L2(G), we define an analogous

5

Under review as a conference paper at ICLR 2019

Diffusion Scattering transform G(x) by cascading three building blocks: the Wavelet decomposition operator , a pointwise activation function , and an average operator U which extracts the

average over the domain. The average over a domain can be interpreted as the diffusion at inifite time, thus U x = limt T tx = vT, x . More specifically, we consider a first layer transformation
given by

1(G, x) = U x = {U j x}0jJn-1 , ,

(9)

followed by second order coefficients

2(G, x) = U x = {U j2 j1 x}0j1,j2Jn-1 , , and so on. The representation obtained from m layers of such transformation is thus

(10)

G(x) = {U x, 1(G, x), . . . , m-1(G, x)} = {U ()kx ; k = 0, . . . , m - 1} . (11)

5 STABILITY OF GRAPH DIFFUSION SCATTERING

5.1 STABILITY AND EQUIVARIANCE OF DIFFUSION WAVELETS

Given two graphs G, G of size n and a signal x  Rn, our objective is to bound G(x) - G (x) in terms of d(G, G ). Let  the permutation minimising the distortion between G and G in (4). Since all operations in  are either equivariant or invariant with respect to permutations, we can assume w.l.o.g. that  = 1. A key property of G that drives the stability of the diffusion scattering is given by its spectral gap G = supi=1,...n-1 |i|  1. In the following, we use 2 operator norms, unless stated otherwise.
Lemma 5.1. Assume  := max(G, G ) < 1. Then

inf G - G T  2d(G, G )
n

2(1 + 2) (1 - 2)3 .

(12)

Remark: If diffusion distance is measured at time different from s = 1/2, the stability bound would be modified due to scales j such that 2j < s. The following lemma studies the stability of the low-pass operator U with respect to graph perturbations.
Lemma 5.2. Let G, G be two graphs with same size, denote by v and v their respective squaredroot degree vectors, and by ,  their spectral gap. Then

inf v - v 2  2 d(G, G ) .

n

1 - min(,  )

(13)

5.2 STABILITY AND INVARIANCE OF DIFFUSION SCATTERING

The scattering transform coefficients G(x) obtained after m layers are given by equation 11, for low-pass operator U such that U x = v, x so that U = vT.

From Lemma 5.1 we have that, G - G  . We also know, from Proposition 4.1 that  conforms a frame, i.e. C() x 2  x 2  x 2 for known constant C() given in Prop. 4.1. Additionally, from Lemma 5.2 we get that UG - UG  U .

The objective now, is to prove stability of the scattering coefficients G(x), that is, to prove that

G(x) - G (x) d(G, G ) x .

(14)

Theorem 5.3. Let G, G be two graphs and let d(G, G ) be their distance measured as in equation 4.
Let TG and TG be the respective diffusion operators. Denote by UG, G and G and by UG , G and G the low pass operator, pointwise nonlinearity and the wavelet filter bank used on the scattering transform defined on each graph, respectively, cf. equation 11. Let - = min(G, G ), + = max(G, G ) and assume + < 1. Then, we have that, for each k = 0, . . . , m - 1, the following holds

UG(GG)k - UG (G G )k 

2 1/2

1 - - d(G, G )

+k

+2 (1 + +2 ) (1 - +2 )3

d(G,

G

)

.

(15)

6

Under review as a conference paper at ICLR 2019

Then, given that G(x) =

m-1 k=0

UG(GG)k

by definition, it is straightforward to compute

the stability bound on the scattering coefficients as follows.

Corollary 5.4. In the context of Theorem 5.3, let x  Rn and let G(x) be the scattering coefficients computed by means of equation 11 on graph G after m layers, and let G (x) be the corresponding coefficients on graph G . Then,

G(x) - G (x)



2 1 - - d(G, G )

d1/2(G, G ) x

1/2 m-1
x+ k
k=0
if d(G, G ) 1.

+2 (1 + +2 ) (1 - +2 )3

d(G,

G

)

x

(16)

Corollary 5.4 satisfies equation 5. It also shows that the closer the graphs are in terms of the diffusion metric, the closer their scattering representations will be. The constant is given by topological properties, the spectral gaps of G and G , as well as design parameters, the number of layers m. We observe that the stability bound grows the larger the spectral gap is and also as more layers are considered. Finally, we note that the size of the graphs impacts the stability result inasmuch as it impacts the distance measure d(G, G ). This is expected, since graphs of different size can be compared, as mentioned in Section 3.3. Different from Zou & Lerman (2018), our focus is on obtaining graph wavelet banks that are localized in the graph domain to improve computational efficiency as discussed in Defferrard et al. (2016). We also notice that the scattering transform in Zou & Lerman (2018) is stable with respect to a graph measure that depends on the spectrum of the graph through both eigenvectors and eigenvalues. More specifically, it is required that the spectrum gets concentrated as the graphs grow. However, in general, it is not straightforward to relate the topological structure of the graph with its spectral properties.
As mentioned in Section 3.3, the stability is computed with a metric d(G, G ) which is stronger than what could be hoped for. Our metric is permutation-invariant, in analogy with the rigid translation invariance in the Euclidean case, and stable to small perturbations around permutations. The extension of (16) to weaker metrics, using e.g. multiscale deformations, is left for future work.

5.3 FROM DIFFUSION SCATTERING TO DIFFUSION GNNS

By denoting Tj = T 2j , observe that one can approximate the diffusion wavelets from (6) as a cascade of low-pass diffusions followed by a high-pass filter at resolution 2j:



j = Tj-1(I - Tj-1)  T j <j-1 2j (I - Tj-1) = 

Tj  (I - Tj-1) .

j <j-1

This pyramidal structure of multi-resolution analysis wavelets -- in which each layer now corre-

sponds to a different scale, shows that the diffusion scattering is a particular instance of GNNs

where each layer j is generated by the pair of operators {I, Tj-1}. If x(j)  Rn×dj denotes the feature representation at layer j using dj feature maps per node, the corresponding update is given by

x(j+1) =  x(j)1(j) + Tj-1x(j)2(j) ,

(17)

where 1(j), 2(j) are dj × dj+1 weight matrices. In this case, a simple modification of the previous
theorem shows that the resulting GNN representation G(x, ),  = (1(j), 2(j))jJ is also stable with respect to d(G, G ):

Corollary 5.5. The J layer GNN with parameters  = (1(j), 2(j))jJ satisfies

 2

G(x, ) - G (x, )



d(G,

G

)

1

x -





(1 + 1(j) + 2(j) ) .

jJ

(18)

6 NUMERICAL EXPERIMENTS
In this section, we illustrate the discriminative power of the diffusion scattering transform in two different classification tasks; namely, the problems of authorship attribution and source localization.

7

Under review as a conference paper at ICLR 2019

(a) Authorship attribution

(b) Source localization on Facebook graph

Figure 1. Classification error percentage as a function of perturbation.

For classifying we train an SVM linear model fed by features obtained from different representations. The baselines for comparison are a non-graph based method (using training data ­graph signals­ to feed a SVM classifier) and a graph-based method (obtaining the GFT coefficients as features for the data). Additionally, we consider the graph scattering with varying depth to analyze the richness of the representation.
First, we consider the problem of authorship attribution where the main task is to determine if a given text was written by a certain author. We construct author profiles by means of word adjacency networks (WAN). This WAN acts as the underlying graph support for the graph signal representing the word count (bag-of-words) of the target text of unknown authorship. Intuitively, the choice of words of the target text should reflect the pairwise connections in the WAN, see Segarra et al. (2015) for detailed construction of WANs. In particular, we consider all works by Jane Austen. To illustrate the stability result, we construct a WAN with 188 nodes (functional words) using a varying number of texts to form the training set, obtaining an array of graphs that are similar but not exactly the same. For the test set, we include 154 excerpts by Jane Austen and 154 excerpts written by other contemporary authors, totaling 308 data points. Fig. 1a shows classification error as a function of the number of training samples used. We observe that graph scattering transforms monotonically improve while considering more training data, whereas other methods vary more erratically, showing their lack of stability (their representations vary more wildly when the underlying graph support changes). This shows that scattering diffusion transforms strike a good balance between stability and discriminative power and require limited amount of training data.
For the second task, let G be a 234-node graph modeling real-world Facebook interactions (McAuley & Leskovec, 2012). In the source localization problem, we observe a diffusion process after some unknown time t, that originated at some unknown node i, i.e. we observe x = W ti, where i is the signal with all zeros except a 1 on node i. The objective is to determine which community the source node i belongs to. These signals can be used to model rumors that percolate through the social network by interaction between users and the objective is to determine which user group generated said rumor (or initiated a discussion on some topic).
We generate a training sample of size 2, 000, for nodes i chosen at random and diffusion times t chosen as random as well. The GFT is computed by projecting on the eigenbasis of operator T . We note that, to avoid numerical instabilities, the diffusion is carried out using the normalized operator (W/max(W )) and t  tmax = 20. The representation coefficients (graph signals, GFT or scattering coefficients) obtained from this set are used to train different linear SVMs to perform classification. For the test set, we draw 200 new signals. We compute the classification errors on the test set as a measure of usefulness of the obtained representations. Results are presented in Fig. 1b, where perturbations are illustrated by dropping edges with probability p (adding or removing friends in Facebook).
Finally, to remark the discriminative power of the scattering representation, we observe that as the graph scattering grows deeper, the obtained features help in more accurate classification. Also, for 3 layers, the graph scattering outperforms the other methods.
8

Under review as a conference paper at ICLR 2019
7 CONCLUSIONS
In this work we addressed the problem of stability of graph representations. We designed a scattering transform of graph signals using diffusion wavelets and we proved that this transform is stable under deformations of the underlying graph support. More specifically, we showed that the scattering transform of a graph signal supported on two different graphs is proportional to the diffusion distance between those graphs. As a byproduct of our analysis, we obtain stability bounds for Graph Neural Networks generated by diffusion operators. Additionally, we showed that the resulting descriptions are also rich enough to be able to adequately classify plays by author in the context of authorship attribution, and identify the community origin of a signal in a source localization problem. In both cases, graph scattering transforms outperform both graph and non-graph baselines.
That said, there are a number of directions to build upon from these results. First, our stability bounds depend on the spectral gap of the graph diffusion. Although lazy diffusion prevents this spectral gap to vanish as the size of the graph increases, it may come at the cost of losing discriminative power. An important direction of future research is thus to develop stability bounds which are robust to vanishing spectral gaps. Next, and related to this first point, we are interested in extending the analysis to broader families of wavelet decompositions on graphs and their corresponding graph neural network versions, including stability with respect to the Gromov-Hausdorff metric.
REFERENCES
J. Ande´n and S. Mallat. Deep scattering spectrum. IEEE Trans. Signal Process., 62(16):4114­4128, Aug. 2014.
A. M. Bronstein, M. M. Bronstein, R. Kimmel, M. Mahmoudi, and G. Sapiro. A Gromov-Hausdorff framework with diffusion geometry for topologically-robust non-rigid shape matching. Int. J. of Comput. Vision, 89(2-3):266­286, 2010.
M. M. Bronstein, J. Bruna, Y. LeCun, A. Szlam, and P. Vandergheynst. Geometric deep learning: Going beyond euclidean data. IEEE Signal Process. Mag., 34(4):18­42, July 2017.
J. Bruna and S. Mallat. Invariant scattering convolution networks. IEEE Trans. Pattern Anal. Mach. Intell., 35(8):1872­1886, Aug. 2013.
J. Bruna, W. Zaremba, A. Szlam, and Y. LeCun. Spectral networks and deep locally connected networks on graphs. arXiv:1312.6203v3 [cs.LG], 21 May 2014. URL http://arxiv.org/ abs/1213.6203.
X. Chen, X. Cheng, and S. Mallat. Unsupervised deep Haar scattering on graphs. In Annu. Conf. Neural Inform. Process. Syst. 2014, Montre´al, QC, 8-13 Dec. 2014. NIPS Foundation.
F. R. K. Chung. Spectral Graph Theory. Number 92 in Conference Board of the Mathematical Sciences: Regional Conference Series in Mathematics. American Mathematical Society, Providence, RI, 1997.
R. R. Coifman and S. Lafon. Diffusion maps. Appl. Comput. Harmonic Anal., 21(1):5­30, July 2006.
R. R. Coifman and M. Maggioni. Diffusion wavelets. Appl. Comput. Harmonic Anal., 21(1):53­94, July 2006.
M. Defferrard, X. Bresson, and P. Vandergheynst. Convolutional neural networks on graphs with fast localized spectral filtering. In Annu. Conf. Neural Inform. Process. Syst. 2016, Barcelona, Spain, 5-10 Dec. 2016. NIPS Foundation.
M. Eickenberg, G. Exarchakis, M. Hirn, and S. Mallat. Solid harmonic wavelet scattering: Predicting quantum molecular energy from invariant descriptors of 3d electronic densities. In Annu. Conf. Neural Inform. Process. Syst. 2017, Long Beach, CA, 4-9 Dec. 2017. NIPS Foundation.
F. Gama, A. G. Marques, G. Leus, and A. Ribeiro. Convolutional neural network architectures for signals supported on graphs. arXiv:1805.00165v1 [eess.SP], 1 May 2018. URL http: //arxiv.org/abs/1805.00165.
9

Under review as a conference paper at ICLR 2019
M. Gavish, B. Nadler, and R. R. Coifman. Multiscale wavelets on trees, graphs and high dimensional data: Theory and applications to semi supervised learning. In 27th Int. Conf. Mach. Learning, Haifa, Israel, 21-24 June 2010.
J. Gilmer, S. S. Schoenholz, P. F. Riley, O. Vinyals, and G. E. Dahl. Neural message passing for quantum chemistry. In 34th Int. Conf. Mach. Learning, Sydney, Australia, 6-11 Aug. 2017.
D. K. Hammond, P. Vandergheynst, and R. Gribonval. Wavelets on graphs via spectral graph theory. Appl. Comput. Harmonic Anal., 30(2):129­150, March 2011.
M. Henaff, J. Bruna, and Y. LeCun. Deep convolutional networks on graph-structured data. arXiv:1506.051631v1 [cs.LG], 16 June 2015. URL http://arxiv.org/abs/1506. 05163.
W. Huang, L. Goldsberry, N. F. Wymbs, S. T. Grafton, D. S. Bassett, and A. Ribeiro. Graph frequency analysis of brain signals. IEEE J. Select. Topics Signal Process., 10(7):1189­1203, Oct. 2016.
W. Huang, A. G. Marques, and A. Ribeiro. Matrix completion via graph signal processing. In 43rd IEEE Int. Conf. Acoust., Speech and Signal Process., Calgary, AB, 15-20 Apr. 2018. IEEE.
M. O. Jackson. Social and Economic Networks. Princeton University Press, Princeton, NJ, 2008.
T. N. Kipf and M. Welling. Semi-supervised classification with graph convolutional networks. In 5th Int. Conf. Learning Representations, Toulon, France, 24-26 Apr. 2017. Assoc. Comput. Linguistics.
I. Kostrikov, J. Bruna, D. Panozzo, and D. Zorin. Surface networks. arXiv:1705.10819v1 [stat.ML], 30 May 2017. URL http://arxiv.org/abs/1705.10819.
Y. LeCun, K. Kavukcuoglu, and C. Farabet. Convolutional networks and applications in vision. In 2010 IEEE Int. Symp. Circuits and Syst., Paris, France, 30 May-2 June 2010. IEEE.
Y. LeCun, Y. Bengio, and G. Hinton. Deep learning. Nature, 521(7553):85­117, 2015.
R. Levie, F. Monti, X. Bresson, and M. M. Bronstein. Cayleynets: Graph convolutional neural networks with complex rational spectral filters. arXiv:1705.07664v1 [cs.LG], 22 May 2017. URL http://arxiv.org/abs/1705.07664.
S. Mallat. Group invariant scattering. Communications on Pure and Applied Mathematics, 65(10): 1331­1398, 2012.
J. McAuley and J. Leskovec. Learning to discover social circles in Ego networks. In 26th Annu. Conf. Neural Inform. Process. Syst., Stateline, TX, 3-8 Dec. 2012. NIPS Foundation.
B. Nadler, S. Lafon, I. Kevrekidis, and R. R. Coifman. Diffusion maps, spectral clustering and eigenfunctions of fokker-planck operators. In Annu. Conf. Neural Inform. Process. Syst. 2006, Vancouver, BC, 4-9 Dec. 2006. NIPS Foundation.
E. Oyallon and S. Mallat. Deep roto-translation scattering for object classification. In IEEE Comput. Soc. Conf. Comput. Vision and Pattern Recognition 2015, Boston, MA, 7-12 June 2015. IEEE Comput. Soc.
R. Rustamov and L. J. Guibas. Wavelets on graphs via deep learning. In Annu. Conf. Neural Inform. Process. Syst. 2013, Lake Tahoe, NV, 5-10 Dec. 2013. NIPS Foundation.
S. Segarra, M. Eisen, and A. Ribeiro. Authorship attribution through function word adjacency networks. IEEE Trans. Signal Process., 63(20):5464­5478, Oct. 2015.
L. Sifre and S. Mallat. Rotation, scaling and deformation invariant scattering for texture discrimination. In IEEE Comput. Soc. Conf. Comput. Vision and Pattern Recognition 2013, Portland, OR, 23-28 June 2013. IEEE Comput. Soc.
T. Wiatowski and H. Bo¨lcskei. A mathematical theory of deep convolutional neural networks for feature extraction. IEEE Trans. Inf. Theory, 64(3):1845­1866, 2018.
D. Zou and G. Lerman. Graph convolutional neural networks via scattering. arXiv:1804.00099v1 [cs.IT], 31 March 2018. URL http://arxiv.org/abs/1804.00099.
10

Under review as a conference paper at ICLR 2019

A PROOF OF PROPOSITION 4.1

Since all operators j are polynomials of the diffusion T , they all diagonalise in the same basis. Let T = V V T, where V TV = I contains the eigenvectors of T and  = diag(0, . . . , n-1) its eigenvalues. The frame bounds C1, C2 are obtained by evaluating x 2 for x = vi, i = 1, . . . , n- 1, since v0 corresponds to the square-root degree vector and x is by assumption orthogonal to v0.

We verify that the spectrum of j is given by (pj(0), . . . , pj(n-1)), where pj(x) = x2j-1 - x2j

for j > 0 and p0(x) = 1 - x. Denote by QJ (x) =

J -1 j=0

pj (x)2 .

It

follows

from

the

definition

that

vi 2 = QJ (i) for i = 1, . . . , n - 1 and therefore

C1 = min QJ (x) , C2 = max QJ (x) .

x(0,1-)

x(0,1-)

(19)

We verify that by Q(x) =

C1
j=0

= pj

QJ (1 (x)2.

- ) > (1 - )2(1 + One easily verifies that

2) > 0 Q(x) is

and C2 = continuous

QJ (0) = 1. Indeed, denote in [0, 1) since it is bounded

by a geometric series. Also, observe that Q(x) = (1 - x)2 + j>0(x2j-1 - x2j )2 satisfies the

recurrence

Q(x2) = Q(x) + 2x(1 - x)2  Q(x)

since x  [0, 1). By continuity it thus follows that

sup
x[0,1)

QJ

(x)



sup
x[0,1)

Q(x)

=

lim
x0

Q(x)

=

Q(0)

=

1

B PROOF OF LEMMA 5.1

By definition G - G 2 = [G - G ][G - G ] and

Jn -1

[G - G ][G - G ] =

(j(G) - j(G ))(j(G) - j(G )) .

j=0

(20)

Since TG and TG are self-adjoint, so are j(G) and j(G ). From the triangular inequality, we thus

obtain

G - G 2 

j(G) - j(G ) 2 .

(21)

j

Denote by v the eigenvector associated with 0 = 1, [v]i = (di/

n j=1

dj )1/2.

Since



<

1,

we

can

write T = vvT + T with T < 1 and v  Null(T ). It follows by induction that T r = vvT + T r,

and hence

j (G)

=

T 2j-1
G

- TG2j

=

T 2j-1
G

-

T

2j G

,

and equivalently for G , resulting in

j(G) - j(G ) 2  2

T 2j-1
G

-

T 2j-1
G

2+

T

2j G

-

T

2j G

2

,

and thus

G - G 2  4

T

2j G

-

T

2j G

2.

(22)

j

Let us show that for matrices A and B such that  = max( A , B ) < 1 and r  N, one has

Ar - Br  rr-1 A - B .

(23)

Indeed, by noting g(t) = (tB + (1 - t)A)r, we have

11

Ar - Br = g(1) - g(0) =

g (t)dt 

g (t) dt  sup g (t) .

0 0 t(0,1)

By noting At = tB + (1 - t)A we verify that

r-1
g (t) = Atl (B - A)Atr-l-1 ,
l=0

A1

Under review as a conference paper at ICLR 2019

which results in g (t)  rr-1 B - A , proving (23).

By plugging (23) into (22) we thus obtain

G - G 2  4 T G - T G 2

22j 2j+1

j

 4 T G - T G 2 t2(2)t

t



4 TG -TG

2 2(1 + 2) (1 - 2)3

,

(24)

which yields G - G  2 T G - T G TG - TG , which proves (12) as claimed.

 2 (1+ 2 ) (1- 2 )3

.

Finally,

we

observe

that

TG - TG

=

C PROOF OF LEMMA 5.2

Without loss of generality, assume that the node assignment that minimizes TG - TG  T is the identity. We need to bound the leading eigenvectors of two symmetric matrices TG and TG with a spectral gap. As before, let TG = vvT + T G and TG = v (v )T + T G . Let  = v, v  0
since both are non-negative vectors. Denote by E = TG - TG and E = T G - T G . Then E = vvT - v (v )T + E. Hence Ev = v - v  - T G (v - v ), so

(I - T G )(v - v ) = Ev

Since E  d(G, G ) and T G <  , we have

(1 - )(1 -  )  (I - T G )(v - v )  d(G, G ) ,

so Finally, since v - v

1

-





d(G, 1-

G 

)

.



= 2 - 2, we have

v-v

2



d(G, 2 1-

G 

)

.

(25)

Since we are free to swap the role of v and v , the result follows.

D PROOF OF THEOREM 5.3

First, note that G = G =  since it is a pointwise nonlinearity (an absolute value), and is independent of the graph topology. Now, let's start with k = 0. In this case, we get UGx - UG x
which is immediately bounded by Lemma 5.2 satisfying equation 15.

For k = 1 we have

UGGx - UG G x = UGGx - UG Gx + UG Gx - UG G x  (UG - UG )Gx + UG ((G - G )x)

(26) (27)

where the triangular inequality of the norm was used, together with the fact that u - u  (u - u ) for any real vector u since  is the pointwise absolute value. Using the submultiplica-
tivity of the operator norm, we get

UGGx - UG G x  UG - UG  G x + UG  G - G x . (28)
From Lemmas 5.1 and 5.2 we have that G - G   and UG - UG  U , and from Proposition 4.1 that G  1. Note also that UG = UG = 1 and that  = 1. This yields

UGGx - UG G x  U x +  x .

(29)

satisfying equation 15 for k = 1.

A2

Under review as a conference paper at ICLR 2019

For k = 2, we observe that

UGGGx - UG G G x

= UGGGx - UG GGx + UG GGx - UG G G x

(30)

 (UG - UG )GGx + UG (GGx - G G x)

(31)

The first term is bounded in a straightforward fashion by (UG - UG )GGx  U x in analogy to the development for k = 1. Since UG = 1, for the second term, we focus on

GGx - G G x = GGx - GG x + GG x - G G x (32)

 GGx - GG x + GG x - G G x

(33)

We note that, in the first term in equation 33, the first layer induces an error, but after that, the processing is through the same filter banks. So we are basically interested in bounding the propagation of the error induced in the first layer. Applying twice the fact that (u) - (u )  (u - u ) we get

GGx - GG x  (G(Gx - G x))  (G((G - G )x)) . (34)

And following with submultiplicativity of the operator norm,

GGx - GG x   x .

(35)

For the second term in equation 33, we see that the first layer applied is the same in both, namely
G so there is no error induced. Therefore, we are interested in the error obtained after the first layer, which is precisely the same error obtained for k = 1. Therefore,

GG x - G G x = Gx - G x   x .

(36)

Plugging equation 35 and equation 36 back in equation 31 we get

UGGGx - UG G G x  U x +  x +  x satisfying equation 15 for k = 2.

(37)

For general k we see that we will have a first term that is the error induced by the mismatch on the
low pass filter that amounts to U , a second term that accounts for the propagation through (k - 1) equal layers of an initial error, yielding , and a final third term that is the error induced by the previous layer, (k - 1). More formally, assume that equation 15 holds for k - 1, implying that

(G)k-1x - (G )k-1x  (k - 1) x

(38)

Then, for k, we can write

UG(G)kx-UG (G )kx  (UG-UG )(G)kx + UG ((G)kx-(G )kx) (39)

Again, the first term we bound it in a straightforward manner using submultiplicativity of the oper-

ator norm

(UG - UG )(G)kx  U x .

(40)

For the second term, since UG = 1 we focus on

(G)kx - (G )kx = (G)kx - (G)k-1G x + (G)k-1G x - (G )kx (41)

 (G)k-1Gx - (G)k-1G x + (G)k-1G x - (G )k-1G x (42)

The first term in equation 42 computes the propagation in the initial error caused by the first layer. Then, repeatedly applying (u) - (u )  (u - u ) in analogy with k = 2 and using submul-
tiplicativity, we get

(G)k-1Gx - (G)k-1G x   x .

(43)

The second term in equation 42 is the bounded by equation 38, since the first layer is the exactly the same in this second term. Then, combining equation 43 with equation 38, yields

(G)kx - (G )kx   + (k - 1) x = k x .

(44)

Overall, we get

UG(G)kx - UG (G )kx  U x +  x

(45)

which satisfies equation 15 for k. Finally, since this holds for k = 2, the proof is completed by

induction.

A3

Under review as a conference paper at ICLR 2019

E PROOF OF COROLLARY 5.5

Let us denote by ej = xG(j) - x(Gj) . From (17), from the triangle inequality we verify that

ej+1  aj ej + bj , with

It follows that

aj = 1(j) + 2(j) , bj = 2j-1 d(G, G ) x(Gj) and e0 = 0 .


J


J

 
J

eJ+1  

ai bj   (1 + aj)  bj ,

jJ i=j+1

j=1

j=1

(46)

and since


J
bj = 2j-1 d(G, G ) x(Gj)  2j-1 d(G, G ) x  (1 + aj ) ,
j=1

we obtain


J

2

eJ+1   (1 + aj) d(G, G ) x

j=1

 2

J
2j-1  

(1 + aj)

d(G, G )

x

1 1- ,

(47)

j j=1

as desired.

A4

