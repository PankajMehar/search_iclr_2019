Under review as a conference paper at ICLR 2019
FLUCTUATION-DISSIPATION RELATIONS FOR
STOCHASTIC GRADIENT DESCENT
Anonymous authors Paper under double-blind review
ABSTRACT
The notion of the stationary equilibrium ensemble has played a central role in statistical mechanics. In machine learning as well, training serves as generalized equilibration that drives the probability distribution of model parameters toward stationarity. Here, we derive stationary fluctuation-dissipation relations that link measurable quantities and hyperparameters in the stochastic gradient descent algorithm. These relations hold exactly for any stationary state and can in particular be used to adaptively set training schedule. We can further use the relations to efficiently extract information pertaining to a loss-function landscape such as the magnitudes of its Hessian and anharmonicity. Our claims are empirically verified.
1 INTRODUCTION
Equilibration rules the long-term fate of many macroscopic dynamical systems. For instance, as we pour water into a glass and let it be, the stationary state of tranquility is eventually attained. Zooming into the tranquil water with a microscope would reveal, however, a turmoil of stochastic fluctuations that maintain the apparent stationarity in balance. This is vividly exemplified by the Brownian motion (Brown, 1828): a pollen immersed in water is constantly bombarded by jittery molecular movements, resulting in the macroscopically observable diffusive motion of the solute. Out of the effort in bridging microscopic and macroscopic realms through the Brownian movement came a prototype of fluctuation-dissipation relations (Einstein, 1905; Von Smoluchowski, 1906). These relations quantitatively link degrees of noisy microscopic fluctuations to smooth macroscopic dissipative phenomena and have since been codified in the linear response theory for physical systems (Onsager, 1931; Green, 1954; Kubo, 1957), a cornerstone of statistical mechanics.
Machine learning begets another form of equilibration. As a model learns patterns in data, its performance first improves and then plateaus, again reaching apparent stationarity. This dynamical process naturally comes equipped with stochastic fluctuations as well: often given data too gigantic to consume at once, training proceeds in small batches and random selections of these mini-batches consequently give rise to the noisy dynamical excursion of the model parameters in the loss-function landscape, reminiscent of the Brownian motion. It is thus natural to wonder if there exist analogous fluctuation-dissipation relations that quantitatively link the noise in mini-batched data to the observable evolution of the model performance and that in turn facilitate the learning process.
Here, we derive such fluctuation-dissipation relations for the stochastic gradient descent algorithm. The only assumption made is stationarity of the probability distribution that governs the model parameters at sufficiently long time. Our results thus apply to generic cases with non-Gaussian mini-batch noises and nonconvex loss-function landscapes. Practically, the first relation (FDR1) offers the metric for assessing equilibration and yields an adaptive algorithm that sets learning-rate schedule on the fly. The second relation (FDR2) further helps us determine the properties of the lossfunction landscape, including the strength of its Hessian and the degree of anharmonicity, i.e., the deviation from the idealized harmonic limit of a quadratic loss surface and a constant noise matrix.
Our approach should be contrasted with recent attempts to import the machinery of stochastic differential calculus into the study of the stochastic gradient descent algorithm (Li et al., 2015; Mandt et al., 2017; Li et al., 2017; Smith & Le, 2018; Chaudhari & Soatto, 2017; Jastrzebski et al., 2017; Zhu et al., 2018; An et al., 2018). This line of work all assumes Gaussian noises and sometimes additionally employs the quadratic harmonic approximation for loss-function landscapes. The more
1

Under review as a conference paper at ICLR 2019

severe drawback, however, is the usage of the analogy with continuous-time stochastic differential equations, which is inconsistent in general (see Section 2.3.3). Instead, the stochastic gradient descent algorithm can be properly treated within the framework of the Kramers-Moyal expansion (Van Kampen, 1992; Gardiner, 2009; Risken, 1984; Radons et al., 1990; Leen & Moody, 1993).
The paper is organized as follows. In Section 2, after setting up notations and deriving a stationary fluctuation-dissipation theorem (FDT), we derive two specific fluctuation-dissipation relations. The first relation (FDR1) can be used to check stationarity and the second relation (FDR2) to delineate the shape of the loss-function landscape, as empirically borne out in Section 3. An adaptive scheduling method is proposed and tested in Section 3.3. We conclude in Section 4 with future outlooks.

2 FLUCTUATION-DISSIPATION RELATIONS

A model is parametrized by a weight coordinate,  = {i}i=1,...,P . The training set of Ns examples

is utilized by the model to learn patterns in the data and the model's overall performance is evaluated

by a full-batch loss function, f ()



1 Ns

Ns =1

f

(),

with

f

()

quantifying

the

performance

of the model on a particular sample : the smaller the loss is, the better the model is expected to

perform. The learning process can thus be cast as an optimization problem of minimizing the loss

function. One of the most commonly used optimization schemes is the stochastic gradient descent

(SGD) algorithm (Robbins & Monro, 1951) in which a mini-batch B  {1, 2, . . . , Ns} of size |B| is

stochastically chosen for training at each time step. Specifically, the update equation is given by

(t + 1) = (t) - f B [(t)] ,

(1)

where



>

0

is

a

learning

rate

and

a

mini-batch

loss

fB

()



1 |B|

B f (). Note that

f B () m.b. = f () ,

(2)

with . . . m.b. denoting the average over mini-batch realizations. For later purposes, it is convenient to define a full two-point noise matrix C through1

Ci,j ()  if B () j f B () m.b. and, more generally, higher-point noise tensors

(3)

Ci1,i2,...,ik ()  i1 f B () i2 f B () · · · ik f B () m.b. .

(4)

Below, we shall not make any assumptions on the distribution of the noise vector f B ­ other than

that a mini-batch is independent and identically distributed from the Ns training samples at each time

step ­ and the noise distribution is therefore allowed to have nontrivial higher connected moments

indicative of non-Gaussianity.

It is empirically often observed that the performance of the model plateaus after some training
through SGD. It is thus natural to hypothesize the existence of a stationary-state distribution, pss (), that dictates the SGD sampling at long time (see Section 2.3.4 for discussion on this assumption). For any observable quantity, O (), ­ something that can be measured during training such as 2
and f () ­ its stationary-state average is then defined as

O ()  d pss () O () . Stationarity as seen by the observable O is tantamount to

(5)

d(t) pss [(t)] O [(t)] = d(t + 1) pss [(t + 1)] O [(t + 1)]

(6)

= d(t) pss [(t)] O (t) - f B [(t)]
m.b.
= d pss () O  - f B () m.b.

1A connected noise covariant matrix, Ci,j ()  Ci,j () - [if ()] [jf ()], will not appear in

fluctuation-dissipation relations below but scales nicely with mini-batch sizes as 

1 |B|

1

-

|B| Ns

(Li et al.,

2017).

2

Under review as a conference paper at ICLR 2019

and thus follows the master equation

O () = O  - f B () m.b. .

(FDT)

In the next two subsections, we apply this general formula to simple observables in order to derive various stationary fluctuation-dissipation relations. Incidentally, the discrete version of the FokkerPlanck equation can be derived through the Kramers-Moyal expansion, considering the more general nonstationary version of the above equation and performing the Taylor expansion in  and repeated integrations by parts (Van Kampen, 1992; Gardiner, 2009; Risken, 1984; Radons et al., 1990; Leen & Moody, 1993).

2.1 FIRST FLUCTUATION-DISSIPATION RELATION

Applying the master equation (FDT) to the linear observable,

 =  - f B () m.b. =  -  f () .

(7)

We thus have

f = 0 .

(8)

This is natural because there is no particular direction that the gradient picks on average as the model parameter stochastically bounces around the local minimum or, more generally, wanders around the loss-function landscape according to the stationary distribution.

Performing similar algebra for the quadratic observable ij yields

i (j f ) + (if ) j =  Ci,j .

(9)

In particular, taking the trace of this matrix-form relation, we obtain

 · (f )

1 =

Tr C

.

2

(FDR1)

More generally, in the case of SGD with momentum µ and dampening , whose update equation is given by

v(t + 1) = µv(t) - (1 - )f B [(t)] , (t + 1) = (t) + v(t + 1) ,

(10) (11)

a similar derivation yields (see Appendix A)

 · (f )

=

(1 + µ) 

v2

.

2(1 - )

(FDR1')

The last equation reduces to the equation (FDR1) when µ =  = 0 with v = -f B. Also note that  · (f ) = ( - c) · (f ) for an arbitrary constant vector c because of the equation (8).
This first fluctuation-dissipation relation is easy to evaluate on the fly during training, exactly holds without any approximation if sampled well from the stationary distribution, and can thus be used as the standard metric to check if learning has plateaued, just as similar relations can be used to check equilibration in Monte Carlo simulations of physical systems (Santen & Krauth, 2000). [It should be cautioned, however, that the fluctuation-dissipation relations are necessary but not sufficient to ensure stationarity (Odriozola & Berthier, 2011).] Such a metric can in turn be used to schedule changes in hyperparameters, as shall be demonstrated in Section 3.3.

2.2 SECOND FLUCTUATION-DISSIPATION RELATION

Applying the master equation (FDT) on the full-batch loss function yields the closed-form expression

f () = f  - f B () m.b.

=

f

-

(f )2

 (-)k +

k!

P
Fi1,i2,...,ik Ci1,i2,...,ik

k=2

i1 ,i2 ,...,ik =1

(12)

3

Under review as a conference paper at ICLR 2019

where we introduced Fi1,i2,...,ik ()  i1 i2 · · · ik f () .
In particular, Hi,j ()  Fi,j () is the Hessian matrix. Reorganizing terms, we obtain

(13)

(f )2

 =

Tr

HC

2




- 2 

(-)k-3

k!

k=3

P
Fi1,i2,...,ik Ci1,i2,...,ik
i1 ,i2 ,...,ik =1

 .

(FDR2)

In the case of SGD with momentum and dampening, the left-hand side is replaced by (1 -

) (f )2 - µ v · f and Ci1,i2,...,ik by more hideous expressions (see Appendix A).

We can extract at least two types of information on the loss-function landscape by evaluating the dependence of the left-hand side, G()  (f )2 , on the learning rate . First, in the small

learning rate regime, the value of 2G()/ approximates Tr HC around a local ravine. Second,
nonlinearity of G() at higher  indicates discernible effects of anharmonicity. In such a regime, the Hessian matrix H cannot be approximated as constant (which also implies that {Fi1,i2,...,ik }k>2 are nontrivial) and/or the noise two-point matrix C cannot be regarded as constant. Such nonlinearity especially indicates the breakdown of the harmonic approximation, that is, the quadratic truncation of the loss-function landscape, often used to analyze the regime explored at small learning rates.

2.3 REMARKS

2.3.1 INTUITION WITHIN THE HARMONIC APPROXIMATION

In order to gain some intuition about the fluctuation-dissipation relations, let us momentarily em-

ploy

the

harmonic

approximation

f ()



f0

+

1 2

P i,j=1

hi,j

(i

- i )(j

- j ).

Within

this ap-

proximation,  · (f ) = ( -  ) · (f )  2 f - f0 . The relation (FDR1) then becomes

f - f0



1 4



TrC

, linking the height of the noise ball to the noise amplitude. This is in line

with, for instance, the theorem 4.6 of the reference Bottou et al. (2018) and substantiates the analogy

between SGD and simulated annealing, with the learning rate  ­ multiplied by TrC ­ playing the

role of temperature (Bottou, 1991).

2.3.2 HIGHER-ORDER RELATIONS Additional relations can be derived by repeating similar calculations for higher-order observables. For example, at the cubic order,
ij (kf ) + i (j f ) k + (if ) j k =  iCj,k + j Ck,i + kCi,j - 2 Ci,j,k . (14)
The systematic investigation of higher-order relations is relegated to future work.

2.3.3 SGD=SDE
There is no limit in which SGD asymptotically reduces to the stochastic differential equation (SDE). In order to take such a limit with continuous time differential dt  0+, each SGD update must become infinitesimal. One may thus try dt    0+, as in recent work adapting the view that SGD=SDE (Li et al., 2015; Mandt et al., 2017; Li et al., 2017; Smith & Le, 2018; Chaudhari & Soatto, 2017; Jastrzebski et al., 2017; Zhu et al., 2018; An et al., 2018). But this in turn forces the noise vector with zero mean, f B - f , to be multiplied by dt. This is in contrast to the scaling dt needed for the standard machinery of SDE ­ Ito^-Stratonovich calculus and all that ­ to apply; the additional factor of dt1/2 makes the effective noise covariance be suppressed by dt and the resulting equation in the continuous-time limit, if anything, would just be an ordinary differential equation without noise2 [unless noise with the proper scaling is explicitly added as in
2One may try to evade this by employing the 1/ |B|-scaling of the connected noise covariant matrix, but that would then enforces |B|  0+ as dt  0+, which is unphysical.

4

Under review as a conference paper at ICLR 2019

stochastic gradient Langevin dynamics (Welling & Teh, 2011; Teh et al., 2016) and natural Langevin dynamics (Marceau-Caron & Ollivier, 2017; Nado et al., 2018)]. In short, the recent work views  = dt and sends dt  0+ while pretending that  is finite, which is inconsistent. This is not just a technical subtlety. When unjustifiably passing onto the continuous-time Fokker-Planck equation, the diffusive term is incorrectly governed by the connected two-point noise matrix Ci,j ()  Ci,j ()-[if ()] [jf ()] rather than the full two-point noise matrix Ci,j () that appears herein.3 We must instead employ the discrete-time version of the Fokker-Planck equation derived in references Van Kampen (1992); Gardiner (2009); Risken (1984); Radons et al. (1990); Leen & Moody (1993), as has been followed in the equation (6).
2.3.4 ON STATIONARITY
In contrast to statistical mechanics where an equilibrium state is dictated by a handful of thermodynamic variables, in machine learning a stationary state generically depends not only on hyperparameters but also on a part of its learning history. The stationarity assumption made herein, which is codified in the equation (6), is weaker than the typicality assumption underlying statistical mechanics and can hold even in the presence of lingering memory. The empirical verification of the stationary fluctuation-dissipation relations in the next section supports this view.
One caveat worth mentioning, however, is that in many practical implementations of deep learning, or online machine learning with a time-evolving sample distribution, the model parameters keep evolving even at sufficiently long times. As long as such systematic cascading process is slow compared to short-time stochastic processes, it is reasonable to expect the notion of stationarity approximately holds. Nonetheless, in order to disentangle from the present study this potential complication with quasi-stationarity, whose proper treatment is outside the scope of the stationary framework developed herein, we explicitly impose L2-regularization in empirically verifying our claims in Section 3.

3 EMPIRICAL TESTS

In this section we empirically bear out our theoretical claims in the last section. To this end, two

simple models of supervised learning are used (see Appendix B for full specifications): a multilayer

perceptron (MLP) learning patterns in the MNIST training data (LeCun et al., 1998) through SGD

without momentum and a convolutional neural network (CNN) learning patterns in the CIFAR-

10 training data (Krizhevsky & Hinton, 2009) through SGD with momentum µ = 0.9. For both

models, the mini-batch size is set to be |B| = 100, and the training data are shuffled at each epoch

t

=

Ns |B|

t^epoch

with

t^epoch



N.

As

alluded

to

in

Section

2.3.4,

the

L2-regularization

term

1 2

2

with

the weight decay  = 0.01 is included in the loss function f .

Before proceeding further, let us define the half-running average of an observable O as

1t

O(t) 

O(t )

t - t0 t =t0+1

with

t0 =

t/2

.

(15)

This is the average of the observable up to the time step t, with the initial half discarded as containing

transient. If SGD drives the distribution of the model parameters to stationarity at long time, then

lim O(t) = O .
t

(16)

3.1 FIRST FLUCTUATION-DISSIPATION RELATION AND EQUILIBRATION

In order to assess the proximity to stationarity, define

OL   · f B

and

OR



(1 + µ) 2(1 - )

v2

(17)

3Heuristically, (f )2  HC for small  due to the relation FDR2, and one may thus neglect the dif-
ference between C and C, and hence justify the naive use of SDE, when H 1 and the Gaussian-noise assumption holds. In the similar vein, the reference Li et al. (2015) proves faster convergence between SGD and SDE when the term proportional to  (f )2 is added to the gradient.

5

Under review as a conference paper at ICLR 2019

(with v replaced by -f B for SGD without momentum).4 Both of these observables can easily be measured on the fly at each time step during training and, according to the relation (FDR1'), the running averages of these two observables should converge to each other upon equilibration.

2
1
0 100 10-1 10-2 10-3
0

3
2
1 100 10-1 10-2 10-3 50 100 0

50 100

(a) MLP on MNIST, µ = 0

(b) CNN on CIFAR-10, µ = 0.9

Figure 1: Approaches toward stationarity during the initial trainings for the MLP on the MNIST

data (a) and for the CNN on the CIFAR-10 data (b). Top panels depict the half-running average

f B(t) (dark green) and the instantaneous value f B(t) (light green) of the mini-batch loss. Bottom

panels depict the convergence of the half-running averages of the observables OL =  · f B and

OR

=

(1+µ) 2(1-)

v2,

whose

stationary-state

averages

should

agree

according

to

the

relation

(FDR1').

In order to verify this claim, we first train the model with the learning rate  = 0.1 for t^teoptoaclh = 100

epochs,

that

is,

for

ttotal

=

Ns |B|

t^teoptoaclh

=

100

Ns |B|

time

steps.

As

shown

in

the

figure

1,

the

observables

OL(t) and OR(t) converge to each other. We then take the model at the end of the initial 100-

10-2 10-1

10-4 0

100 10-1 10-2 10-3
0
100

10-2

200
200

10-3 0

100 10-1 10-2 10-3
0
100

200
200

(a) MLP on MNIST, µ = 0

(b) CNN on CIFAR-10, µ = 0.9

Figure 2: Approaches toward stationarity during the sequential runs for various learning rates , seen

through

the

half-running

averages

of

the

observables

OL

=



· f B

(dotted)

and

OR

=

(1+µ) 2(1-)

v2

(solid). They agree at sufficiently long times but the relaxation time to reach such a stationary regime

increases as the learning rate  decreases.

epoch training and sequentially train it further at various learning rates  (see Appendix B). The
4If the model parameter  happens to fluctuate around large values, for numerical accuracy, one may want to replace OL =  · f B by ( - c) · f B where a constant vector c approximates the vector around which  fluctuates at long time.

6

Under review as a conference paper at ICLR 2019

observables OL(t) and OR(t) again converge to each other, as plotted in the figure 2. Note that the smaller the learning rate is, the longer it takes to equilibrate.

3.2 SECOND FLUCTUATION-DISSIPATION RELATION AND SHAPE OF LOSS-FUNCTION
LANDSCAPE

In order to assess the loss-function landscape information from the relation (FDR2), define

OFB  (1 - ) (f )2 - µv · f B

(18)

(with the second term nonexistent for SGD without momentum).5 Note that (f )2 is a full-batch ­ not mini-batch ­ quantity. Given its computational cost, here we measure this first term only at the end of each epoch and take the half-running average over these sparse sample points, discarding the initial half of the run.

The half-running average of the full-batch observable OFB at the end of sufficiently long training, which is a good proxy for OFB , is plotted in the figure 3 as a function of the learning rate . As predicted by the relation (FDR2), at small learning rates , the observable OFB approaches
zero; its slope ­ divided by Tr C if preferred ­ measures the magnitude of the Hessian matrix,
component-wise averaged over directions in which the noise preferentially fluctuates. Meanwhile, nonlinearity at higher learning rates  measures the degree of anharmonicity experienced over the distribution pss (). We see that anharmonic effects are pronounced especially for the CNN on the CIFAR-10 data even at moderately small learning rates. This invalidates the use of the quadratic harmonic approximation for the loss-function landscape and/or the assumption of the constant noise matrix for this model except at very small learning rates.

0.06 0.04 0.02

4
3
32
1
2
0 05 10-3
1

0.00 0 0.00 0.02 0.04 0.06 0.00 0.02 0.04 0.06

(a) MLP on MNIST, µ = 0

(b) CNN on CIFAR-10, µ = 0.9

Figure 3: The stationary-state average of the full-batch observable OFB as a function of the learning rate , estimated through half-running averages. Dots and error bars denote mean values and 95%
confidence intervals over several distinct runs, respectively. The straight red line connects the origin and the point with the smallest  explored. (a) For the MLP on the MNIST data, linear dependence on  for  0.01 supports the validity of the harmonic approximation there. (b) For the CNN on the CIFAR-10 data, anharmonicity is pronounced even down to   0.001.

3.3 FIRST FLUCTUATION-DISSIPATION RELATION AND LEARNING-RATE SCHEDULES
Saturation of the relation (FDR1) suggests the learning stationarity, at which point it might be wise to decrease the learning rate . Such scheduling is often carried out in an ad hoc manner but we can now algorithmize this procedure as follows:
5For the second term, in order to ensure that limt v · f B(t) = limt v · f (t), we measure the half-running average of v (t) · f B [ (t)] and not v (t + 1) · f B [ (t)].
7

Under review as a conference paper at ICLR 2019

1. Evaluate the half-running averages OL(t) and OR(t) at the end of each epoch.

2. If

OL(t) - 1
OR (t)

< X, then decrease the learning rate as   (1 - Y ) and also set t = 0

for the purpose of evaluating half-running averages.

Here, two scheduling hyperparameters X and Y are introduced, which control the threshold for saturation of the relation (FDR1) and the amount of decrease in the learning rate, respectively.
Plotted in the figure 4 are results for SGD without momentum, with the Xavier initialization (Glorot & Bengio, 2010) and training (i) through preset training schedule with decrease of the learning rate by a factor of 10 for each 100 epochs and (ii) through an adaptive scheduler with X = 0.01 (1% threshold) and Y = 0.1 (10% decrease). The adaptive scheduler attains comparable results.

10-2 10-2
10-4 10-4 0.35 1.2
0.30 1.0 98% 80%

97% 0

70%

100 200 300 400

0

100 200 300 400

(a) MLP on MNIST, µ = 0

(b) CNN on CIFAR-10, µ = 0

Figure 4: Comparison of preset training schedule (black) and adaptive training schedule (blue), employing SGD without momentum both for the MLP on the MNIST data (a) and the CNN on the CIFAR-10 data (b). From top to bottom, plotted are the learning rate , the full-batch training loss f , and prediction accuracies on the training-set images (solid) and the 10000 test-set images (dashed).

These two scheduling methods span different subspaces of all the possible schedules. The adaptive scheduling method proposed herein has a theoretical grounding and in practice much less dimensionality for tuning of scheduling hyperparameters than the presetting method, thus ameliorating the optimization of scheduling hyperparameters. The systematic comparison between the two scheduling methods for state-of-the-arts architectures could be a worthwhile avenue to pursue in the future.

4 CONCLUSION
In this paper, we have derived the fluctuation-dissipation relations with no assumptions other than stationarity of the probability distribution. These relations hold exactly even when the noise is nonGaussian and the loss function is nonconvex. The relations have been empirically verified and used to probe the properties of the loss-function landscapes for the simple models. The relations further have resulted in the algorithm to adaptively set learning-rate schedule on the fly rather than presetting it in an ad hoc manner. In addition to systematically testing the performance of this adaptive scheduling algorithm, it would be interesting to investigate non-Gaussianity and noncovexity in more details through higher-point observables, both analytically and numerically. It would also be interesting to further elucidate the physics of machine learning by extending our formalism to incorporate nonstationary dynamics, linearly away from stationarity (Onsager, 1931; Green, 1954; Kubo, 1957) and beyond (Jarzynski, 1997; Crooks, 1999), so that it can in particular properly treat overfitting cascading dynamics and time-dependent sample distributions.
8

Under review as a conference paper at ICLR 2019
REFERENCES
Jing An, Jianfeng Lu, and Lexing Ying. Stochastic modified equations for the asynchronous stochastic gradient descent. arXiv preprint arXiv:1805.08244, 2018.
Le´on Bottou. Stochastic gradient learning in neural networks. Proceedings of Neuro-Nimes, 91(8): 12, 1991.
Le´on Bottou, Frank E Curtis, and Jorge Nocedal. Optimization methods for large-scale machine learning. SIAM Review, 60(2):223­311, 2018.
Robert Brown. XXVII. A brief account of microscopical observations made in the months of June, July and August 1827, on the particles contained in the pollen of plants; and on the general existence of active molecules in organic and inorganic bodies. The Philosophical Magazine, 4 (21):161­173, 1828.
Pratik Chaudhari and Stefano Soatto. Stochastic gradient descent performs variational inference, converges to limit cycles for deep networks. arXiv preprint arXiv:1710.11029, 2017.
Gavin E Crooks. Entropy production fluctuation theorem and the nonequilibrium work relation for free energy differences. Physical Review E, 60(3):2721­2726, 1999.
Albert Einstein. U¨ ber die von der molekularkinetischen Theorie der Wa¨rme geforderte Bewegung von in ruhenden Flu¨ssigkeiten suspendierten Teilchen. Annalen der physik, 322(8):549­560, 1905.
Crispin Gardiner. Stochastic methods, volume 4. Springer Berlin, 2009.
Xavier Glorot and Yoshua Bengio. Understanding the difficulty of training deep feedforward neural networks. In Proceedings of the thirteenth international conference on artificial intelligence and statistics, pp. 249­256, 2010.
Melville S Green. Markoff random processes and the statistical mechanics of time-dependent phenomena. II. Irreversible processes in fluids. The Journal of Chemical Physics, 22(3):398­413, 1954.
Christopher Jarzynski. Nonequilibrium equality for free energy differences. Physical Review Letters, 78(14):2690­2693, 1997.
Stanislaw Jastrzebski, Zachary Kenton, Devansh Arpit, Nicolas Ballas, Asja Fischer, Yoshua Bengio, and Amos Storkey. Three factors influencing minima in SGD. arXiv preprint arXiv:1711.04623, 2017.
Andrej Karpathy. ConvNetJS CIFAR-10 demo. https://cs.stanford.edu/people/ karpathy/convnetjs/demo/cifar10.html, 2014. Last accessed on 2018-09-25.
Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from tiny images. Technical report, Citeseer, 2009.
Ryogo Kubo. Statistical-mechanical theory of irreversible processes. I. General theory and simple applications to magnetic and conduction problems. Journal of the Physical Society of Japan, 12 (6):570­586, 1957.
Yann LeCun, Le´on Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to document recognition. Proceedings of the IEEE, 86(11):2278­2324, 1998.
Todd K Leen and John E Moody. Weight space probability densities in stochastic learning: I. Dynamics and equilibria. In Advances in neural information processing systems, pp. 451­458, 1993.
Chris Junchi Li, Lei Li, Junyang Qian, and Jian-Guo Liu. Batch size matters: A diffusion approximation framework on nonconvex stochastic gradient descent. arXiv preprint arXiv:1705.07562v1, 2017.
9

Under review as a conference paper at ICLR 2019
Qianxiao Li, Cheng Tai, and Weinan E. Stochastic modified equations and adaptive stochastic gradient algorithms. arXiv preprint arXiv:1511.06251, 2015.
Stephan Mandt, Matthew D Hoffman, and David M Blei. Stochastic gradient descent as approximate Bayesian inference. The Journal of Machine Learning Research, 18(1):4873­4907, 2017.
Gae´tan Marceau-Caron and Yann Ollivier. Natural Langevin dynamics for neural networks. In International Conference on Geometric Science of Information, pp. 451­459. Springer, 2017.
Zachary Nado, Jasper Snoek, Roger Grosse, David Duvenaud, Bowen Xu, and James Martens. Stochastic gradient Langevin dynamics that exploit neural network structure, 2018. URL https: //openreview.net/forum?id=ry-Se9kvG.
Gerardo Odriozola and Ludovic Berthier. Equilibrium equation of state of a hard sphere binary mixture at very large densities using replica exchange Monte Carlo simulations. The Journal of Chemical Physics, 134(5):054504, 2011.
Lars Onsager. Reciprocal relations in irreversible processes. I. Physical Review, 37(4):405­426, 1931.
Gu¨nter Radons, Heinz Georg Schuster, and D Werner. Fokker-Planck description of learning in backpropagation networks. In International Neural Network Conference, pp. 993­996. Springer, 1990.
Hannes Risken. The Fokker-Planck equation: methods of solution and applications. Springer, 1984. Herbert Robbins and Sutton Monro. A stochastic approximation method. The Annals of Mathemat-
ical Statistics, 22(3):400­407, 1951. Ludger Santen and Werner Krauth. Absence of thermodynamic phase transition in a model glass
former. Nature, 405(6786):550­551, 2000. Samuel L Smith and Quoc V Le. A Bayesian perspective on generalization and stochastic gradient
descent. arXiv preprint arXiv:1710.06451, 2018. Yee Whye Teh, Alexandre H Thiery, and Sebastian J Vollmer. Consistency and fluctuations for
stochastic gradient Langevin dynamics. The Journal of Machine Learning Research, 17(1):193­ 225, 2016. Nicolaas Godfried Van Kampen. Stochastic processes in physics and chemistry, volume 1. Elsevier, 1992. Marian Von Smoluchowski. Zur kinetischen theorie der brownschen molekularbewegung und der suspensionen. Annalen der physik, 326(14):756­780, 1906. Max Welling and Yee W Teh. Bayesian learning via stochastic gradient Langevin dynamics. In Proceedings of the 28th International Conference on Machine Learning (ICML-11), pp. 681­688, 2011. Zhanxing Zhu, Jingfeng Wu, Bing Yu, Lei Wu, and Jinwen Ma. The anisotropic noise in stochastic gradient descent: Its behavior of escaping from minima and regularization effects. arXiv preprint arXiv:1803.00195, 2018.
10

Under review as a conference paper at ICLR 2019

A SGD WITH MOMENTUM AND DAMPENING

For SGD with momentum µ and dampening , the update equation is given by

v(t + 1) = µv(t) - (1 - )f B [(t)] , (t + 1) = (t) + v(t + 1) .

(19) (20)

Here v = {vi}i=1,...,P is the velocity and  > 0 the learning rate; SGD without momentum is the special case with µ = 0. Again hypothesizing the existence of a stationary-state distribution
pss (, v), the stationary-state average of an observable O (, v) is defined as

O (, v)  ddv pss (, v) O (, v) .

(21)

Just as in the main text, from the assumed stationarity follows the master equation for SGD with momentum and dampening
O (, v) = O  +  µv - (1 - )f B () , µv - (1 - )f B () m.b. . (22)

For the linear observables,

v = µ v - (1 - ) f ()

and  =  +  [µ v - (1 - ) f () ] =  +  v ,

thus v = 0 and f = 0 .

(23) (24) (25)

For the quadratic observables vivj = µ2 vivj + (1 - )2 Ci,j - (1 - )µ [ vi (jf ) + (if ) vj ] ,

(26)

vij -  vivj = µ vij - (1 - ) (if ) j ,

(27)

and

(1 - ) [ i (jf ) + (if ) j ] - µ ( ivj + vij ) =  vivj .

(28)

Note that the relations (26) and (27) are trivially satisfied at each time step if the left-hand side observables are evaluated at one step ahead and thus their being satisfied for running averages has nothing to do with equilibration [the same can be said about the relation (23)]; the only nontrivial relation is the equation (28), which is a consequence of setting ij constant of time. After taking traces and some rearrangement, we obtain the relation (FDR1') in the main text.

For the full-batch loss function, the algebra similar to the one in the main text yields

(1 - ) (f )2 - µ v · f

(29)

P

=

Hi,j (1 - )2Ci,j - µ(1 - ) [vi (jf ) + (if ) vj] + µ2vivj

i,j=1

+ O(2) .

11

Under review as a conference paper at ICLR 2019

B MODELS AND SIMULATION PROTOCOLS

B.1 MLP ON MNIST THROUGH SGD WITHOUT MOMENTUM

The MNIST training data consist of Ns = 60000 black-white images of hand-written digits with 28-by-28 pixels (LeCun et al., 1998). We preprocess the data through an affine transformation such
that their mean and variance (over both the training data and pixels) are zero and one, respectively.

Our multilayer perceptron (MLP) consists of a 784-dimensional input layer followed by a hidden

layer of 200 neurons with ReLU activations, another hidden layer of 200 neurons with ReLU ac-

tivations, and a 10-dimensional output layer with the softmax activation. The model performance

is

evaluated

by

the

cross-entropy

loss

supplemented

by

the

L2-regularization

term

1 2

2

with

the

weight decay  = 0.01.

Throughout the paper, the MLP is trained on the MNIST data through SGD without momentum. The data are shuffled at each epoch with the mini-batch size |B| = 100.

The MLP is initialized through the Xavier method (Glorot & Bengio, 2010) and trained for t^etoptoaclh = 100 epochs with the learning rate  = 0.1. We then sequentially train it with (, t^teoptoaclh) = (0.05, 500)  (0.02, 500)  (0.01, 500)  (0.005, 1000)  (0.003, 1000). This sequential-run protocol is carried out with 4 distinct seeds for the random-number generator used in
data shuffling, all starting from the common model parameter attained at the end of the initial 100-
epoch run. The figure 2 depicts trajectories for one particular seed, while the figure 3 plots means
and error bars over these distinct seeds.

B.2 CNN ON CIFAR-10 THROUGH SGD WITH MOMENTUM

The CIFAR-10 training data consist of Ns = 50000 color images of objects ­ divided into ten categories ­ with 32-by-32 pixels in each of 3 color channels, each pixel ranging in [0, 1] (Krizhevsky
& Hinton, 2009). We preprocess the data through uniformly subtracting 0.5 and multiplying by 2 so that each pixel ranges in [-1, 1].

In order to describe the architecture of our convolutional neural network (CNN) in detail, let us

associate a tuple [F, C, S, P ; M ] to a convolutional layer with filter width F , a number of channels

C, stride S, and padding P , followed by ReLU activations and a max-pooling layer of width M .

Then, as in the demo at Karpathy (2014), our CNN consists of a (32, 32, 3) input layer followed

by a convolutional layer with [5, 16, 1, 2; 2], another convolutional layer with [5, 20, 1, 2; 2], yet an-

other convolutional layer with [5, 20, 1, 2; 2], and finally a fully-connected 10-dimensional output

layer with the softmax activation. The model performance is evaluated by the cross-entropy loss

supplemented

by

the

L2-regularization

term

1 2

2

with

the

weight

decay



=

0.01.

Throughout the paper (except in Section 3.3 where the adaptive scheduling method is tested for SGD without momentum), the CNN is trained on the CIFAR-10 data through SGD with momentum µ = 0.9 and dampening  = 0. The data are shuffled at each epoch with the mini-batch size |B| = 100.

The CNN is initialized through the Xavier method (Glorot & Bengio, 2010) and trained for t^teoptoaclh = 100 epochs with the learning rate  = 0.1. We then sequentially train it with (, t^teoptoaclh) = (0.05, 200)  (0.02, 200)  (0.01, 200)  (0.005, 400)  (0.003, 400)  (0.002, 400)  (0.0015, 400)  (0.001, 400)  (0.0005, 800)  (0.00025, 800)  (0.0001, 800). At each junc-
tion of the sequence, the velocity v is zeroed. This sequential-run protocol is carried out with 16
distinct seeds for the random-number generator used in data shuffling, all starting from the common
model parameter attained at the end of the initial 100-epoch run. The figure 2 depicts trajectories
for one particular seed, while the figure 3 plots means and error bars over these distinct seeds.

12

