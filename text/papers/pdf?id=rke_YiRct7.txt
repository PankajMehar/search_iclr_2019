Under review as a conference paper at ICLR 2019
SMALL NONLINEARITIES IN ACTIVATION FUNCTIONS
CREATE BAD LOCAL MINIMA IN NEURAL NETWORKS
Anonymous authors Paper under double-blind review
ABSTRACT
We investigate the loss surface of neural networks. We prove that even for onehidden-layer networks with "slightest" nonlinearity, the empirical risks have spurious local minima in most cases. Our results thus indicate that in general "no spurious local minima" is a property limited to deep linear networks, and insights obtained from linear networks are not robust. Specifically, for ReLU(-like) networks we constructively prove that for almost all (in contrast to previous results) practical datasets there exist infinitely many local minima. We also present a counterexample for more general activations (sigmoid, tanh, arctan, ReLU, etc.), for which there exists a bad local minimum. Our results make the least restrictive assumptions relative to existing results on local optimality in neural networks. We complete our discussion by presenting a comprehensive characterization of global optimality for deep linear networks, which unifies other results on this topic.
1 INTRODUCTION
Neural network training reduces to solving nonconvex empirical risk minimization problems, a task that is in general intractable. But success stories of deep learning suggest that local minima of the empirical risk could be close to global minima. Choromanska et al. (2015) use spherical spin-glass models from statistical physics to justify how the size of neural networks may result in local minima that are close to global. However, due to the complexities introduced by nonlinearity, a rigorous understanding of optimality in deep neural networks remains elusive.
Initial steps towards understanding optimality have focused on deep linear networks. This area has seen substantial recent progress. In deep linear networks there is no nonlinear activation; the output is simply a multilinear function of the input. Baldi & Hornik (1989) prove that some shallow networks have no spurious local minima, and Kawaguchi (2016) extends this result to squared error deep linear networks, showing that they only have global minima and saddle points. Several other works on linear nets have also appeared (Lu & Kawaguchi, 2017; Freeman & Bruna, 2017; Yun et al., 2018; Zhou & Liang, 2018; Laurent & von Brecht, 2017; Laurent & Brecht, 2018).
The theory of nonlinear neural networks (which is the actual setting of interest), however, is still in its infancy. There have been attempts to extend the "local minima are global" property from linear to nonlinear networks, but recent results suggest that this property does not usually hold (Zhou & Liang, 2018). Although not unexpected, rigorously proving such results turns out to be non-trivial, forcing several authors (e.g., Safran & Shamir (2017); Du et al. (2017); Wu et al. (2018)) to make somewhat unrealistic assumptions (realizability and Gaussianity) on data.
In contrast, we prove existence of spurious local minima under the least restrictive (to our knowledge) assumptions. Since seemingly subtle changes to assumptions can greatly influence the analysis as well as the applicability of known results, let us first summarize what is known; this will also help provide a better intuitive perspective on our results (as the technical details are somewhat involved).
1.1 WHAT IS KNOWN SO FAR? There is a large and rapidly expanding literature of optimization of neural networks. Some works focus on the loss surface (Baldi & Hornik, 1989; Yu & Chen, 1995; Kawaguchi, 2016; Swirszcz et al., 2016; Soudry & Carmon, 2016; Xie et al., 2016; Nguyen & Hein, 2017a;b; Safran & Shamir, 2017; Laurent & von Brecht, 2017; Yun et al., 2018; Zhou & Liang, 2018; Wu et al., 2018; Shamir, 2018), while others study the convergence of gradient-based methods for optimizing this loss (Tian,
1

Under review as a conference paper at ICLR 2019

2017; Brutzkus & Globerson, 2017; Du et al., 2017). In particular, our focus is on the loss surface itself, independent of any algorithmic concerns; this is reflected in the works summarized below.

For ReLU networks, the works (Swirszcz et al., 2016; Zhou & Liang, 2018) provide counterexample datasets that lead to spurious local minima, dashing hopes of "local implies global" properties. However, these works fail to provide statements about generic datasets, and one can argue that their setups are limited to isolated pathological examples. In comparison, our Theorem 1 shows existence of spurious local minima for almost all datasets, a much more general result. Zhou & Liang (2018) also give characterization of critical points of shallow ReLU networks, but with more than one hidden node the characterization provided is limited to certain regions.

There are also results that study population risk of shallow ReLU networks under a restrictive as-

sumption that input data is i.i.d. Gaussian distributed (Safran & Shamir, 2017; Wu et al., 2018; Du

et al., 2017). Moreover, these works also assume realizability, i.e., the output data is generated from

a neural network with the same architecture as the model one trains, with unknown true parameters.

These assumptions enable one to compute the population risk in a closed form, and ensure that one

can always achieve zero loss at global minima. The authors of Safran & Shamir (2017); Wu et al.

(2018) study the population risk function of the form Ex[(

k i=1

ReLU(wiT

x)

-

ReLU(viT

x))2],

where the true parameters vi's are orthogonal unit vectors. Through extensive experiments and

computer-assisted local minimality checks, Safran & Shamir (2017) show existence of local minima

for k  6. However, this result is empirical and does not have constructive proofs. Wu et al. (2018)

show that with k = 2, there is no spurious local minima on the manifold w1 2 = w2 2 = 1. Du et al. (2017) study population risk of one-hidden-layer CNN. They show that there can be a spurious

local minimum, but gradient descent converges to the global minimum with probability at least 1/4.

Our paper focuses on empirical risk instead of population risk, and does not assume either Gaussianity or realizability. Our assumption on the dataset is that it is not linearly fittable1, which is vastly
more general and realistic than assuming that input data is Gaussian or that the output is generated
from an unknown neural network. Our results also show that Wu et al. (2018) fails to extend to
empirical risk and non-unit parameter vectors (see the discussion after Theorem 2).

Laurent & von Brecht (2017) studies one-hidden-layer networks with hinge loss for classification. Under linear separability, the authors prove that Leaky-ReLU networks don't have bad local minima, while ReLU networks do. Our focus is on regression, and we only make mild assumptions on data.

For deep linear networks, the most relevant result to ours is Laurent & Brecht (2018). When all
hidden layers are wider than the input or output layers, Laurent & Brecht (2018) prove that any local minimum of a deep linear network under differentiable convex loss is global.2 They prove this by
showing a statement about relationship between linear vs. multilinear parametrization. Our result in
Theorem 4 is strictly more general that their results, and presents a comprehensive characterization.

A different body of literature (Yu & Chen, 1995; Soudry & Carmon, 2016; Xie et al., 2016; Nguyen & Hein, 2017a;b) considers sufficient conditions for global optimality in nonlinear networks. These results make certain architectural assumptions (and some technical restrictions) that may not usually apply to realistic networks. There are also other works on global optimality conditions for specially designed architectures (Haeffele & Vidal, 2017; Feizi et al., 2017).

1.2 CONTRIBUTIONS AND SUMMARY OF RESULTS
We summarize our key contributions more precisely below. Our work encompasses results for both nonlinear and linear neural networks. First, we study whether the "local minima are global" property holds for nonlinear networks. Unfortunately, our results here are negative. Specifically, we prove
­ For piecewise linear and nonnegative homogeneous activation functions (e.g., ReLU), we prove in Theorem 1 that if linear models cannot perfectly fit the data, one can construct infinitely many local minima that are not global. In practice, most datasets are not linearly fittable, hence this result gives a constructive proof of spurious local minima for generic datasets. In contrast, several existing results either provide only one counterexample (Swirszcz et al., 2016; Zhou & Liang, 2018), or make restrictive assumptions of realizability (Safran & Shamir, 2017; Du et al., 2017) or linear separability (Laurent & von Brecht, 2017). This result is presented in Section 2.

1That is, given input data matrices X and Y , there is no matrix R such that Y = RX. 2Although their result overlaps with a subset of Theorem 4, our theorem was obtained independently.

2

Under review as a conference paper at ICLR 2019

­ In Theorem 2 we tackle more general nonlinear activation functions, and provide a simple architecture (with squared loss) and dataset, for which there exists a local minimum inferior to the global minimum for a realizable dataset. Our analysis applies to a wide range of activations, including sigmoid, tanh, arctan, ELU (Clevert et al., 2015), SELU (Klambauer et al., 2017), and ReLU. Considering that realizability of data simplifies the analysis and ensures zero loss at global optima, our counterexample that is realizable and yet has a spurious local minimum is surprising, suggesting that the situation is likely worse for non-realizable data. See Section 3 for details.

We complement our negative results by presenting the following positive result on linear networks:
­ Assume that the hidden layers are as wide as either the input or the output, and that the empirical risk ((Wj)jH=+11) equals 0(WH+1WH · · · W1), where 0 is a differentiable loss function and Wi is the weight matrix for layer i. Theorem 4 shows if (W^ j)Hj=+11 is a critical point of , then its type of stationarity (local min/max, or saddle) is closely related to the behavior of 0 evaluated at the product W^ H+1 · · · W^ 1. If we additionally assume that any critical point of 0 is a global minimum, Corollary 5 shows that the empirical risk only has global minima and saddles, and provides a simple condition to distinguish between them. To the best of our knowledge, this is the most general result on deep linear networks and it subsumes several previous results, e.g., (Kawaguchi, 2016; Yun et al., 2018; Zhou & Liang, 2018; Laurent & Brecht, 2018). This result is in Section 4.

Notation. For an integer a  1, [a] denotes the set of integers from 1 to a (inclusive). For a vector v, we use [v]i to denote its i-th component, while [v][i] denotes a vector comprised of the first i components of v. Let 1(·) (0(·)) be the all ones (zeros) column vector or matrix with size (·).

2 "RELU-LIKE" NETWORKS: BAD LOCAL MINIMA EXIST FOR MOST DATA

We study below whether nonlinear neural networks provably have spurious local minima. We show in §2 and §3 that even for extremely simple nonlinear networks, one encounters spurious local minima. We first consider ReLU and ReLU-like networks. Here, we prove that as long as linear models cannot perfectly fit the data, there exists a local minimum strictly inferior to the global one. Using nonnegative homogeneity, we can scale the parameters to get infinitely many local minima.

Consider a training dataset that consists of m data points. The inputs and the outputs are of dimension dx and dy, respectively. We aggregate these items, and write X  Rdx×m as the data matrix and Y  Rdy×m as the label matrix. Consider the 1-hidden-layer neural network Y^ = W2h(W1X + b11mT ) + b21Tm, where h is a nonlinear activation function, W2  Rdy×d1 , b2  Rdy , W1  Rd1×dx , and b1  Rd1 . We analyze the empirical risk with squared loss

(W1,

W2

,

b1

,

b2)

=

1 2

W2h(W1X +b11mT )+b21mT -Y

2 F

.

Next, define a class of piecewise linear nonnegative homogeneous functions

h¯s+,s- (x) = max{s+x, 0} + min{s-x, 0},

(1)

where s+ > 0, s-  0 and s+ = s-. Note that ReLU and Leaky-ReLU are members of this class.

2.1 MAIN RESULTS AND DISCUSSION We use the shorthand X~ := XT 1m T  R(dx+1)×m. The main result of this section, Theorem 1, considers the case where linear models cannot fit Y , i.e., Y = RX~ for all matrix R. With ReLU-like activation (1) and a few mild assumptions, Theorem 1 shows that there exist spurious local minima.
Theorem 1. Suppose that the following conditions hold:
(C1.1) Output dimension is dy = 1, and linear models RX~ cannot perfectly fit Y .
(C1.2) All the data points xi's are distinct. (C1.3) The activation function h is h¯s+,s- .
(C1.4) The hidden layer has at least width 2: d1  2.

Then, there is a spurious local minimum whose risk is the same as linear least squares model. Moreover, due to nonnegative homogeneity of h¯s+,s- , there are infinitely many such local minima.

3

Under review as a conference paper at ICLR 2019

Noticing that most real world datasets cannot be perfectly fit with linear models, Theorem 1 shows that when we use the activation h¯s+,s- , the empirical risk has bad local minima for almost all datasets that one may encounter in practice. Although it is not very surprising that neural networks have spurious local minima, proving this rigorously is non-trivial. We provide a constructive and deterministic proof for this problem that holds for very general datasets, which is in contrast to experimental results of Safran & Shamir (2017). We emphasize that Theorem 1 also holds even for "slightest" nonlinearities, e.g., when s+ = 1 + and s- = 1 where > 0 is small. This suggests that the "local min is global" property is limited to the trivial setting of linear neural networks.
Existing results on squared error loss either provide one counterexample (Swirszcz et al., 2016; Zhou & Liang, 2018), or assume realizability and Gaussian input (Safran & Shamir, 2017; Du et al., 2017). Realizability is an assumption that the output is generated by a network with unknown parameters. In real datasets, neither input is Gaussian nor output is generated by neural networks; in contrast, our result holds for most realistic situations, and hence delivers useful insight.
There are several results proving sufficient conditions for global optimality of nonlinear neural networks (Soudry & Carmon, 2016; Xie et al., 2016; Nguyen & Hein, 2017a). But they rely on assumptions that the network width scales with the number of data points. For instance, applying Theorem 3.4 of Nguyen & Hein (2017a) to our network proves that if X~ has linearly independent columns and other assumptions hold, then any critical point with W2 = 0 is a global minimum. However, linearly independent columns already imply row(X~ ) = Rm, so even linear models RX~ can fit any Y ; i.e., there is less merit in using a complex model to fit Y . Theorem 1 does not make any structural assumption other than d1  2, and addresses the case where it is impossible to fit Y with linear models, which is much more realistic.
It is worth comparing our result with Laurent & von Brecht (2017), who use hinge loss based classification and assume linear separability to prove "no spurious local minima" for Leaky-ReLU networks. Their result does not contradict our theorem because the losses are different and we do not assume linear separability.
One might wonder if our theorem holds even with d1  m. Venturi et al. (2018) showed that one-hidden-layer neural networks with d1  m doesn't have spurious valleys; however, their result shows nonexistence of strict spurious local minima, whereas due to h¯s+,s- we only have non-strict local minima. Based on Bengio et al. (2006), one might claim that with wide enough hidden layer and random W1 and b1, one can fit any Y ; however, this is not the case, by our assumption that linear models RX~ cannot fit Y . Note that there is a non-trivial region in the parameter space where W1X + b11Tm > 0 (entry-wise). In this region, the output of neural network Y^ is still a linear combination of rows of X~ , so Y^ cannot fit Y ; in fact, it can only do as well as linear models.

2.2 ANALYSIS OF THEOREM 1

The proof of the theorem is split into two steps. First, we prove that there exist local minima (W^ j, ^bj)j2=1 whose risk value is the same as the linear least squares solution, and that there are infinitely many such minima. Second, we will construct a tuple of parameters (W~ j, ~bj)2j=1 that has strictly smaller empirical risk than (W^ j, ^bj)j2=1.
Step 1: A local minimum as good as the linear solution. The main idea here is to exploit the weights from the linear least squares solution, and to tune the parameters so that all inputs to hidden nodes become positive. Doing so makes the hidden nodes "locally linear," so that the constructed (W^ j, ^bj)j2=1 that produce linear least squares estimates at the output become locally optimal.

Recall that X~ = XT 1m T  R(dx+1)×m, and define a linear least squares loss 0(R) :=

1 2

RX~ - Y

2 F

that

is minimized at W¯ ,

so

that 

0(W¯ )

=

(W¯ X~

- Y )X~ T

=

0.

Since dy

=

1,

the

solution W¯  Rdy×(dx+1) is a row vector. For all i  [m], let y¯i = W¯ xiT 1 T be the output of

the linear least squares model, and similarly Y¯ = W¯ X~ .

Let  := min {-1, 2 mini y¯i}, a negative constant making y¯i -  > 0 for all i. Define parameters

W^ 1 = 

[W¯ ][dx] 0(d1 -1)×dx

, ^b1 = 

[W¯ ]dx+1 -  -1d1-1

, W^ 2 =

1 s+

0Td1-1 , ^b2 = ,

4

Under review as a conference paper at ICLR 2019

where  > 0 is any arbitrary fixed positive constant, [W¯ ][dx] gives the first dx components of W¯ ,

and [W¯ ]dx+1 the last component. Since y¯i = [W¯ ][dx]xi + [W¯ ]dx+1, for any i, W^ 1xi + ^b1 > 0d1 (component-wise), given our choice of . Thus, all hidden node inputs are positive. Moreover,

Y^

=

1 s+

s+

(Y¯

- 1Tm) + 1Tm

=

Y¯ ,

so

that

the

loss

((W^ j , ^bj )j2=1)

=

1 2

Y¯ - Y

2 F

=

0(W¯ ).

So far, we checked that (W^ j, ^bj)2j=1 has the same empirical risk as a linear least squares solution. It now remains to show that this point is indeed a local minimum of . To that end, we consider the

perturbed parameters (W^ j + j, ^bj + j)j2=1, and check their risk is always larger. A useful point is

that since W¯ is a minimum of

0(R)

=

1 2

RX~ - Y

F2 , we have

(W¯ X~ - Y )X~ T = (Y¯ - Y ) XT 1m = 0,

(2)

so (Y¯ -Y )XT = 0 and (Y¯ -Y )1m = 0. For small enough perturbations, (W^ 1+1)xi+(^b1+1) > 0 still holds for all i. So, we can observe that

((W^ j

+

j , ^bj

+

j )2j=1) =

1 2

Y¯ - Y + ~ X + ~1mT

2 F

=

1 2

Y¯ - Y

2 F

+

1 2

~ X + ~1Tm 2F,

(3)

where ~ and ~ are ~ := s+(W^ 21 + 2W^ 1 + 21) and ~ := s+(W^ 21 + 2^b1 + 21) + 2; they are aggregated perturbation terms. We used (2) to obtain the last equality of (3). Thus, ((W^ j +
j, ^bj + j)j2=1)  ((W^ j, ^bj)2j=1) for small perturbations, proving (W^ j, ^bj)j2=1 is indeed a local minimum of . Since this is true for arbitrary  > 0, there are infinitely many such local minima.

We can also construct similar local minima by permuting hidden nodes, etc.

Step 2: A point strictly better than the local minimum. The proof of this step is more in-
volved. In the previous step, we "pushed" all the input to the hidden nodes to positive side, and took advantage of "local linearity" of the hidden nodes near (W^ j, ^bj)2j=1. But to construct parameters (W~ j, ~bj)j2=1 that have strictly smaller risk than (W^ j, ^bj)2j=1 (to prove that (W^ j, ^bj)2j=1 is a spurious local minimum), we make the sign of inputs to the hidden nodes different depending on data.

To this end, we sort the indices of data points in increasing order of y¯i; i.e., y¯1  y¯2  · · ·  y¯m. Define the set J := {j  [m - 1] | ij(y¯i - yi) = 0, y¯j < y¯j+1}. The remaining construction is divided into two cases: J =  and J = , whose main ideas are essentially the same. We present the proof for J = , and defer the other case to Appendix A2 as it is rarer, and its proof, while
instructive for its perturbation argument, is technically too involved.

Case 1: J = . Pick any j0  J . We can observe that ij0 (y¯i - yi) = - i>j0 (y¯i - yi),

because

of

(2).

Define



=

,y¯j0 +y¯j0+1
2

so

that

y¯i - 

<

0

for

all

i



j0

and

y¯i - 

>

0

for

all

i

>

j0.

Then,

let



be

a

constant

satisfying

0

<

||



y¯j0 +1 -y¯j0 4

,

whose

value

will

be

specified

later.

Since

|| is small enough, sign(y¯i - ) = sign(y¯i -  + ) = sign(y¯i -  - ). Now select parameters

W~ 1

=

 

-[W[¯W¯][]d[dxx] ]

 ,

0(d1 -2)×dx

~b1

=

-[W[¯W¯]d]dxx++11-+++

 

,

0d1-2

W~ 2

=

1 s+ +s-

1

-1

0Td1-2 , ~b2 = .

Recall again that [W¯ ][dx]xi + [W¯ ]dx+1 = y¯i. For i  j0, y¯i -  +  < 0 and -y¯i +  +  > 0, so

y^i

=

s-(y¯i -  + ) s+ + s-

-

s+(-y¯i +  + ) s+ + s-

+

=

y¯i

-

s+ s+

- s- . + s-

Similarly,

for

i

>

j0,

y¯i

-



+



>

0

and

-y¯i

+



+



<

0

results

in

y^i

=

y¯i

+

s+ s+

-s- +s-



.

Here,

we

push

the

outputs

y^i

of

the

network

by

s+ -s-
s+ +s-

from

y¯i,

and

the

direction

of

the

"push"

varies

depending on whether i  j0 or i > j0.

The empirical risk for this choice of parameters is

((W~ j , ~bj )j2=1)

=

1 2

ij0

y¯i

-

s+ s+

- +

s- s-



-

yi

21 + 2

i>j0

y¯i

+

s+ s+

- +

s-  s-

-

yi

2

= 0(W¯ ) - 2

ij0 (y¯i - yi)

s+ - s-  + O(2). s+ + s-

Since ij0 (y¯i-yi) = 0 and s+ = s-, we can choose sign() = sign([ ij0 (y¯i-yi)](s+-s-)),
and choose small || so that ((W~ j, ~bj)2j=1) < 0(W¯ ) = ((W^ j, ^bj)2j=1), proving that (W^ j, ^bj)j2=1 is a spurious local minimum.

5

Under review as a conference paper at ICLR 2019

3 COUNTEREXAMPLE: BAD LOCAL MINIMA FOR MANY ACTIVATIONS

The proof of Theorem 1 crucially exploits the piecewise linearity of the activation functions. Thus, one may wonder whether the spurious local minima seen there are an artifact of the specific nonlinearity. We show below that this is not the case. We provide a counterexample nonlinear network and a dataset for which a wide range of nonlinear activations result in a local minimum that is strictly inferior to the global minimum with exactly zero empirical risk. Examples of such activation functions include popular activation functions such as sigmoid, tanh, arctan, ELU, SELU, and ReLU.

We consider again the squared error empirical risk of a one-hidden-layer nonlinear neural network:

((Wj , bj )2j=1)

:=

1 2

W2h(W1X +b11mT )+b21Tm -Y

2F,

where we fix dx = d1 = 2 and dy = 1. Also, let h(k)(x) be the k-th derivative of h : R  R, whenever it exists at x. For short, let h and h denote the first and second derivatives.

3.1 MAIN RESULTS AND DISCUSSION

Theorem 2. Let the loss ((Wj, bj)2j=1) and network be as defined above. Consider the dataset

X=

1 0

0 1

1
21 , Y = 0
2

0

1.

For this network and dataset the following results hold:

1. If there exist real numbers v1, v2, v3, v4  R such that

(C2.1) h(v1)h(v4) = h(v2)h(v3), and

(C2.2) h(v1)h

v3 +v4 2

= h(v3)h

v1 +v2 2

,

then there is a tuple (W~ j, ~bj)j2=1 at which equals 0. 2. If there exist real numbers v1, v2, u1, u2  R such that the following conditions hold:

(C2.3)

u1h(v1) + u2h(v2) =

1 3

,

(C2.4) h is infinitely differentiable at v1 and v2,

(C2.5) there exists a constant c > 0 such that |h(n)(v1)|  cnn! and |h(n)(v2)|  cnn!.

(C2.6)

(u1h

(v1))2

+

u1h (v1) 3

> 0,

(C2.7)

(u1h

(v1)u2h

(v2))2

< ((u1h

(v1))2

+

u1h (v1) 3

)((u2h

(v2))2

+

u2

h

(v2 3

)

),

then there exists a tuple (W^ j, ^bj)j2=1 such that the output of the network is the same as the linear

least squares model, the risk

((W^ j , ^bj )2j=1)

=

1 3

,

and

(W^ j , ^bj )j2=1

is

a

local

minimum

of

.

Theorem 2 shows that for this architecture and dataset, activations that satisfy (C2.1)­(C2.7) introduce at least one spurious local minimum. Notice that the empirical risk is zero at the global minimum. This means that the data X and Y can actually be "generated" by the network, which satisfies the realizability assumption that others use (Safran & Shamir, 2017; Du et al., 2017; Wu et al., 2018). Notice that our counterexample is "easy to fit," and yet, there exists a local minimum that is not global. This leads us to conjecture that with harder datasets, the problems with spurious local minima could be worse. The proof of Theorem 2 can be found in Appendix A3.

Discussion. Note that the conditions (C2.1)­(C2.7) only require existence of certain real numbers rather than some global properties of activation h, hence are not as restrictive as they look. Conditions (C2.1)­(C2.2) come from a choice of tuple (W~ j, ~bj)2j=1 that perfectly fits the data. Condition (C2.3) is necessary for constructing (W^ j, ^bj)2j=1 with the same output as the linear least squares model, and Conditions (C2.4)­(C2.7) are needed for showing local minimality of (W^ j, ^bj)j2=1 via Taylor expansions. The class of functions that satisfy conditions (C2.1)­(C2.7) is quite large, and includes the nonlinear activation functions used in practice. The next corollary highlights this observation (for a proof with explicit choices of the involved real numbers, please see Appendix A5).
Corollary 3. For the counterexample in Theorem 2, the set of activation functions satisfying condi-
tions (C2.1)­(C2.7) include sigmoid, tanh, arctan, ELU, and SELU.

6

Under review as a conference paper at ICLR 2019

Admittedly, Theorem 2 and Corollary 3 give one counterexample instead of stating a claim about generic datasets. Nevertheless, this example shows that for many practical nonlinear activations, the desirable "local minimum is global" property cannot hold even for realizable datasets, suggesting that the situation could be worse for non-realizable ones.
Remark: "ReLU-like" activation functions. Recall the piecewise linear nonnegative homogeneous activation function h¯s+,s- . They do not satisfy condition (C2.7), so Theorem 2 cannot be directly applied. Also, if s- = 0 (i.e., ReLU), conditions (C2.1)­(C2.2) are also violated. However, the statements of Theorem 2 hold even for h¯s+,s- , which is shown in Appendix A6. Recalling again s+ = 1 + and s- = 1, this means that even with the "slightest" nonlinearity in activation function, the network has a global minimum with risk zero while there exists a bad local minimum that performs just as linear least squares models. In other words, "local minima are global" property is rather brittle and can only hold for linear neural networks. Another thing to note is that in Appendix A6, the bias parameters are all zero, for both (W~ j, ~bj)2j=1 and (W^ j, ^bj)2j=1. For models without bias parameters, (W^ j)j2=1 is still a spurious local minimum, thus showing that Wu et al. (2018) fails to extend to empirical risks and non-unit weight vectors.

4 GLOBAL OPTIMALITY IN LINEAR NETWORKS

In this section we present our results on deep linear neural networks. Assuming that the hidden layers are at least as wide as either the input or output, we show that critical points of the loss with a multilinear parameterization inherit the type of critical points of the loss with a linear parameterization. As a corollary, we show that for differentiable losses whose critical points are globally optimal, deep linear networks have only global minima or saddle points. Furthermore, we provide an efficiently checkable condition for global minimality.

Suppose the network has H hidden layers having widths d1, . . . , dH . To ease notation, we set d0 = dx and dH+1 = dy. The weights between adjacent layers are kept in matrices Wj  Rdj×dj-1 (j  [H + 1]), and the output Y^ of the network is given by the product of weight matrices with the
data matrix: Y^ = WH+1WH · · · W1X. Let (Wj)Hj=+11 be the tuple of all weight matrices, and Wi:j denote the product WiWi-1 · · · Wj+1Wj for i  j, and the identity for i = j - 1. We consider the empirical risk ((Wj)jH=+11), which, for linear networks assumes the form

((Wj )jH=+11) := 0(WH+1:1),

(4)

where 0 is a suitable differentiable loss.

For example, when

0(R)

=

1 2

RX - Y

2 F

,

((Wj )jH=+11)

=

1 2

WH+1:1X - Y

2 F

=

0(WH+1:1). Lastly, we write  0(M )  R 0(R)|R=M .

Remark: bias terms. We omit the bias terms b1, . . . , bH+1 here. This choice is for simplicity; models with bias can be handled by the usual trick of augmenting data and weight matrices.

4.1 MAIN RESULTS AND DISCUSSION
We are now ready to state our first main theorem, whose proof is deferred to Appendix A7. Theorem 4. Suppose that for all j, dj  min{dx, dy}, and that the loss is given by (4), where 0 is differentiable on Rdy×dx . For any critical point (W^ j)Hj=+11 of the loss , the following claims hold:
1. If  0(W^ H+1:1) = 0, then (W^ j)Hj=+11 is a saddle of . 2. If  0(W^ H+1:1) = 0, then
(a) (W^ j)jH=+11 is a local min (max) of if W^ H+1:1 is a local min (max) of 0; moreover, (b) (W^ j)jH=+11 is a global min (max) of if and only if W^ H+1:1 is a global min (max) of 0.
3. If there exists j  [H + 1] such that W^ H+1:j+1 has full row rank and W^ j-1:1 has full column rank, then  0(W^ H+1:1) = 0, so 2(a) and 2(b) hold. Also, (a) W^ H+1:1 is a local min (max) of 0 if (W^ j)Hj=+11 is a local min (max) of .

7

Under review as a conference paper at ICLR 2019
Let us paraphrase Theorem 4 in words. In particular, it states that if the hidden layers are "wide enough" so that the product WH+1:1 can attain full rank and if the loss assumes the form (4) for a differentiable loss 0, then the type (optimal or saddle point) of a critical point (W^ j)Hj=+11 of is governed by the behavior of 0 at the product W^ H+1:1.
Note that for any critical point (W^ j)jH=+11 of the loss , either  0(W^ H+1:1) = 0 or  0(W^ H+1:1) = 0. Parts 1 and 2 handle these two cases. Also observe that the condition in Part 3 implies  0 = 0, so Part 3 is a refinement of Part 2. A notable fact is that a sufficient condition for Part 3 is W^ H+1:1 having full rank. For example, if dx  dy, full-rank W^ H+1:1 implies rank(W^ H+1:2) = dy, whereby the condition in Part 3 holds with j = 1.
If W^ H+1:1 is not critical for 0, then (W^ j)Hj=+11 must be a saddle point of . If W^ H+1:1 is a local min/max of 0, (W^ j)Hj=+11 is also a local min/max of . Notice, however, that Part 2(a) does not address the case of saddle points; when W^ H+1:1 is a saddle point of 0, the tuple (W^ j)jH=+11 can behave arbitrarily. However, with the condition in Part 3, statements 2(a) and 3(a) hold at the same time, so that W^ H+1:1 is a local min/max of 0 if and only if (W^ j)jH=+11 is a local min/max of . Observe that the same "if and only if" statement holds for saddle points due to their definition; in summary, the types (min/max/saddle) of the critical points (W^ j)Hj=+11 and W^ H+1:1 match exactly.
Although Theorem 4 itself is of interest, the following corollary highlights its key implication for deep linear networks. Corollary 5. In addition to the assumptions in Theorem 4, assume that any critical point of 0 is a global min (max). For any critical point (W^ j)Hj=+11 of , if  0(W^ H+1:1) = 0, then (W^ j)jH=+11 is a saddle of , while if  0(W^ H+1:1) = 0, then (W^ j)Hj=+11 is a global min (max) of .
Proof If  0(W^ H+1:1) = 0, then W^ H+1:1 is a saddle point by Theorem 4.1. If  0(W^ H+1:1) = 0, then W^ H+1:1 is a global min (max) of 0 by assumption. By Theorem 4.2(b), (W^ j)jH=+11 must be a global min (max) of .
Corollary 5 shows that for any differentiable loss function 0 whose critical points are global minima, the loss has only global minima and saddle points, therefore satisfying the "local minima are global" property. In other words, for such an 0, the multilinear re-parametrization introduced by deep linear networks does not introduce any spurious local minima/maxima; it only introduces saddle points. Importantly, Corollary 5 also provides a checkable condition that distinguishes global minima from saddle points. Since is nonconvex, it is remarkable that such a simple necessary and sufficient condition for global optimality is available.
Our result generalizes previous works on linear networks such as Kawaguchi (2016); Yun et al. (2018); Zhou & Liang (2018), because it provides conditions for global optimality for a broader range of loss functions without assumptions on datasets. Laurent & Brecht (2018) proved that if (W^ j)jH=+11 is a local min of , then W^ H+1:1 is a critical point of 0. First, observe that this result is implied by Theorem 4.1. So our result, which was proved in parallel and independently, is strictly more general. With additional assumption that critical points of 0 are global minima, Laurent & Brecht (2018) showed that "local min is global" property holds for linear neural networks; our Corollay 5 gives a simple and efficient test condition as well as proving there are only global minima and saddles, which is clearly stronger.
5 DISCUSSION AND FUTURE WORK
We investigated the loss surface of deep linear and nonlinear neural networks. We proved two theorems showing existence of spurious local minima on nonlinear networks, which apply to almost all datasets (Theorem 1) and a wide class of activations (Theorem 2). We concluded by Theorem 4, showing a general result studying the behavior of critical points in multilinearly parametrized functions, which unifies other existing results on linear networks. Given that spurious local minima are common in neural networks, a valuable future research direction will be investigating how far local minima are from global minima in general, and how the size of the network affects this gap. Another direction would be to add regularizers and see how they affect the loss surface. Additionally, one can try to show algorithmic results in a similar flavor as (Du et al., 2017). We hope that our paper will be a stepping stone to such future research.
8

Under review as a conference paper at ICLR 2019
REFERENCES
Pierre Baldi and Kurt Hornik. Neural networks and principal component analysis: Learning from examples without local minima. Neural networks, 2(1):53­58, 1989.
Yoshua Bengio, Nicolas L Roux, Pascal Vincent, Olivier Delalleau, and Patrice Marcotte. Convex neural networks. In Advances in neural information processing systems, pp. 123­130, 2006.
Alon Brutzkus and Amir Globerson. Globally optimal gradient descent for a convnet with gaussian inputs. In International Conference on Machine Learning, pp. 605­614, 2017.
Anna Choromanska, Mikael Henaff, Michael Mathieu, Ge´rard Ben Arous, and Yann LeCun. The loss surfaces of multilayer networks. In Artificial Intelligence and Statistics, pp. 192­204, 2015.
Djork-Arne´ Clevert, Thomas Unterthiner, and Sepp Hochreiter. Fast and accurate deep network learning by exponential linear units (elus). arXiv preprint arXiv:1511.07289, 2015.
Simon S Du, Jason D Lee, Yuandong Tian, Barnabas Poczos, and Aarti Singh. Gradient descent learns one-hidden-layer cnn: Don't be afraid of spurious local minima. arXiv preprint arXiv:1712.00779, 2017.
Soheil Feizi, Hamid Javadi, Jesse Zhang, and David Tse. Porcupine neural networks:(almost) all local optima are global. arXiv preprint arXiv:1710.02196, 2017.
C Daniel Freeman and Joan Bruna. Topology and geometry of half-rectified network optimization. In International Conference on Learning Representations, 2017.
Benjamin D Haeffele and Rene´ Vidal. Global optimality in neural network training. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 7331­7339, 2017.
Kenji Kawaguchi. Deep learning without poor local minima. In Advances in Neural Information Processing Systems, pp. 586­594, 2016.
Gu¨nter Klambauer, Thomas Unterthiner, Andreas Mayr, and Sepp Hochreiter. Self-normalizing neural networks. In Advances in Neural Information Processing Systems, pp. 972­981, 2017.
Steven G Krantz and Harold R Parks. A primer of real analytic functions. Springer Science & Business Media, 2002.
Thomas Laurent and James Brecht. Deep linear networks with arbitrary loss: All local minima are global. In International Conference on Machine Learning, pp. 2908­2913, 2018.
Thomas Laurent and James von Brecht. The multilinear structure of relu networks. arXiv preprint arXiv:1712.10132, 2017.
Haihao Lu and Kenji Kawaguchi. Depth creates no bad local minima. arXiv preprint arXiv:1702.08580, 2017.
Quynh Nguyen and Matthias Hein. The loss surface of deep and wide neural networks. In Proceedings of the 34th International Conference on Machine Learning, volume 70, pp. 2603­2612, 2017a.
Quynh Nguyen and Matthias Hein. Optimization landscape and expressivity of deep cnns. arXiv preprint arXiv:1710.10928, 2017b.
Itay Safran and Ohad Shamir. Spurious local minima are common in two-layer relu neural networks. arXiv preprint arXiv:1712.08968, 2017.
Ohad Shamir. Are resnets provably better than linear predictors? arXiv preprint arXiv:1804.06739, 2018.
Daniel Soudry and Yair Carmon. No bad local minima: Data independent training error guarantees for multilayer neural networks. arXiv preprint arXiv:1605.08361, 2016.
Grzegorz Swirszcz, Wojciech Marian Czarnecki, and Razvan Pascanu. Local minima in training of neural networks. arXiv preprint arXiv:1611.06310, 2016.
9

Under review as a conference paper at ICLR 2019
Yuandong Tian. An analytical formula of population gradient for two-layered relu network and its applications in convergence and critical point analysis. In International Conference on Machine Learning, pp. 3404­3413, 2017.
Luca Venturi, Afonso Bandeira, and Joan Bruna. Neural networks with finite intrinsic dimension have no spurious valleys. arXiv preprint arXiv:1802.06384, 2018.
Chenwei Wu, Jiajun Luo, and Jason D Lee. No spurious local minima in a two hidden unit relu network. In International Conference on Learning Representations Workshop, 2018.
Bo Xie, Yingyu Liang, and Le Song. Diverse neural network learns true target functions. arXiv preprint arXiv:1611.03131, 2016.
Xiao-Hu Yu and Guo-An Chen. On the local minima free condition of backpropagation learning. IEEE Transactions on Neural Networks, 6(5):1300­1303, 1995.
Chulhee Yun, Suvrit Sra, and Ali Jadbabaie. Global optimality conditions for deep neural networks. In International Conference on Learning Representations, 2018.
Yi Zhou and Yingbin Liang. Critical points of neural networks: Analytical forms and landscape properties. In International Conference on Learning Representations, 2018.
10

Under review as a conference paper at ICLR 2019
A1 NOTATION
We first list notation used throughout the appendix. For integers a  b, [a, b] denotes the set of integers between them. We write [b], if a = 1. For a vector v, we use [v]i to denote its i-th component, while [v][i] denotes a vector comprised of the first i components of v. Let 1d (or 0d) be the all ones (zeros) column vector in Rd. For a subspace V  Rd, we denote by V  its orthogonal complement. For a matrix A, [A]i,j is the (i, j)-th entry and [A]·,j its j-th column. Let max(A) and min(A) denote the largest and smallest singular values of A, respectively; row(A), col(A), rank(A), and A F denote respectively the row space, column space, rank, and Frobenius norm of matrix A. Let null(A) := {v | Av = 0} and leftnull(A) := {v | vT A = 0} be the null space and the left-null space of A, respectively. When A is a square matrix, let tr(A) be the trace of A. For matrices A and B of the same size, A, B = tr(AT B) denotes the usual trace inner product of A and B. Equivalently, A, B = tr(AT B) = tr(ABT ). Let 0d×m be the all zeros matrix in Rd×m.
A2 PROOF OF THEOREM 1, STEP 2, CASE 2
Case 2. J = . We start with a lemma discussing what J =  implies. Lemma A.1. If J = , the following statements hold:
1. There are some y¯j's that are duplicate; i.e. for some i = j, y¯i = y¯j.
2. If y¯j is non-duplicate, meaning that y¯j-1 < y¯j < y¯j+1, y¯j = yj holds.
3. If y¯j is duplicate, i:y¯i=y¯j (y¯i - yi) = 0 holds.
4. There exists at least one duplicate y¯j such that, for that y¯j, there exist at least two different i's that satisfy y¯i = y¯j and y¯i = yi.
Proof We prove this by showing if any of these statements are not true, then we have J =  or a contradiction.
1. If all the y¯j's are distinct and J = , by definition of J , y¯j = yj for all j. This violates our assumption that linear models cannot perfectly fit Y .
2. If we have y¯j = yj for a non-duplicate y¯j, at least one of the following statements must hold: ij-1(y¯i - yi) = 0 or ij(y¯i - yi) = 0, meaning that j - 1  J or j  J .
3. Suppose y¯j is duplicate and i:y¯i=y¯j (y¯i - yi) = 0. Let k = min{i | y¯i = y¯j} and l = max{i | y¯i = y¯j}. Then at least one of the following statements must hold: ik-1(y¯i - yi) = 0 or il(y¯i - yi) = 0. If ik-1(y¯i - yi) = 0, we can also see that y¯k-1 < y¯k, so k - 1  J . Similarly, if il(y¯i - yi) = 0, then l  J .
4. Since i:y¯i=y¯j (y¯i - yi) = 0 holds for any duplicate y¯j, if y¯i = yi holds for one i then there must be at least two of them that satisfies y¯i = yi. If this doesn't hold for all duplicate y¯i, with Part 2 this means that y¯j = yj holds for all j. This violates our assumption that linear models cannot perfectly fit Y .
From Lemma A.1.4, we saw that there is a duplicate value of y¯j such that some of the data points i satisfy y¯i = y¯j and y¯i = yi. The proof strategy in this case is essentially the same, but the difference is that we choose one of such duplicate y¯j, and then choose a vector v  Rdx to "perturb" the linear least squares solution [W¯ ][dx] in order to break the tie between i's that satisfies y¯i = y¯j and y¯i = yi. We start by defining the minimum among such duplicate values y¯ of y¯j's, and a set of indices j that satisfies y¯j = y¯.
y¯ = min{y¯j | i = j such that y¯i = y¯j and y¯i = yi},
11

Under review as a conference paper at ICLR 2019

J  = {j  [m] | y¯j = y¯}. Then, we define a subset of J :
J= = {j  J  | y¯j = yj}. By Lemma A.1.4, cardinality of J= is at least two. Then, we define a special index in J=:

j1 = argmax
jJ=

xj

2,

Index j1 is the index of the "longest" xj among elements in J=. Using the definition of j1, we can partition J  into two sets:

J = {j  J  |

xj , xj1



xj1

2 2

},

J<

=

{j



J

|

xj , xj1

<

xj1 22}.

For the indices in J , we can always switch the indices without loss of generality. So we can assume that j  j1 = max J for all j  J and j > j1 for all j  J<.

We now define a vector that will be used as the "perturbation" to [W¯ ][dx]. Define a vector v  Rdx ,

which is a scaled version of xj1 :

g

v= M

xj1

xj1 ,
2

where the constants g and M are defined to be

1

g

=

4

min {|y¯i

- y¯j|

|

i, j



[m], y¯i

=

y¯j} ,

M

=

max
i[m]

xi

2.

The constant M is the largest xi 2 among all the indices, and g is one fourth times the minimum gap between all distinct values of y¯i.
Now, consider perturbing [W¯ ][dx] by a vector -vT . where   (0, 1] will be specified later. Observe that

W¯ - vT 0

xi 1

= W¯

xi 1

- vT xi = y¯i - vT xi.

Recall that j  j1 = max J for all j  J and j > j1 for all j  J<. We are now ready to present the following lemma:

Lemma A.2. Define

j2 = argmax
jJ<

xj , xj1

,



=

y¯

-

 2

vT

(xj1

+ xj2 ).

Then,

Also,

i>j1 (y¯i - yi) -

y¯i - vT xi -  < 0 for all i  j1, y¯i - vT xi -  > 0 for all i > j1.
ij1 (y¯i - yi) = -2(y¯j1 - yj1 ) = 0.

Proof

First observe that, for any xi, |vT xi|  

v2

xi

2

g M

xi 2  g. By definition of

g, we have 2g < y¯j - y¯i for any y¯i < y¯j. Using this, we can see that

y¯i < y¯j = y¯i - vT xi  y¯i + g < y¯j - g  y¯j - vT xj.

(A.1)

In words, if y¯i and y¯j are does not change the order. and J<,

distinct and Also, since

there is an v is only a

order y¯i < y¯j, scaled version

perturbation of xj1 , from

of the

[W¯ ][dx] by definitions

-vT of J

vT (xj - xj1 )  0 for j  J and vT (xj - xj1 ) < 0 for j  J<.

(A.2)

By definition of j2,

vT (xj2 - xj1 ) < 0 and vT (xj2 - xj )  0 for all j  J<.

(A.3)

12

Under review as a conference paper at ICLR 2019

It is left to prove the statement of the lemma using case analysis, using the inequalities (A.1), (A.2), and (A.3). For all i's such that y¯i < y¯ = y¯j1 ,

y¯i

-

vT xi

-



=

y¯i

-

vT

xi

-

y¯

+

 2

vT

(xj1

+

xj2 )

=

(y¯i

-

vT

xi)

-

(y¯

-

vT

xj1 )

+

 vT 2

(xj2

-

xj1 )

<

0.

Similarly, for all i such that y¯i > y¯ = y¯j2 ,

y¯i

-

vT

xi

-



=

(y¯i

-

vT

xi)

-

(y¯

-

vT

xj2 )

+

 vT 2

(xj1

-

xj2 )

>

0.

For j  J (j  j1), we know y¯j = y¯, so

y¯j - vT xj -  =

y¯ - vT xj

-

y¯

-

 2

v

T

(xj1

+

xj2 )

=

vT

[(xj1

-

xj )]

+

 vT 2

[(xj2

-

xj1 )]

<

0.

Also, for j  J< (j > j1),

y¯j - vT xj -  =

y¯ - vT xj

-

y¯

-

 vT 2

(xj1

+

xj2 )

=

 2

vT

[(xj1

- xj)

+

(xj2

-

xj )]

>

0.

This finishes the case analysis and proves the first statements of the lemma.

One last thing to prove is that i>j1 (y¯i - yi) - ij1 (y¯i - yi) = -2(y¯j1 - yj1 ) = 0. Recall from Lemma A.1.2 that for non-duplicate y¯j, we have y¯j = yj. Also by Lemma A.1.3 if y¯j is duplicate,
i:y¯i=y¯j (y¯i - yi) = 0. So,

(y¯i - yi) - (y¯i - yi) =

(y¯i - yi) -

(y¯i - yi) .

i>j1

ij1

iJ<

iJ

Recall the definition of J= = {j  J  | y¯j = yj}. For j  J \J=, y¯j = yj. So,

(y¯i - yi) -

(y¯i - yi) =

(y¯i - yi) -

(y¯i - yi) .

iJ<

iJ

iJ< J=

iJ J=

Recall the definition of j1 = argmaxjJ= xj 2. For any other j  J=\{j1},

xj1

2 2



xj 2

xj1 2 

xj , xj1

,

where the first  sign is due to definition of j1, and the second is from Cauchy-Schwarz inequality.

Since xj1 and xj are distinct by assumption, they must differ in either length or direction, or both.

So, we can check that at least one of "" must be strict inequality, so j  J=\{j1}. Thus,

xj1

2 2

>

xj , xj1

for all

J=\{j1} = J<  J= and {j1} = J  J=,

proving that

(y¯i - yi) - (y¯i - yi) =

(y¯i - yi) - (y¯j1 - yj1 ) .

i>j1

ij1

jJ= \{j1}

Also, by Lemma A.1.3,

0 = (y¯i - yi) = (y¯i - yi) = (y¯j1 - yj1 ) +

(y¯i - yi).

iJ 

iJ=

jJ= \{j1}

Wrapping up all the equalities, we can conclude that

(y¯i - yi) - (y¯i - yi) = -2 (y¯j1 - yj1 ) ,

i>j1

ij1

13

Under review as a conference paper at ICLR 2019

finishing the proof of the last statement.

It is time to present the parameters (W~ j, ~bj)2j=1, whose empirical risk is strictly smaller than the

local minimum (W^ j, ^bj)2j=1 with a sufficiently small choice of   (0, 1]. Now, let  be a constant

such that



=

sign((y¯j1

-

yj1 )(s+

-

vT s-))

(xj1 4

-

xj2 ) .

(A.4)

Its absolute value is proportional to   (0, 1], which is a undetermined number that will be specified

at the end of the proof. Since || is small enough, we can check that

sign(y¯i - vT xi - ) = sign(y¯i - vT xi -  + ) = sign(y¯i - vT xi -  - ).

Then, assign parameter values

W~ 1

=

-[W[¯W¯][]d[dxx]

- vT ] + vT

 

,

~b1

=

-[W[¯W¯]d]dxx++11-+++

 

,

0(d1 -2)×dx

0d1-2

W~ 2

=

s+

1 +

s-

1

-1

0Td1-2 , ~b2 = .

With these parameter values,

 y¯i - vT xi -  +   W~ 1xi + ~b1 = -y¯i + vT xi +  +  .
0d1-2

As we saw in Lemma A.2, for i  j1, y¯i - vT xi -  +  < 0 and -y¯i + vT xi +  +  > 0. So

y^i = W~ 2h¯s+,s- (W~ 1xi + ~b1) + ~b2

=

s+

1 +

s- s-(y¯i

-

vT xi

-



+

)

-

s+

1 +

s- s+(-y¯i

+

vT xi

+



+

)

+



=

y¯i

-

vT

xi

-

s+ s+

- +

s- s-

.

Similarly, for i > j1, y¯i - vT xi -  +  > 0 and -y¯i + vT xi +  +  < 0, so

y^i

=

W~ 2h¯s+,s- (W~ 1xi

+

~b1)

+

~b2

=

y¯i

-

vT xi

+

s+ s+

- +

s- s-

.

Now, the squared error loss of this point is

((W~ j , ~bj )2j=1)

=

1 2

Y^ - Y

2 F

1 =
2
ij1

y¯i

-

vT xi

-

s+ s+

- +

s- s-



-

yi

21 + 2
i>j1

y¯i

-

vT

xi

+

s+ s+

- +

s- s-



-

yi

2



1m =
2
i=1

y¯i - vT xi - yi 2 + 
i>j1

y¯i - vT xi - yi

-
ij1

y¯i - vT xi - yi



s+ s+

- +

s- s-



+

O(2)



= 0(W¯ ) - 

m
(y¯i - yi) xiT
i=1

v

+

O(2)

+


i>j1

(y¯i

-

yi)

-

ij1

(y¯i

-

yi)

s+ s+

- +

s- s-



+

O()

+

O(2).

Recall that

m i=1

(y¯i

-

yi)

xiT

=

0 for least squares estimates y¯i.

From Lemma A.2, we saw that

i>j1 (y¯i - yi) - ij1 (y¯i - yi) = -2(y¯j1 - yj1 ). As seen in the definition of  (A.4), the

magnitude of  is proportional to . Substituting (A.4), we can express the loss as

((W~ j , ~bj )2j=1) =

0(W¯ )

-

|(y¯j1

-

yj1 )(s+ - s-)|vT (xj1 2(s+ + s-)

-

xj2 )

+

O(2).

Recall that vT (xj1 - xj2 ) > 0 from (A.3). Then, for sufficiently small   (0, 1], ((W~ j , ~bj )2j=1) < 0(W¯ ) = ((W^ j , ^bj )j2=1),

therefore proving that (W^ j, ^bj)2j=1 is a spurious local minimum.

14

Under review as a conference paper at ICLR 2019

A3 PROOF OF THEOREM 2

A3.1 PROOF OF PART 1

Given v1, v2, v3, v4  R satisfying conditions (C2.1) and (C2.2), we can pick parameter values (W~ j, ~bj)2j=1 to perfectly fit the given dataset:

W~ 1 =

v1 v3

v2 v4

, ~b1 =

0 0

, W~ 2 =

h(v3)h

v1 +v2 2

-h(v1)h

v3 +v4 2

-1 [h(v3) -h(v1)], ~b2 = 0.

With these values, we can check that Y^ = [0 0 1], hence perfectly fitting Y , thus the loss ((W~ j , ~bj )2j=1) = 0.

A3.2 PROOF OF PART 2

Given conditions (C2.3)­(C2.7) on v1, v2, u1, u2  R, we prove below that there exists a local

minimum (W^ j, ^bj)2j=1 for which the output of the network is the same as linear least squares model,

and its empirical risk is

((W^ j , ^bj )j2=1)

=

1 3

.

If

the conditions

of Part

1 also

hold,

this

local

minimum

is strictly inferior to the global one.

First, compute the output Y¯ of linear least squares model to obtain Y¯ =

1 3

1 3

1 3

.

Now assign

parameter values

W^ 1 =

v1 v2

v1 v2

, ^b1 =

0 0

, W^ 2 = [u1

u2] , ^b2 = 0.

With these values we can check that Y^ =

1 3

1 3

1 3

, under condition (C2.3): u1h(v1)+u2h(v2) =

1 3

.

The

empirical

risk

is

((W^ j , ^bj )j2=1)

=

1 2

(

1 9

+

1 9

+

4 9

)

=

1 3

.

It remains to show that this is indeed a local minimum of . To show this, we apply perturbations to
the parameters to see if the risk after perturbation is greater than or equal to ((W^ j, ^bj)j2=1). Let the perturbed parameters be

W 1 =

v1 + 11 v2 + 21

v1 + 12 v2 + 22

, b1 =

1 2

, W 2 = [u1 +

1

u2 + 2] , b2 = ,

(A.5)

where 11, 12, 21, 22, 1, 2, 1, 2, and  are small real numbers. The next lemma rearranges the terms in ((W j, bj)2j=1) into a form that helps us prove local minimality of (W^ j, ^bj)j2=1. Appendix A4 gives the proof of Lemma A.3, which includes as a byproduct some equalities on poly-
nomials that may be of wider interest.

Lemma A.3. Assume there exist real numbers v1, v2, u1, u2 such that conditions (C2.3)­(C2.5) hold. Then, for perturbed parameters (W j, bj)2j=1 defined in (A.5),

((W j , bj )2j=1)



1 3

+ 1(11

- 12)2

+ 2(21

- 22)2

+

3(11 -12)(21 -22),

(A.6)

where

i

=

uih (vi) 12

+

u2i (h (vi))2 4

+ o(1), for i

=

1, 2, and 3

=

u1 u2 h

(v1)h (v2) 2

+ o(1), and

o(1)

contains terms that diminish to zero as perturbations vanish.

To make the the sum of the last three terms of (A.6) nonnegative, we need to satisfy 1  0

and 32 - 412  0; these inequalities are satisfied for small enough perturbations because of

conditions (C2.6)­(C2.7). Thus, we conclude that

((W j , bj )2j=1)



1 3

=

((W^ j, ^bj)2j=1) for small

enough perturbations, proving that (W^ j, ^bj)j2=1 is a local minimum.

A4 PROOF OF LEMMA A.3

The goal of this lemma is to prove that

((W j,

bj )2j=1)

1 =
3

+

3 (perturbations)2 2

+

u1h (v1) + u12(h (v1))2 + o(1) 12 4

(11 - 12)2

15

Under review as a conference paper at ICLR 2019

+

u2h (v2) + u22(h (v2))2 + o(1) 12 4

(21 - 22)2

+

u1u2h (v1)h (v2) + o(1) 2

(11 - 12)(21 - 22),

where o(1) contains terms that diminish to zero as perturbations decrease.

(A.7)

Using the perturbed parameters,

W 1X + b11mT =

v1 + 11 + 1 v2 + 21 + 2

v1 + 12 + 1 v2 + 22 + 2

v1 +

11 +12 2

+ 1

v2 +

21 +22 2

+ 2

,

so the empirical risk can be expressed as

((W j , bj )j2=1)

1 =
2

W 2h

W 1X + b11Tm

+ b21mT - Y

2 F

1 = 2 [(u1 +

1)h(v1 + 11 + 1) + (u2 +

2)h(v2 + 21 + 2) + ]2

1 + 2 [(u1 +

1)h(v1 + 12 + 1) + (u2 +

2)h(v2 + 22 + 2) + ]2

1

+ 2

(u1 +

1)h

v1

+

11

+ 12 2

+ 1

+ (u2 + 2)h

v2

+

21

+ 22 2

+ 2

2
+-1

(A.8)

So, the empirical risk (A.8) consists of three terms, one for each training example. By expanding the activation function h using Taylor series expansion and doing algebraic manipulations, we will derive the equation (A.7) from (A.8).

Using the Taylor series expansion, we can express h(v1 + 11 + 1) as

h(v1 + 11 + 1) = h(v1) +



h(n)(v1) n!

(11

+

1)n.

n=1

Using a similar expansion for h(v2 + 21 + 2), the first term of (A.8) can be written as

1 2 [(u1 +

1)h(v1 + 11 + 1) + (u2 +

2)h(v2 + 21 + 2) + ]2

1

= 2

(u1 +

1)

h(v1) +



h(n)(v1) n!

(11

+

1)n

n=1

+ (u2 + 2)

h(v2) +



h(n)(v2) n!

(21

+

2)n

n=1

2
+

1 =
2

1

+ 3

1h(v1) + (u1 +

1)

h(n)(v1) n!

(11

+

1)n

+

2h(v2) + (u2 +

2)



h(n)(v2) n!

(21

+

2)n

+



2
,

n=1

n=1

where

we used u1h(v1)+u2h(v2)

=

1 3

.

To

simplify notation,

let us introduce the

following

function:

t(1, 2) =

1h(v1) +

2h(v2) +  + (u1 +

1)



h(n)(v1) n!

(1

+

1)n

+

(u2

+

2)



h(n)(v2) n!

(2

+

2)n.

n=1

n=1

With this new notation t(1, 2), after doing similar expansions to the other terms of (A.8), we get

((W j , bj )2j=1)

1 =
2

1 21

3 + t(11, 21)

+ 2

1 21

3 + t(12, 22)

+ 2

-2 + t 3

11 + 12 , 21 + 22 22

2

11 =+
33

t(11, 21) + t(12, 22) - 2t

11 + 12 , 21 + 22 22

+

1 2

[t(11,

21)]2

+

1 2

[t(12,

22)]2

+

1 2

t

11 + 12 , 21 + 22 22

2

(A.9)

Before we show the lower bounds, we first present the following lemmas that will prove useful shortly. These are simple yet interesting lemmas that might be of independent interest.

16

Under review as a conference paper at ICLR 2019

Lemma A.4. For n  2,

an + bn - 2

a+b 2

n
= (a - b)2pn(a, b),

where pn is a polynomial in a and b. All terms in pn have degree exactly n - 2. When n = 2,

p2(a, b)

=

1 2

.

Proof The exact formula for pn(a, b) is as the following:

n-2
pn(a, b) =

k + 1 - 2-n+1

k
(k + 1 - l)

n l

k=0

l=0

an-k-2 bk .

Using this, we can check the lemma is correct just by expanding both sides of the equation. The rest of the proof is straightforward but involves some complicated algebra. So, we omit the details for simplicity.

Lemma A.5. For n1, n2  1, an1 cn2 + bn1 dn2 - 2

a + b n1 2

c + d n2 2

=(a - b)2qn1,n2 (a, b, d) + (c - d)2qn2,n1 (c, d, b) + (a - b)(c - d)rn1,n2 (a, b, c, d)

where qn1,n2 and rn1,n2 are polynomials in a, b, c and d. All terms in qn1,n2 and rn1,n2 have degree

exactly

n1

+

n2

-

2.

When

n1

=

n2

=

1,

q1,1(a, b, d)

=

0

and

r1,1(a, b, c, d)

=

1 2

.

Proof The exact formulas for qn1,n2 (a, b, d), qn2,n1 (c, d, b), and rn1,n2 (a, b, c, d) are as the following:

n1 -2
qn1,n2 (a, b, d) =
k1 =0

k1
k1 + 1 - 2-n1+1 (k1 + 1 - l1)
l1 =0

n1 l1

an1-k1-2bk1 dn2 ,

n2 -2
qn2,n1 (c, d, b) =
k2 =0

k2
k2 + 1 - 2-n2+1 (k2 + 1 - l2)
l2 =0

n2 l2

bn1 cn2-k2-2dk2 ,

n1-1 n2-1
rn1,n2 (a, b, c, d) =
k1=0 k2=0

k1 k2
1 - 2-n1-n2+1
l1=0 l2=0

n1 l1

n2 l2

an1-k1-1bk1 cn2-k2-1dk2 .

Similarly, we can check the lemma is correct just by expanding both sides of the equation. The remaining part of the proof is straightforward, so we will omit the details.

Using Lemmas A.4 and A.5, we will expand and simplify the "cross terms" part and "squared terms" part of (A.9). For the "cross terms" in (A.9), let us split t(1, 2) into two functions t1 and t2:

t1(1, 2) = 1h(v1) + 2h(v2) +  + (u1 + 1)h (v1)(1 + 1) + (u2 + 2)h (v2)(2 + 2)

t2(1, 2) =(u1 +

1)



h(n)(v1) n!

(1

+

1)n

+

(u2

+

2)



h(n)(v2) n!

(2

+

2)n,

n=2

n=2

so that t(1, 2) = t1(1, 2) + t2(1, 2). It is easy to check that

t1(11, 21) + t1(12, 22) - 2t1

11 + 12 , 21 + 22 22

= 0.

Also, using Lemma A.4, we can see that

(11 + 1)n + (12 + 1)n - 2

11

+ 2

12

+ 1

n
= (11 - 12)2pn(11 + 1, 12 + 1),

17

Under review as a conference paper at ICLR 2019

(21 + 2)n + (22 + 2)n - 2

21

+ 2

22

+ 2

n
= (21 - 22)2pn(21 + 2, 22 + 2),

so

t2(11, 21) + t2(12, 22) - 2t2

11 + 12 , 21 + 22 22

=(u1 +

1)(11 - 12)2



h(n)(v1) n!

pn(11

+

1,

12

+

1)

n=2

+ (u2 +

2)(21 - 22)2



h(n)(v2) n!

pn(21

+

2,

22

+

2).

n=2

Consider the summation



h(n)(v1) n!

pn(11

+

1,

12

+

1).

n=2

We assumed that there exists a constant c > 0 such that |h(n)(v1)|  cnn!. From this, for small

enough perturbations 11, 12, and 1, we can see that the summation converges, and the summands

converge to zero as n increases. Because all the terms in pn (n  3) are of degree at least one, we

can thus write



h(n)(v1) n!

pn(11

+

1, 12

+

1)

=

h

(v1) + o(1). 4

n=2

So, for small enough 11, 12, and 1, the term h

(v1 ) 4

dominates the summation.

Similarly, as

long as 21, 22, and 2 are small enough, the summation

 n=2

h(n) (v2 n!

)

pn

(21

+

2, 22

+

2)

is

dominated by

h

(v2 4

)

.

In conclusion, for small enough perturbations,

t(11, 21) + t(12, 22) - 2t

11 + 12 , 21 + 22 22

=t2(11, 21) + t2(12, 22) - 2t2

11 + 12 , 21 + 22 22

=(u1 + o(1))

h (v1) + o(1) 4

(11 - 12)2 + (u2 + o(1))

h (v2) + o(1) 4

=

u1h (v1) + o(1) 4

(11 - 12)2 +

u2h (v2) + o(1) 4

(21 - 22)2.

(21 - 22)2 (A.10)

Now, it is time to take care of the "squared terms." We will express the terms as

1 2

[t(11, 21)]2

+

1 2

[t(12,

22)]2

+

1 2

t

11 + 12 , 21 + 22 22

2

3 =t

11 + 12 , 21 + 22

22 2

2

+

1 2

[t(11,

21)]2

+

1 2

[t(12,

22)]2

-

t

11 + 12 , 21 + 22 22 (A.11)

and expand and simplify the terms in

1 2

[t(11,

21)]2

+

1 2

[t(12,

22)]2

-

t

11 + 12 , 21 + 22 22

2
.

This time, we split t(1, 2) in another way, this time into three parts:

t3 = 1h(v1) + 2h(v2) + ,

t4(1) = (u1 +

1)



h(n)(v1 n!

)

(1

+

1)n

,

n=1

2
,

18

Under review as a conference paper at ICLR 2019

t5(2) = (u2 +

2)



h(n)(v2 n!

)

(2

+

2)n

,

n=1

so that t(1, 2) = t3 + t4(1) + t5(2). With this,

1 2

[t(11,

21)]2

+

1 2

[t(12,

22)]2

-

t

11 + 12 , 21 + 22 22

2

=t3 t4(11) + t4(12) - 2t4

11 + 12 2

+ t5(21) + t5(22) - 2t5

1 +
2

(t4(11))2 + (t4(12))2 - 2

t4

11 + 12 2

2

21 + 22 2

1 +
2

(t5(21))2 + (t5(22))2 - 2

t5

21 + 22 2

2

+ t4(11)t5(21) + t4(12)t5(22) - 2t4

11 + 12 2

t5

21 + 22 2

.

(A.12)

We now have to simplify the equation term by term. We first note that

t4(11) + t4(12) - 2t4

11 + 12 2

+ t5(21) + t5(22) - 2t5

21 + 22 2

=t2(11, 21) + t2(12, 22) - 2t2

11 + 12 , 21 + 22 22

,

so

t3 t4(11) + t4(12) - 2t4

11 + 12 2

+ t5(21) + t5(22) - 2t5

21 + 22 2

=t3 t2(11, 21) + t2(12, 22) - 2t2

11 + 12 , 21 + 22 22

=o(1)

u1h (v1) + o(1) 4

(11 - 12)2 +

u2h (v2) + o(1) 4

(21 - 22)2 ,

(A.13)

as seen in (A.10). Next, we have

(t4(11))2 + (t4(12))2 - 2

t4

11 + 12 2

2

=(u1 +

1)2

 n1 ,n2 =1

h(n1)(v1)h(n2)(v1) n1!n2!

(11 + 1)n1+n2 + (12 + 1)n1+n2 - 2

=(u1 +

1)2(11

-

12)2

 n1 ,n2 =1

h(n1)(v1)h(n2)(v1) n1!n2!

pn1+n2 (11

+

1,

12

+

1)

=

u12(h (v1))2 + o(1) 2

(11 - 12)2,

11

+ 12 2

+ 1

n1 +n2

(A.14)

,

when perturbations are small enough. We again used Lemma A.4 in the second equality sign, and

the

facts

that

pn1+n2 (·)

=

o(1)

whenever

n1

+

n2

>

2

and

that

p2(·)

=

1 2

.

In

a

similar

way,

(t5(21))2 + (t5(22))2 - 2

t5

21 + 22 2

2
=

u22(h (v2))2 + o(1) 2

(21 - 22)2. (A.15)

Lastly,

t4(11)t5(21) + t4(12)t5(22) - 2t4

11 + 12 2

t5

21 + 22 2

=(u1 +

1)(u2 +

2)

 n1 ,n2 =1

h(n1)(v1)h(n2)(v2) n1!n2!

(11 + 1)n1 (21 + 2)n2

19

Under review as a conference paper at ICLR 2019

+ (12 + 1)n1 (22 + 2)n2 - 2

11

+ 12 2

+ 1

n1

21

+ 22 2

+ 2

n2

,

=(u1 +

1)(u2 +

2)

(11

-

12)2

 n1 ,n2 =1

h(n1

)

(v1)h(n2 n1!n2!

)

(v2

)

qn1

,n2

(11

+

1,

12

+

1,

22

+

2)

+

(21

-

22)2

 n1 ,n2 =1

h(n1)(v1)h(n2)(v2) n1!n2!

qn2,n1 (21

+

2,

22

+

2,

12

+

1)

+

(11

-

12)(21

-

22)

 n1 ,n2 =1

h(n1

)

(v1)h(n2 n1!n2!

)

(v2

)

rn1

,n2

(11

+

1,

12

+

1,

21

+

2,

22

+

2)

=(u1u2 + o(1)) (11 - 12)2o(1) + (21 - 22)2o(1) + (11 - 12)(21 - 22)

h (v1)h (v2) + o(1) 2

(A.16)

,

where the second equality sign used Lemma A.5 and the third equality sign used the facts that

qn1,n2 (·)

=

o(1)

and

rn1,n2 (·)

=

o(1)

whenever

n1

+ n2

>

2,

and

that

q1,1(·)

=

0

and

r1,1(·)

=

1 2

.

If we substitute (A.13), (A.14), (A.15), and (A.16) into (A.12),

1 2

[t(11,

21)]2

+

1 2

[t(12,

22)]2

-

t

11 + 12 , 21 + 22 22

2

=o(1)

u1h (v1) + o(1) 4

(11 - 12)2 +

u2h (v2) + o(1) 4

(21 - 22)2

1 +
2

u21(h (v1))2 + o(1) 2

(11

-

12)2

+

1 2

u22(h (v2))2 + o(1) 2

(21 - 22)2

+ (u1u2 + o(1)) (11 - 12)2o(1) + (21 - 22)2o(1) + (11 - 12)(21 - 22)

h (v1)h (v2) + o(1) 2

=

u12(h (v1))2 + o(1) 4

(11 - 12)2 +

u22(h (v2))2 + o(1) 4

(21 - 22)2

+

u1u2h (v1)h (v2) + o(1) 2

(11 - 12)(21 - 22).

(A.17)

We are almost done. If we substitute (A.10), (A.11), and (A.17) into (A.9), we can get

((W j , bj )2j=1)

13 =+ t

11 + 12 , 21 + 22

32 2 2

2

+

u1h (v1) + o(1) 12

(11 - 12)2 +

u2h (v2) + o(1) 12

(21 - 22)2

+

u21(h (v1))2 + o(1) 4

(11 - 12)2 +

u22(h (v2))2 + o(1) 4

(21 - 22)2

+

u1u2h (v1)h (v2) + o(1) 2

(11 - 12)(21 - 22)

13 =+ t

11 + 12 , 21 + 22

32 2 2

2
+

u1h (v1) + u12(h (v1))2 + o(1) 12 4

(11 - 12)2

+

u2h (v2) + u22(h (v2))2 + o(1) 12 4

(21 - 22)2 +

u1u2h (v1)h (v2) + o(1) 2

(11 - 12)(21 - 22),

which is the equation (A.7) that we were originally aiming to show.

20

Under review as a conference paper at ICLR 2019

A5 PROOF OF COROLLARY 3

For the proof of this corollary, we present the values of real numbers that satisfy assumptions (C2.1)­ (C2.7), for each activation function listed in the corollary: sigmoid, tanh, arctan, exponential linear units (ELU, Clevert et al. (2015)), scaled exponential linear units (SELU, Klambauer et al. (2017)).
To remind the readers what the assumptions were, we list the assumptions again. For (C2.1)­(C2.2), there exist real numbers v1, v2, v3, v4  R such that

(C2.1) h(v1)h(v4) = h(v2)h(v3),

(C2.2) h(v1)h

v3 +v4 2

= h(v3)h

v1 +v2 2

.

For (C2.3)­(C2.7), there exist real numbers v1, v2, u1, u2  R such that the following assumptions hold:

(C2.3)

u1h(v1) + u2h(v2) =

1 3

,

(C2.4) h is infinitely differentiable at v1 and v2,

(C2.5) There exists a constant c > 0 such that |h(n)(v1)|  cnn! and |h(n)(v2)|  cnn!.

(C2.6)

(u1h (v1))2 +

u1h (v1) 3

> 0,

(C2.7)

(u1h (v1)u2h (v2))2 < ((u1h (v1))2 +

u1

h

(v1 3

)

)((u2

h

(v2))2

+

u2

h

(v2 3

)

).

For each function, we now present the appropriate real numbers that satisfy the assumptions.

A5.1 SIGMOID

When h is sigmoid,

h(x)

=

1+

1 exp(-x) ,

h-1(x)

=

log

x 1-x

.

Assumptions (C2.1)­(C2.2) are satisfied by

(v1, v2, v3, v4) =

h-1

1 2

, h-1

1 4

, h-1

1 4

, h-1

1 8

,

and assumptions (C2.3)­(C2.7) are satisfied by

(v1, v2, u1, u1) =

h-1

1 4

, h-1

1 4

22 ,,
33

.

Among them, (C2.4)­(C2.5) follow because sigmoid function is an real analytic function Krantz & Parks (2002).

A5.2 TANH

When h is hyperbolic tangent, assumptions (C2.1)­(C2.2) are satisfied by

(v1, v2, v3, v4) =

tanh-1

1 2

, tanh-1

1 4

, tanh-1

1 4

, tanh-1

1 8

and assumptions (C2.3)­(C2.7) are satisfied by

(v1, v2, u1, u1) =

tanh-1

1 2

, tanh-1

1 2

, 1, - 1 3

,

Assumptions (C2.4)­(C2.5) hold because hyperbolic tangent function is real analytic.

,

21

Under review as a conference paper at ICLR 2019

A5.3 ARCTAN

When h is inverse tangent, assumptions (C2.1)­(C2.2) are satisfied by

1111 (v1, v2, v3, v4) = tan 2 , tan 4 , tan 4 , tan 8 ,

and assumptions (C2.3)­(C2.7) are satisfied by

(v1, v2, u1, u1) =

tan

1 2

, tan

1 2

, 1, - 1 3

,

Assumptions (C2.4)­(C2.5) hold because inverse tangent function is real analytic.

A5.4 ELU AND SELU

When h is ELU or SELU,

x x0

h(x) = 

(exp(x) - 1)

, x<0

h (x) = 

x0,

 exp(x) x < 0

h-1(x) =

x/

log

x 

+

1

x0 ,
x<0

h (x) = 0

x0,

 exp(x) x < 0

where  > 0, and  = 1 (ELU) or  > 1 (SELU). In this case, assumptions (C2.1)­(C2.2) are satisfied by

(v1, v2, v3, v4) =

h-1

-  2

, h-1

-  4

, h-1

-  4

, h-1

-  8

.

Assumptions (C2.3)­(C2.7) are satisfied by

1 2 21

(v1, v2, u1, u2) =

, log 3

3

,,  

,

where (C2.4)­(C2.5) are satisfied because h(x) is real analytic at v1 and v2.

A6 PROOF OF THEOREM 2 FOR "RELU-LIKE" ACTIVATION FUNCTIONS.

Recall the piecewise linear nonnegative homogeneous activation function

h¯s+,s- (x) =

s+x s-x

x0 x < 0,

where s+ > 0, s-  0 and s+ = s-, we will prove that the statements of Theorem 2 hold for h¯s+,s- .

A6.1 PROOF OF PART 1

In the case of s- > 0, assumptions (C2.1)­(C2.2) are satisfied by

1 1 11

(v1, v2, v3, v4) =

,- ,- , s+ s- s- s+

.

The rest of the proof can be done in exactly the same way as the proof of Theorem 2.1, provided in Appendix A3.

For s- = 0, which corresponds to the case of ReLU, define parameters

W~ 1 =

0 -2

2 1

, ~b1 =

0 0

, W~ 2 =

1 s+

-

2 s+

, ~b2 = 0.

We can check that so

h¯s+,s- (W~ 1X + ~b113T ) = s+

0 0

2 1

1 0

,

W~ 2h¯s+,s- (W~ 1X + ~b11T3 ) + ~b213T = [0 0 1] .

22

Under review as a conference paper at ICLR 2019

A6.2 PROOF OF PART 2

Assumptions (C2.3)­(C2.6) are satisfied by

Assign parameter values

1 1 22

(v1, v2, u1, u1) =

, ,, 4s+ 4s+ 3 3

.

W^ 1 =

v1 v2

v1 v2

, ^b1 =

0 0

, W^ 2 = [u1

u2] , ^b2 = 0.

It is easy to compute that the output of the neural network is Y^ =

1 3

1 3

1 3

, so

((W^ j , ^bj )2j=1) =

1 3

.

Now, it remains to show that this is indeed a local minimum of . To show this, we apply perturba-
tions to the parameters to see if the risk after perturbation is greater than or equal to ((W^ j, ^bj)2j=1). Let the perturbed parameters be

W 1 =

v1 + 11 v2 + 21

v1 + 12 v2 + 22

, b1 =

1 2

, W 2 = [u1 +

1

u2 + 2] , b2 = ,

where 11, 12, 21, 22, 1, 2, 1, 2, and  are small enough real numbers. Using the perturbed parameters,

W 1X + b11mT =

v1 + 11 + 1 v2 + 21 + 2

so the empirical risk can be expressed as

v1 + 12 + 1 v2 + 22 + 2

v1 +

11 +12 2

+ 1

v2 +

21 +22 2

+ 2

,

((W j , bj )j2=1)

1 =
2

W 2h¯s+,s-

W 1X + b11mT

+ b21mT - Y

2 F

1 = 2 [(u1 +

1)s+(v1 + 11 + 1) + (u2 +

2)s+(v2 + 21 + 2) + ]2

1 + 2 [(u1 +

1)s+(v1 + 12 + 1) + (u2 +

2)s+(v2 + 22 + 2) + ]2

1

+ 2

(u1 +

1)s+

v1

+

11

+ 12 2

+ 1

+ (u2 + 2)s+

v2

+

21 + 22 2

+ 2

2
+-1 .

To simplify notation, let us introduce the following function:

t(1, 2) = s+ 1v1 + s+ 2v2 +  + s+(u1 + 1)(1 + 1) + s+(u2 + 2)(2 + 2)

It is easy to check that

t(11, 21) + t(12, 22) - 2t

11 + 12 , 21 + 22 22

= 0.

With this new notation t(1, 2), we get

((W j , bj )j2=1)

11

21

= 2

3 + t(11, 21)

+ 2

1 21 2

3 + t(12, 22)

+ - +t 23

11 + 12 , 21 + 22 22

2

11

=+ 33

t(11, 21) + t(12, 22) - 2t

11 + 12 , 21 + 22 22

+

1 2

[t(11,

21)]2

+

1 2

[t(12, 22)]2

+

1 2

t

11 + 12 , 21 + 22 22

2 1 = 3

((W^ j , ^bj )2j=1).

23

Under review as a conference paper at ICLR 2019

A7 PROOF OF THEOREM 4

Before we start, note the following partial derivatives, which can be computed using straightforward

matrix calculus:

 Wj

= (WH+1:j+1)T 

0(WH+1:1)(Wj-1:1)T ,

for all j  [H + 1].

A7.1 PROOF OF PART 1, IF dy  dx

For Part 1, we must show that if  0(W^ H+1:1) = 0 then (W^ j)Hj=+11 is a saddle point of . Thus, we

show that (W^ j)Hj=+11 is neither a local minimum nor a local maximum. More precisely, for each j, let

B (Wj) be an -Frobenius-norm-ball centered at Wj, and

H +1 j=1

B

(Wj )

their

Cartesian

product.

We wish to show that for every > 0, there exist tuples (Pj)jH=+11, (Qj)Hj=+11 

H +1 j=1

B

(W^ j)

such

that

((Pj )jH=+11) > ((W^ j )Hj=+11) > ((Qj )jH=+11).

(A.18)

To prove (A.18), we exploit ((W^ j)Hj=+11) = 0(W^ H+1:1), and the assumption  0(W^ H+1:1) = 0. The key idea is to perturb the tuple (W^ j)jH=+11 so that the directional derivative of 0 along PH+1:1 - W^ H+1:1 is positive. Since 0 is differentiable, if PH+1:1 - W^ H+1:1 is small, then
((Pj )Hj=+11) = 0(PH+1:1) > 0(W^ H+1:1) = ((W^ j )jH=+11).
Similarly, we can show ((Qj)Hj=+11) < ((W^ j)jH=+11). The key challenge lies in constructing these perturbations; we outline our approach below; this construction may be of independent interest too. For this section, we assume that dx  dy for simplicity; the case dy  dx is treated in Appendix A7.2.
Since  0(W^ H+1:1) = 0, col( 0(W^ H+1:1)) must be a strict subspace of Rdy . Consider  /W1 at a critical point to see that (W^ H+1:2)T  0(W^ H+1:1) = 0, so col(W^ H+1:2)  col( 0(W^ H+1:1)) Rdy . This strict inclusion implies rank(W^ H+1:2) < dy  d1, so that null(W^ H+1:2) is not a trivial subspace. Moreover, null(W^ H+1:2)  null(W^ H:2)  · · ·  null(W^ 2). We can split the proof into two cases: null(W^ H+1:2) = null(W^ H:2) and null(W^ H+1:2) = null(W^ H:2).
Let the SVD of  0(W^ H+1:1) = UlUrT . Recall [Ul]·,1 and [Ur]·,1 denote first columns of Ul and Ur, respectively.

Case 1: null(W^ H+1:2) = null(W^ H:2). In this case, null(W^ H+1:2) null(W^ H:2). We will perturb W^ 1 and W^ H+1 to obtain the tuples (Pj)jH=+11 and (Qj)jH=+11. To create our perturbation, we choose two unit vectors as follows:
v0 = [Ur]·,1, v1  null(W^ H+1:2)  null(W^ H:2).
Then, define 1 := v1v0T  Rd1×dx , and V1 := W^ 1 + 1  B (W^ 1). Since v1 lies in null(W^ H+1:2), observe that
W^ H+1:2V1 = W^ H+1:1 + W^ H+1:2v1v0T = W^ H+1:1.
With this definition of V1, we can also see that
 0(W^ H+1:1)V1T (W^ H:2)T =  0(W^ H+1:1)(W^ H:1)T +  0(W^ H+1:1)v0v1T (W^ H:2)T .
Note that  0(W^ H+1:1)(W^ H:1)T is equal to  /WH+1 at a critical point, hence is zero. Since v0 = [Ur]·,1, we have  0(W^ H+1:1)v0 = max( 0(W^ H+1:1))[Ul]·,1, which is a nonzero column vector, and since v1  null(W^ H:2) = row(W^ H:2), v1T (W^ H:2)T is a nonzero row vector. From this observation,  0(W^ H+1:1)v0v1T (W^ H:2)T is nonzero, and so is  0(W^ H+1:1)V1T (W^ H:2)T .

24

Under review as a conference paper at ICLR 2019

We are now ready to define the perturbation on W^ H+1:

H+1 :=

 0

0(W^ H+1:1)V1T (W^ H:2)T (W^ H+1:1)V1T (W^ H:2)T

F

,

so that W^ H+1 + H+1  B (W^ H+1). Then, observe that

H+1W^ H:2V1,  0(W^ H+1:1) = H+1,  0(W^ H+1:1)V1T (W^ H:2)T > 0,

by definition of H+1. In other words, H+1W^ H:2V1 is an ascent direction of 0 at W^ H+1:1. Now choose the tuples

(Pj )Hj=+11 = (V1, W^ 2, . . . , W^ H , W^ H+1 + H+1), (Qj )jH=+11 = (V1, W^ 2, . . . , W^ H , W^ H+1 - H+1),

where   (0, 1] is chosen suitably. It is easy to verify that (Pj)Hj=+11, (Qj)jH=+11 

H +1 j=1

B

(W^ j),

and that the products

PH+1:1 = W^ H+1:1 + H+1W^ H:2V1, QH+1:1 = W^ H+1:1 - H+1W^ H:2V1.

Since 0 is differentiable, for small enough   (0, 1], 0(PH+1:1) > 0(W^ H+1:1) > 0(QH+1:1), proving (A.18). This construction is valid for any > 0, so we are done.

Case 2: null(W^ H+1:2) = null(W^ H:2). By and large, the proof of this case goes the same, except that we need a little more care on what perturbations to make. Define
j = max{j  [2, H] | null(W^ j:2) null(W^ j-1:2)}.
When you start from j = H down to j = 2 and compare null(W^ j:2) and null(W^ j-1:2), the first iterate j at which you have null(W^ j:2) = null(W^ j-1:2) is j. If all null spaces of matrices from W^ H:2 to W^ 2 are equal, j = 2 which follows from the notational convention that null(W^ 1:2) = null(Id1 ) = {0}. According to j, in Case 2 we perturb W^ 1, W^ H+1, W^ H , . . . , W^ j to get (Pj)Hj=+11 and (Qj )Hj=+11.
Recall the definition of left-null space of matrix A: leftnull(A) = {v | vT A = 0}. By definition of j, note that
null(W^ H+1:2) = null(W^ H:2) = · · · = null(W^ j:2)  row(W^ H+1:2) = row(W^ H:2) = · · · = row(W^ j:2)  rank(W^ H+1:2) = rank(W^ H:2) = · · · = rank(W^ j:2),
which means the products are all rank-deficient (recall rank(W^ H+1:2) < dy and all dj  dy), and hence they all have nontrivial left-null spaces leftnull(W^ H:2), . . . , leftnull(W^ j:2) as well.
We choose some unit vectors as the following:
v0 = [Ur]·,1, v1  null(W^ j:2)  null(W^ j-1:2), vH+1 = [Ul]·,1, vH  leftnull(W^ H:2), ··· vj  leftnull(W^ j:2).
Then, for a   (0, ] whose value will be specified later, define
1 := v1v0T  Rd1×dx ,

25

Under review as a conference paper at ICLR 2019

H+1 := vH+1vHT  Rdy×dH , ···

j+1 := vj+1vjT  R ,dj+1×dj

and Vj := W^ j + j accordingly for j = 1, j + 1, . . . , H + 1.

By definition of j's, note that

VH+1:j+1W^ j:2V1 =VH+1:j+2W^ j+1:2V1 + VH+1:j+2j+1W^ j:2V1 = VH+1:j+2W^ j+1:2V1 =VH+1:j+3W^ j+2:2V1 + VH+1:j+3j+2W^ j+1:2V1 = VH+1:j+3W^ j+2:2V1 =···

(A.19) (A.20)

=W^ H+1:2V1 + H+1W^ H:2V1 = W^ H+1:2V1 =W^ H+1:1 + W^ H+1:21 = W^ H+1:1,

(A.21) (A.22)

where in (A.19) we used the definition that vj  leftnull(W^ j:2), in (A.20) that vj+1  leftnull(W^ j+1:2), in (A.21) that vH  leftnull(W^ H:2), and in (A.22) that v1  null(W^ j:2).

Now consider the following matrix product:

(VH+1:j+1)T  0(W^ H+1:1)V1T (W^ j-1:2)T =(W^ j+1 + j+1)T · · · (W^ H+1 + H+1)T  0(W^ H+1:1)(W^ 1 + 1)T W^ 2T · · · W^ jT-1. (A.23)

We are going to show that for small enough   (0, ], this product is nonzero. If we expand (A.23), there are many terms in the summation. However, note that the expansion can be arranged in the following form:

(W^ j+1 + j+1)T · · · (W^ H+1 + H+1)T  0(W^ H+1:1)(W^ 1 + 1)T W^ 2T · · · W^ jT-1

=C0 + C1 + C22 + · · · + CH-j+2H-j+2

(A.24)

where Cj  Rdj ×dj-1 for all j and Cj doesn't depend on , and specifically

C0 = W^ jT+1 · · · W^ HT +1 0(W^ H+1:1)W^ 1T W^ 2T · · · W^ jT-1,

CH -j  +2

=



H

1
-j

+2

Tj

+1

·

·

·

TH

+1



0(W^ H+1:1)T1 W^ 2T

· · · W^ jT-1.

Because

the

C0

is exactly equal to

  Wj 

evaluated at a critical point ((W^ j)jH=+11), C0

=

0.

Also, due

to definitions of j's,

CH-j+2 =(vj vjT+1)(vj+1vjT+2) · · · (vH vHT +1) 0(W^ H+1:1)(v0v1T )(W^ j-1:2)T =vj vHT +1 0(W^ H+1:1)v0v1T (W^ j-1:2)T .

First, vj is a nonzero column vector. Since vH+1 = [Ul]·,1 and v0 = [Ur]·,1,
vHT +1 0(W^ H+1:1)v0 = max( 0(W^ H+1:1)) > 0. Also, since v1  row(W^ j-1:2), v1T (W^ j-1:2)T will be a nonzero row vector. Thus, the product CH-j+2 will be nonzero.

Since CH-j+2 = 0, we can pick any index (, ) such that the (, )-th entry of CH-j+2, denoted as [CH-j+2],, is nonzero. Then, the (, )-th entry of (A.24) can be written as

c1 + c22 + · · · + cH-j+2H-j+2,

(A.25)

where cj = [Cj],. To show that the matrix product (A.23) is nonzero, it suffices to show that its

(, )-th entry (A.25) is nonzero. If c1 = · · · = cH-j+1 = 0, then with the choice of  = , (A.25)

is trivially nonzero. If some of c1, . . . , cH-j+1 are nonzero, we can scale   (0, ] arbitrarily

small, so that

|c1 + · · · + cH-j+1H-j+1| > |cH-j+2H-j+2|,

and thus (A.25) can never be zero. From this, with sufficiently small , the matrix product (A.23) is

nonzero.

26

Under review as a conference paper at ICLR 2019

Now define the perturbation on W^ j :

j :=

(VH+1:j+1)T  (VH+1:j+1)T  0

0(W^ H+1:1)V1T (W^ j-1:2)T (W^ H+1:1)V1T (W^ j-1:2)T

F

,

so that W^ j + j  B (W^ j ). Then, observe that

VH+1:j+1j W^ j-1:2V1,  0(W^ H+1:1) = tr((VH+1:j+1j W^ j-1:2V1)T  0(W^ H+1:1)) = tr(Tj (VH+1:j+1)T  0(W^ H+1:1)V1T (W^ j-1:2)T ) = j , (VH+1:j+1)T  0(W^ H+1:1)V1T (W^ j-1:2)T > 0.

This means that VH+1:j+1j W^ j-1:2V1 and -VH+1:j+1j W^ j-1:2V1 are ascent and descent directions, respectively, of 0(R) at W^ H+1:1. After that, the proof is very similar to the previous case. We can define

(Pj )jH=+11 = (V1, W^ 2, . . . , W^ j-1, W^ j + j , Vj+1, . . . , VH+1)  (Qj )jH=+11 = (V1, W^ 2, . . . , W^ j-1, W^ j - j , Vj+1, . . . , VH+1) 

H +1
B
j=1

(W^ j)

H +1
B
j=1

(W^ j),

where 0 <   1 is small enough, to show that by differentiability of 0(R), we get ((Pj)Hj=+11) > ((W^ j )jH=+11) > ((Qj )Hj=+11).

A7.2 PROOF OF PART 1, IF dy  dx

First, note that  0(W^ H+1:1)(W^ H:1)T

=

0,

because

it

is

  WH +1

evaluated at a critical point

(W^ j)jH=+11. This equation implies row( 0(W^ H+1:1))  row(W^ H:1). Since  0(W^ H+1:1) = 0,

row( 0(W^ H+1:1)) cannot be the whole Rdx , and it is a strict subspace of Rdx . Observe that

W^ H:1  RdH×dx and dx  dH . Since row(W^ H:1)  row( 0(W^ H+1:1)) Rdx , this means

rank(W^ H:1) < dx, hence leftnull(W^ H:1) is not a trivial subspace.

Now observe that leftnull(W^ H:1)  leftnull(W^ H:2)  · · ·  leftnull(W^ H ),

where some of left-null spaces in the right could be zero-dimensional. The procedure of choos-
ing the perturbation depends on these left-null spaces. We can split the proof into two cases: leftnull(W^ H:1) = leftnull(W^ H:2) and leftnull(W^ H:1) = leftnull(W^ H:2). Because the former case is simpler, we prove the former case first.

Before we dive in, again take SVD of  0(W^ H+1:1) = UlUrT . Since  0(W^ H+1:1) = 0, there is at least one positive singular value, so max( 0(W^ H+1:1)) > 0. Recall the notation that [Ul]·,1 and [Ur]·,1 are first column vectors of Ul and Ur, respectively.

Case 1: leftnull(W^ H:1) = leftnull(W^ H:2). In this case, leftnull(W^ H:1) leftnull(W^ H:2). We will perturb W^ 1 and W^ H+1 to obtain the desired tuples (Pj)Hj=+11 and (Qj)Hj=+11.

Now choose two unit vectors vH and vH+1, as the following:

vH  leftnull(W^ H:1)  leftnull(W^ H:2), vH+1 = [Ul]·,1,

and then define H+1 := vH+1vHT  Rdy×dH , and VH+1 := W^ H+1 + H+1. We can check VH+1  B (W^ H+1) from the fact that vH and vH+1 are unit vectors. Since vH  leftnull(W^ H:1), observe that
VH+1W^ H:1 = W^ H+1:1 + vH+1vHT W^ H:1 = W^ H+1:1.
With this definition of VH+1, we can also see that

(W^ H:2)T VHT+1 0(W^ H+1:1) = (W^ H+1:2)T  0(W^ H+1:1) + (W^ H:2)T vH vHT +1 0(W^ H+1:1).

Note

that

(W^ H+1:2)T 

0(W^ H+1:1)

is

exactly

equal

to

 W1

evaluated

at

(W^ j )Hj=+11,

hence

is

zero

by assumption that (W^ j)jH=+11 is a critical point. Since vH  leftnull(W^ H:2) = col(W^ H:2),

27

Under review as a conference paper at ICLR 2019

(W^ H:2)T vH is a nonzero column vector, and since vH+1 = [Ul]·,1, vHT +1 0(W^ H+1:1) = max( 0(W^ H+1:1))([Ur]·,1)T , which is a nonzero row vector. From this observation, we can
see that (W^ H:2)T vH vHT +1 0(W^ H+1:1) is nonzero, and so is (W^ H:2)T VHT+1 0(W^ H+1:1).

Now define the perturbation on W^ 1:

1 :=

(W^ H:2)T VHT+1 (W^ H:2)T VHT+1 0

0(W^ H+1:1) (W^ H+1:1) F

,

so that W^ 1 + 1  B (W^ 1). Then, observe that

VH+1W^ H:21,  0(W^ H+1:1) = tr((VH+1W^ H:21)T  0(W^ H+1:1)) = tr(1T (W^ H:2)T VHT+1 0(W^ H+1:1)) = 1, (W^ H:2)T VHT+1 0(W^ H+1:1) > 0,

by definition of 1. This means that VH+1W^ H:21 and -VH+1W^ H:21 are ascent and descent directions, respectively, of 0(R) at W^ H+1:1. Since 0 is a differentiable function, there exists small enough 0 <   1 that satisfies

0(W^ H+1:1 + VH+1W^ H:21) > 0(W^ H+1:1), 0(W^ H+1:1 - VH+1W^ H:21) < 0(W^ H+1:1).

Now define

(Pj )Hj=+11 = (W^ 1 + 1, W^ 2, . . . , W^ H , VH+1), (Qj )Hj=+11 = (W^ 1 - 1, W^ 2, . . . , W^ H , VH+1).

We can check (Pj )Hj=+11, (Qj )Hj=+11 

H +1 j=1

B

(W^ j),

and

PH+1:1 = W^ H+1:1 + VH+1W^ H:21. QH+1:1 = W^ H+1:1 - VH+1W^ H:21.

By definition of ((Wj )jH=+11), this shows that ((Pj )Hj=+11) > ((W^ j )jH=+11) > ((Qj )Hj=+11). This
construction holds for any > 0, proving that (W^ j)jH=+11 can be neither a local maximum nor a local minimum.

Case 2: leftnull(W^ H:1) = leftnull(W^ H:2). By and large, the proof of this case goes the same, except that we need a little more care on what perturbations to make. Define
j = min{j  [2, H] | leftnull(W^ H:j) leftnull(W^ H:j+1)}.
When you start from j = 2 up to j = H and compare leftnull(W^ H:j) and leftnull(W^ H:j+1), the first iterate j at which you have leftnull(W^ H:j) = leftnull(W^ H:j+1) is j. If all left-null spaces of matrices from W^ H:2 to W^ H are equal, j = H which follows from the notational convention that leftnull(W^ H:H+1) = leftnull(IdH ) = {0}. According to j, in Case 2 we perturb W^ H+1, W^ 1, W^ 2, . . . , W^ j to get (Pj )jH=+11 and (Qj )jH=+11.
By definition of j, note that
leftnull(W^ H:1) = leftnull(W^ H:2) = · · · = leftnull(W^ H:j )  col(W^ H:1) = col(W^ H:2) = · · · = col(W^ H:j )  rank(W^ H:1) = rank(W^ H:2) = · · · = rank(W^ H:j )
which means the products are all rank-deficient (recall rank(W^ H:1) < dx and all dj  dx), and hence they all have nontrivial null spaces null(W^ H:2), . . . , null(W^ H:j ) as well.
We choose some unit vectors as the following:
v0 = [Ur]·,1,

28

Under review as a conference paper at ICLR 2019

v1  null(W^ H:2), ···
vj-1  null(W^ H:j ) vH  leftnull(W^ H:j )  leftnull(W^ H:j+1), vH+1 = [Ul]·,1.

Then, for a   (0, ] whose value will be specified later, define

1 := v1v0T  Rd1×dx , ···
j-1 := vj-1vjT-2  R ,dj-1×dj-2 H+1 := vH+1vHT  Rdy×dH ,

and Vj := W^ j + j accordingly for j = 1, . . . , j - 1, H + 1. By definition of j's, note that

VH+1W^ H:j Vj-1:1 =VH+1W^ H:j-1Vj-2:1 + VH+1W^ H:j j-1Vj-2:1 = VH+1W^ H:j-1Vj-2:1 =VH+1W^ H:j-2Vj-3:1 + VH+1W^ H:j-1j-2Vj-3:1 = VH+1W^ H:j-2Vj-3:1 =···
=VH+1W^ H:1 + VH+1W^ H:21 = VH+1W^ H:1 =W^ H+1:1 + H+1W^ H:1 = W^ H+1:1,

(A.26) (A.27)
(A.28) (A.29)

where in (A.26) we used the definition that vj-1  null(W^ H:j ), in (A.27) that vj-2  null(W^ H:j-1), in (A.28) that v1  null(W^ H:2), and in (A.29) that vH  leftnull(W^ H:j ).
Now consider the following matrix product:

(W^ H:j+1)T VHT+1 0(W^ H+1:1)(Vj-1:1)T = (W^ H:j+1)T (W^ H+1 + H+1)T  0(W^ H+1:1)(W^ 1 + 1)T · · · (W^ j-1 + j-1)T . (A.30)

We are going to show that for small enough   (0, ], this product is nonzero. If we expand (A.30), there are many terms in the summation. However, note that the expansion can be arranged in the following form:

(W^ H:j+1)T (W^ H+1 + H+1)T  0(W^ H+1:1)(W^ 1 + 1)T · · · (W^ j-1 + j-1)T

=C0 + C1 + C22 + · · · + Cj j

(A.31)

where Cj  Rdj ×dj-1 for all j and Cj doesn't depend on , and specifically

C0 = W^ jT+1 · · · W^ HT +1 0(W^ H+1:1)W^ 1T W^ 2T · · · W^ jT-1,

Cj

=

1 j

W^ jT+1

·

·

·

W^ HT

TH

+1

0(W^ H+1:1)1T

· · · jT-1.

Because

the

C0

is exactly equal to

  Wj 

evaluated at a critical point ((W^ j)jH=+11), C0

=

0.

Also, due

to definitions of j's,

Cj =(W^ H:j+1)T (vH vHT +1) 0(W^ H+1:1)(v0v1T )(v1v2T ) · · · (vj-2vjT-1) =(W^ H:j+1)T vH vHT +1 0(W^ H+1:1)v0vjT-1.

First, since vH  col(W^ H:j+1), (W^ H:j+1)T vH is a nonzero column vector. Also, since vH+1 =
[Ul]·,1 and v0 = [Ur]·,1, the product vHT +1 0(W^ H+1:1)v0 = max( 0(W^ H+1:1)) > 0. Finally, vjT-1 is a nonzero row vector. Thus, the product Cj will be nonzero.

29

Under review as a conference paper at ICLR 2019

Since Cj = 0, we can pick any index (, ) such that the (, )-th entry of Cj , denoted as [Cj ],, is nonzero. Then, the (, )-th entry of (A.31) can be written as

c1 + c22 + · · · + cj j ,

(A.32)

where cj = [Cj],. To show that the matrix product (A.30) is nonzero, it suffices to show that its (, )-th entry (A.32) is nonzero. If c1 = · · · = cj-1 = 0, then with the choice of  = , (A.32) is trivially nonzero. If some of c1, . . . , cj-1 are nonzero, we can scale   (0, ] arbitrarily small, so that
|c1 + · · · + cj-1j-1| > |cj j |,
and thus (A.32) can never be zero. From this, with sufficiently small , the matrix product (A.30) is nonzero.
Now define the perturbation on W^ j :

j :=

(W^ H:j+1)T VHT+1 (W^ H:j+1)T VHT+1 0

0(W^ H+1:1)(Vj-1:1)T (W^ H+1:1)(Vj-1:1)T

F

,

so that W^ j + j  B (W^ j ). Then, observe that

VH+1W^ H:j+1j Vj-1:1,  0(W^ H+1:1) = tr((VH+1W^ H:j+1j Vj-1:1)T  0(W^ H+1:1)) = tr(Tj (W^ H:j+1)T VHT+1 0(W^ H+1:1)(Vj-1:1)T ) = j , (W^ H:j+1)T VHT+1 0(W^ H+1:1)(Vj-1:1)T > 0.

This means that VH+1W^ H:j+1j Vj-1:1 and -VH+1W^ H:j+1j Vj-1:1 are ascent and descent directions, respectively, of 0(R) at W^ H+1:1. After that, the proof is very similar to the previous case. We can define

(Pj )jH=+11 = (V1, . . . , Vj-1, W^ j + j , W^ j+1, . . . , W^ H , VH+1)  (Qj )jH=+11 = (V1, . . . , Vj-1, W^ j - j , W^ j+1, . . . , W^ H , VH+1) 

H +1
B

(W^ j)

j=1

H+1 B (W^ j ),
j=1

where 0 <   1 is small enough, to show that by differentiability of 0(R), we get ((Pj)jH=+11) > ((W^ j )Hj=+11) > ((Qj )Hj=+11).

A7.3 PROOF OF PART 2(A)

In this part, we show that if  0(W^ H+1:1) = 0 and W^ H+1:1 is a local min of 0, then (W^ j)Hj=+11 is a local min of . The proof for local max case can be done in a very similar way.

Since W^ H+1:1 is a local minimum of 0, there exists > 0 such that, for any R satisfying R - W^ H+1:1 F  , we have 0(R)  0(W^ H+1:1). We prove that (W^ j)jH=+11 is a local mini-
mum of by showing that there exists a neighborhood of (W^ j)jH=+11 in which any point (Vj)jH=+11
satisfies ((Vj )Hj=+11)  ((W^ j )jH=+11).

Now define

0< j 2(H + 1) max

W^ H+1:j+1 F W^ j-1:1 F, 1 .

Observe that

a max{a,1}



1 for a



0.

Then, for all j



[H+1], pick any Vj

such that

Vj - W^ j

F

j. Denote j = Vj - W^ j for all j. Now, by triangle inequality and submultiplicativity of Frobenius

norm,

H +1

(W^ H+1 + H+1) · · · (W^ 1 + 1) - W^ H+1:1 F 

W^ H+1:j+1j W^ j-1:1

F + O(max
j

j

2F)

j=1

H +1



W^ H+1:j+1

F

j

F

W^ j-1:1

F + O(max
j

2 j

)

j=1

30

Under review as a conference paper at ICLR 2019

 + O(max 2j

j2) 

,

for small enough j's.

Given this, for any (Vj)jH=+11 in the neighborhood of (W^ j)Hj=+11 defined by j's, VH+1:1 - W^ H+1:1 F  , so 0(VH+1:1)  0(W^ H+1:1), meaning ((Vj )jH=+11)  ((W^ j )Hj=+11). Thus, (W^ j)Hj=+11 is a local minimum of .

A7.4 PROOF OF PART 2(B)
For this part, we want to show that if  0(W^ H+1:1) = 0, then (W^ j)Hj=+11 is a global min (or max) of if and only if W^ H+1:1 is a global min (or max) of 0. We prove this by showing the following: if dj  min{dx, dy} for all j  [H], for any R  Rdy×dx there exists a decomposition (Wj)jH=+11 such that R = WH+1:1.
We divide the proof into two cases: dx  dy and dy  dx.

Case 1: dx  dy. If dx  dy, by assumption dj  dy for all j  [H]. Recall that W1  Rd1×dx . Given R  Rdy×dx , we can fill the first dy rows of W1 with R and let any other entries be zero. For all the other matrices W2, . . . , WH+1, we put ones to the diagonal entries while putting zeros to all the other entries. We can check that, by this construction, R = WH+1:1 for this given R.

Case 2: dy  dx. If dy  dx, we have dj  dx for all j  [H]. Recall WH+1  Rdy×dH . Given R  Rdy×dx , we can fill the first dx columns of WH+1 with R and let any other entries be zero. For all the other matrices W1, . . . , WH , we put ones to the diagonal entries while putting zeros to all the other entries. By this construction, R = WH+1:1 for given R.
Once this fact is given, by ((Wj)jH=+11) = 0(WH+1:1),

inf
R

0(R)

= inf
WH+1:1

0(WH+1:1)

= inf
(Wj )jH=+11

((Wj )Hj=+11).

Thus, any (W^ j)Hj=+11 attaining a global min of must have infR 0(R) = 0(W^ H+1:1), so W^ H+1:1 is also a global min of 0(R). Conversely, if 0(W^ H+1:1) = inf 0(R), then ((W^ j)jH=+11) = inf ((Wj)Hj=+11), so (W^ j)Hj=+11 is a global min of . We can prove the global max case similarly.

A7.5 PROOF OF PART 3 AND 3(A)
Suppose there exists j  [H + 1] such that W^ H+1:j+1 has full row rank and W^ j-1:1 has full column rank. For simplicity, define A := W^ H+1:j+1 and B := W^ j-1:1. Since AT has linearly independent columns, BT has linearly independent rows, and  /Wj = 0 at (W^ j)Hj=+11, AT  0(W^ H+1:1)BT = 0 =  0(W^ H+1:1) = 0, hence Parts 2(a) and 2(b) are implied.
For Part 3(a), we want to prove that if (W^ j)jH=+11 is a local min of , then W^ H+1:1 is a local min of 0. By definition of local min,  > 0 such that, for any (Vj)jH=+11 for which Vj - W^ j F  (for j  [H + 1]), we have ((Vj)jH=+11)  ((W^ j)Hj=+11). To show that W^ H+1:1 is a local min of 0, we have to show there exists a neighborhood of W^ H+1:1 such that, any point R in that neighborhood satisfies 0(R)  0(W^ H+1:1). To prove this, we state the following lemma:
Lemma A.6. Suppose A := W^ H+1:j+1 has full row rank and B := W^ j-1:1 has full column rank. Then, any R satisfying R - W^ H+1:1 F  min(A)min(B) can be decomposed into R = VH+1:1, where
Vj = W^ j + AT (AAT )-1(R - W^ H+1:1)(BT B)-1BT ,
and Vj = W^ j for j = j. Also, Vj - W^ j F  for all j.

31

Under review as a conference paper at ICLR 2019

Proof Since A := W^ H+1:j+1 has full row rank and B := W^ j-1:1 has full column rank, min(A) > 0, min(B) > 0, and AAT and BT B are invertible. Consider any R satisfying R - W^ H+1:1 F  min(A)min(B) . Given the definitions of Vj's in the statement of the lemma, we can check the identity that R = VH+1:1 by
VH+1:1 = AVj B = AW^ j B + (R - W^ H+1:1) = W^ H+1:1 + (R - W^ H+1:1) = R.

Now It is left to show that Vj - W^ j F  , so that (Vj)jH=+11 indeed satisfies Vj - W^ j F  for all j. We can show that

max(AT (AAT )-1) = 1/min(A), max((BT B)-1BT ) = 1/min(B).

Therefore,

Vj - W^ j F = AT (AAT )-1(R - W^ H+1:1)(BT B)-1BT F

max(AT (AAT )-1)max((BT B)-1BT ) R - W^ H+1:1 F

1 min(A)min(B)

·

min(A)min(B)

=

.

The lemma shows that for any R = VH+1:1 satisfying R - W^ H+1:1 F  min(A)min(B) , we
have 0(R) = 0(VH+1:1) = ((Vj )Hj=+11)  ((W^ j )jH=+11) = 0(W^ H+1:1). We can prove the local maximum part by a similar argument.

32

