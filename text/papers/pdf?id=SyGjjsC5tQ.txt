Under review as a conference paper at ICLR 2019
STABLE OPPONENT SHAPING IN DIFFERENTIABLE GAMES
Anonymous authors Paper under double-blind review
ABSTRACT
A growing number of learning methods are actually games which optimise multiple, interdependent objectives in parallel ­ from GANs and intrinsic curiosity to multi-agent RL. Opponent shaping is a powerful approach to improve learning dynamics in such games, accounting for the fact that the `environment' includes agents adapting to one another's updates. Learning with Opponent-Learning Awareness (LOLA) is a recent algorithm which exploits this dynamic response and encourages cooperation in settings like the Iterated Prisoner's Dilemma. Although experimentally successful, we show that LOLA can exhibit `arrogant' behaviour directly at odds with convergence. In fact, remarkably few algorithms have theoretical guarantees applying across all differentiable games. In this paper we present Stable Opponent Shaping (SOS), a new method that interpolates between LOLA and a stable variant named LookAhead. We prove that LookAhead locally converges and avoids strict saddles in all differentiable games, the strongest results in the field so far. SOS inherits these desirable guarantees, while also shaping the learning of opponents and consistently either matching or outperforming LOLA experimentally.
1 INTRODUCTION
Problem Setting. While machine learning has traditionally focused on optimising single objectives, generative adversarial nets (GANs) (Goodfellow et al., 2014) have showcased the potential of architectures dealing with multiple interacting goals. They have since then proliferated substantially, including: intrinsic curiosity (Pathak et al., 2017), imaginative agents (Racanie`re et al., 2017), synthetic gradients (Jaderberg et al., 2017), hierarchical reinforcement learning (RL) (Wayne & Abbott, 2014; Vezhnevets et al., 2017) and multi-agent RL in general (Busoniu et al., 2008).
These can effectively be viewed as differentiable games played by cooperating and competing agents ­ which may simply be different internal components of a single system, like the generator and discriminator in GANs. The difficulty is that each loss depends on all parameters, including those of other agents. While gradient descent on single functions has been widely successful, converging to local minima under rather mild conditions (Lee et al., 2017), its simultaneous generalisation can fail even in simple two-player, two-parameter zero-sum games. No algorithm has yet been shown to converge, even locally, in all differentiable games.
Related Work. Convergence has been studied in a number of restricted game classes, with various algorithms improving on simultaneous gradient descent: policy prediction in two-player two-action bimatrix games (Zhang & Lesser, 2010); WoLF in two-player two-action games (Bowling & Veloso, 2001); AWESOME in repeated games (Conitzer & Sandholm, 2007); Optimistic Mirror Descent in two-player bilinear zero-sum games (Daskalakis et al., 2009) and Consensus Optimisation (CO) in two-player zero-sum games (Mescheder et al., 2017). An important body of work including Heusel et al. (2017) and Nagarajan & Kolter (2017) has also appeared for GANs. Note that CO is also tailored toward GAN optimisation, used for comparison in our Gaussian mixture experiments.
To the best of our knowledge, the only theoretical work on general game dynamics is Symplectic Gradient Adjustment (SGA) by Balduzzi et al. (2018). This algorithm is `attracted' to stable fixed points while `repelled' from unstable ones in all differentiable games. However, it fails to reach
1

Under review as a conference paper at ICLR 2019
strong convergence guarantees. Moreover, the authors point out that SGA agents may act against their own self-interest by prioritising convergence over individual loss.
In a different direction, Learning with Opponent-Learning Awareness (LOLA) (Foerster et al., 2018) modifies the learning objective by predicting and differentiating through opponent learning steps. This is intuitively appealing and experimentally successful, encouraging cooperation in settings like the Iterated Prisoner's Dilemma (IPD) where more `stable' algorithms like SGA defect. However, LOLA has no guarantees of converging or even preserving fixed points of the game.
Contribution. We begin by constructing the first explicit tandem game where LOLA agents adopt `arrogant' behaviour and converge to non-fixed points. We pinpoint the cause of failure and show that a natural variant named LookAhead (LA), discovered before LOLA by Zhang & Lesser (2010), successfully preserves fixed points. We then prove that LookAhead locally converges and avoids strict saddles in all differentiable games, filling the theoretical gap in multi-agent learning. This is enabled through a unified approach based on fixed-point iterations and dynamical systems. These techniques apply equally well to algorithms like CO and SGA, though this is not our present focus.
While LookAhead is theoretically robust, the shaping component endowing LOLA with a capacity to exploit opponent dynamics is lost. We solve this dilemma with an algorithm named Stable Opponent Shaping (SOS), trading between stability and exploitation by interpolating between LookAhead and LOLA. Using an intuitive and theoretically grounded criterion for this interpolation parameter, SOS inherits both strong convergence guarantees from LA and opponent shaping from LOLA.
On the experimental side, we show that SOS plays tit-for-tat in the IPD on par with LOLA, while all other methods mostly defect. We display the practical consequences of our theoretical guarantees in the tandem game, where SOS always outperforms LOLA. Finally we implement a more involved GAN setup, testing for mode collapse and mode hopping when learning Gaussian mixture distributions. SOS successfully spreads mass across all Gaussians, at least matching CO/SGA/LOLA, while LA is significantly slower and simultaneous gradient descent fails entirely.
2 BACKGROUND
2.1 DIFFERENTIABLE GAMES
We frame the problem of multi-agent learning as a game. The following definition is adapted from Balduzzi et al. (2018), insisting only on differentiability for gradient-based methods to apply. This concept is strictly more general than stochastic games, whose parameters are usually restricted to action-state transition probabilities or functional approximations thereof. Definition 1. A differentiable game is a set of n players with parameters  = (1, . . . , n)  Rd and twice continuously differentiable losses Li : Rd  R, where i  Rdi for each i and i di = d.
Crucially, note that each loss is a function of all parameters. From the viewpoint of player i, parameters can be written as  = (i, -i) where -i contains all other players' parameters. We do not make the common assumption that each Li is convex as a function of i alone, for any fixed opponent parameters -i, nor do we restrict  to the probability simplex ­ though this restriction can be recovered via projection or sigmoid functions  : R  [0, 1]. If n = 1, the `game' is simply to minimise a given loss function. In this case one can reach local minima by (possibly stochastic) gradient descent (GD). For arbitrary n, the standard solution concept is that of Nash equilibria. Definition 2. A point ¯  Rd is a (local) Nash equilibrium if for each i, there are neighbourhoods Ui of ¯i such that Li(i, ¯-i)  Li(¯) for all i  Ui. In other words, each player's strategy is a local best response to current opponent strategies.
We write iLk = i Lk and ijLk = j i Lk for any i, j, k. Define the simultaneous gradient of the game as the concatenation of each player's gradient,
 = 1L1, . . . , nLn  Rd .
The ith component of  is the direction of greatest increase in Li with respect to i. If each agent minimises their loss independently from others, they perform GD on their component iLi with learning rate i. Hence, the parameter update for all agents is given by    -  , where
2

Under review as a conference paper at ICLR 2019

 = (1, . . . , n) and is element-wise multiplication. This is also called naive learning (NL), reducing to    -  if agents have the same learning rate. This is assumed for notational simplicity, though irrelevant to our results. The following example shows that NL can fail to converge.
Example 1. Consider L1/2 = ±xy, where players control the x and y parameters respectively. The origin is a (global and unique) Nash equilibrium. The simultaneous gradient is  = (y, -x) and cycles around the origin. Explicitly, a gradient step from (x, y) yields
(x, y)  (x, y) - (y, -x) = (x - y, y + x)
which has distance from the origin (1 + 2)(x2 + y2) > (x2 + y2) for any  > 0 and (x, y) = 0. We conclude that agents diverge away from the origin for any  > 0. The cause of failure is that  is not the gradient of a single function, implying that each agent's loss is inherently dependent on others. This results in a contradiction between the non-stationarity of each agent, and the optimisation of each loss independently from others. Failure of convergence in this simple two-player zero-sum game shows that gradient descent does not generalise well to differentiable games. We consider an alternative solution concept to Nash equilibria before introducing LOLA.

2.2 STABLE FIXED POINTS
Consider the game given by L1 = L2 = xy where players control the x and y parameters respectively. The optimal solution is (x, y)  ±(, -), since then L1 = L2  -. However the origin is a global Nash equilibrium, while also a saddle point of xy. It is highly undesirable to converge to Nash in this game, since infinitely better losses can be reached in the anti-diagonal direction. In this light, Nash equilibria cannot be the right solution concept for multi-agent learning. To define stable fixed points, first introduce the `Hessian' of the game as the block matrix

 11L1 · · · 1nL1 

H

=



=

 

...

...

...

 



Rd×d

.



n1Ln · · · nnLn

This can equivalently be viewed as the Jacobian of the vector field . Importantly, note that H is not symmetric in general unless n = 1, in which case we recover the usual Hessian H = 2L. Definition 3. A point ¯ is a fixed point if (¯) = 0. It is stable if H(¯) 0, unstable if H(¯)  0 and a strict saddle if H(¯) has an eigenvalue with negative real part.
The name `fixed point' is coherent with GD, since (¯) = 0 implies a fixed update ¯  ¯- (¯) = ¯. Though Nash equilibria were shown to be inadequate, it is not obvious that stable fixed points (SFPs) are a better solution concept. In Appendix A we provide intuition for why SFPs are both closer to local minima in the context of multi-loss optimisation, and more tractable for convergence proofs. Our definition is a soft variant of that of Balduzzi et al. (2018), assuming positive semidefiniteness only at ¯ instead of holding in a neighbourhood. This makes the class of SFPs as large as possible, while sufficient for all our theoretical results.
Assuming invertibility of H(¯) at SFPs is crucial to all convergence results in this paper. The same assumption is present in related work (Balduzzi et al., 2018; Mescheder et al., 2017), and cannot be avoided. Even for single losses, a fixed point with singular Hessian can be a local minimum, maximum, or saddle point. Invertibility is thus necessary to ensure that SFPs really are `local minima'. This is omitted from now on. Finally note that unstable fixed points are a subset of strict saddles, making Theorem 6 both stronger and more general than (Balduzzi et al., 2018, Theorem 5).

2.3 LEARNING WITH OPPONENT-LEARNING AWARENESS (LOLA)
Accounting for nonstationarity, Learning with Opponent-Learning Awareness (LOLA) modifies the learning objective by predicting and differentiating through opponent learning steps (Foerster et al., 2018). For simplicity, if n = 2 then agent 1 optimises L1(1, 2 + 2) with respect to 1, where 2 is the predicted learning step for agent 2. Foerster et al. (2018) assume that opponents are naive learners, namely 2 = -22L2. After first-order Taylor expansion, the loss is approximately given by L1 + 2L1 · 2. By minimising this quantity, agent 1 also learns parameters that align

3

Under review as a conference paper at ICLR 2019

the opponent learning step 2 with the direction of greatest decrease in L1, exploiting opponent dynamics to further reduce one's losses. Differentiating with respect to 1, the adjustment is

1L1 + 21L1 2 + 12 2L1 .
By explicitly differentiating through 2 in the rightmost term, LOLA agents actively shape opponent learning. This has proven effective in reaching cooperative equilibria in multi-agent learning, finding success in a number of games including tit-for-tat in the IPD (Foerster et al., 2018). The middle term above was originally dropped by the authors because "LOLA focuses on this shaping of the learning direction of the opponent". We do not eliminate this term, as also inherent in LOLA-DiCE (Foerster et al., 2018). Preserving both will in fact be key to developing stable opponent shaping.
First we formulate n-player LOLA in vectorial form. Let Hd and Ho be the matrices of diagonal and anti-diagonal blocks of H, so that H = Hd + Ho. Also define L = (L1, . . . , Ln) and the operator diag : Rd×d  Rd constructing a vector from the matrix diagonal, i.e. diag(M )i = Mii. Proposition 1 (Appendix B). Writing  = diag(Ho L), the LOLA gradient adjustment is
LOLA = (I - Ho) -  .

While experimentally successful, LOLA fails to preserve fixed points ¯ of the game since

(I - Ho)(¯) - (¯) = -(¯) = 0
in general. Even if ¯ is a Nash equilibrium, the update ¯  ¯ - LOLA = ¯ can push them away despite the policy being optimal. This may worsen the losses for all agents, as in the following game.

Example 2 (Tandem). Imagine a tandem controlled by agents facing opposite directions, who feed x and y force into their pedals respectively. Negative numbers correspond to pedalling backwards.

Moving coherently requires x  -y, embodied by a quadratic loss (x+y)2.
However it is easier for agents to pedal forwards, translated by linear losses -2x and -2y. The game is thus given by L1(x, y) = (x + y)2 - 2x and L2(x, y) = (x + y)2 - 2y. These sub-goals are incompatible, so agents cannot simply accelerate forwards. The SFPs are given by {x + y = 1}. Computing (x, 1 - x) = (4, 4) = 0, none of these are preserved by
LOLA. Instead, we show in Appendix C that LOLA can only converge to
sub-optimal scenarios with worse losses for both agents, for any .

Figure 1: Illustration of the tandem game.

Intuitively, the root of failure is that LOLA agents try to shape opponent learning and enforce compliance by accelerating forwards, assuming a dynamic response from their opponent. The other agent does the same, so they become `arrogant' and suffer by pushing strongly in opposite directions.

3 METHOD
3.1 LOOKAHEAD
The shaping term  prevents LOLA from preserving fixed points. Consider removing this component entirely, giving (I - Ho). This variant preserves fixed points, but what does it mean from the perspective of each agent? Note that LOLA optimises L1(1, 2 + 2) with respect to 1, while 2 is a function of 1. In other words, we assume that our opponent's learning step depends on our current optimisation with respect to 1. This is inaccurate, since opponents cannot see our updated parameters until the next step. Instead, assume we optimise L1(1, ^2 + 2(^1, ^2)) where ^1, ^2 are the current parameters. After Taylor expansion, the gradient wrt 1 is given by
1L1 + 21L1 2
since 2(^1, ^2) does not depend on 1. In vectorial form, we recover the variant (I -Ho) since the shaping term corresponds precisely to differentiating through 2. We name this LookAhead, which was discovered before LOLA by Zhang & Lesser (2010) though not explicitly named. Using the stop-gradient operator , this can be reformulated as optimising L1(1, 2 + 2) where  prevents gradient flowing from 2 upon differentiation.

4

Under review as a conference paper at ICLR 2019

The main result of Zhang & Lesser (2010) is that LookAhead converges to Nash equilibria in the small class of two-player, two-action bimatrix games. We will prove local convergence to SFP and non-convergence to strict saddles in all differentiable games. On the other hand, by discarding the problematic shaping term, we also eliminated LOLA's capacity to exploit opponent dynamics and encourage cooperation. This will be witnessed in the IPD, where LookAhead agents mostly defect.

3.2 STABLE OPPONENT SHAPING (SOS)

We propose Stable Opponent Shaping (SOS), an algorithm preserving both advantages at once. Define the interpolated stop-gradient operator p := p + (1 - p)I, where I is the identity and p stands for `partial'. A p-LOLA agent optimises the modified objective
L1(1, 2 + 1-p2, . . . , n + 1-pn) ,

collapsing to LookAhead at p = 0 and LOLA at p = 1. The resulting gradient is given by
p := p-LOLA = (I - Ho) - p
with 0 = LA. We obtain an algorithm trading between shaping and stability as a function of p. Note however that preservation of fixed points only holds if p is infinitesimal, in which case p-LOLA is almost identical to LookAhead ­ losing the very purpose of interpolation. Instead we propose a two-part criterion for p at each step, through which all guarantees descend.

First choose p such that p points in the same direction as LookAhead. This will not be enough
to prove convergence itself, but prevents arrogant behaviour by ensuring convergence only to fixed points. Formally, the first criterion is given by p, 0  0. If -, 0  0 then p, 0  0
automatically, so we choose p = 1 for maximal shaping. Otherwise choose

p = min

1,

-a 0 2 -, 0

with any hyperparameter 0 < a < 1; this guarantees a positive inner product

p, 0 = p -, 0 + 0 2  -a 0 2 + 0 2 = 0 2(1 - a) > 0 .

We complement this with a second criterion ensuring local convergence. The idea is to scale p by
a function of  if  is small enough, which certainly holds in neighbourhoods of fixed points. Let 0 < b < 1 be a hyperparameter and take p =  2 if  < b, otherwise p = 1. Choosing p1 and p2 according to these criteria, the two-part criterion is p = min{p1, p2}. SOS is obtained by combining p-LOLA with this criterion, as summarised in Algorithm 1. Crucially, all theoretical
results in the next section are independent from the choice of hyperparameters a and b.

Algorithm 1: Stable Opponent Shaping

1 Initialise  randomly and fix hyperparameters a, b  (0, 1).

2 while not done do

3 Compute 0 = (I - Ho) and  = diag(Ho L) at .

4

if

-, 0 > 0

then p1 = 1

else

p1 = min

1,

-a 0 2 -,0

5 if  < b then p2 =  2 else p2 = 1 6 Let p = min{p1, p2}, compute p = 0 - p and assign    - p.

7 end

4 THEORETICAL RESULTS
Our central theoretical contribution is that LookAhead and SOS converge locally to SFP and avoid strict saddles in all differentiable games. Since the learning gradients involve second-order Hessian terms, our results assume thrice continuously differentiable losses (omitted hereafter). Losses which are C2 but not C3 are very degenerate, so this is a mild assumption. Statements made about SOS crucially hold for any hyperparameters a, b  (0, 1). See Appendices D and E for detailed proofs.
5

Under review as a conference paper at ICLR 2019
4.1 LOCAL CONVERGENCE TO STABLE FIXED POINTS
Convergence is proved using Ostrowski's Theorem. This reduces convergence of a gradient adjustment g to positive stability (eigenvalues with positive real part) of g at stable fixed points. Theorem 2. Let H 0 be invertible with symmetric diagonal blocks. Then there exists > 0 such that (I - Ho)H is positive stable for all 0 <  < .
This type of result would usually be proved either by analytical means showing positive definiteness and hence positive stability, or direct eigenvalue analysis. We show in Appendix D that (I - Ho)H is not necessarily positive definite, while there is no necessary relationship between eigenpairs of H and Ho. This makes our theorem all the more interesting and non-trivial. We use a similarity transformation trick to circumvent the dual obstacle, allowing for analysis of positive definiteness with respect to a new inner product. We obtain positive stability by invariance under change of basis. Corollary 3. LookAhead converges locally to stable fixed points for  > 0 sufficiently small.
Using the second criterion for p, we prove local convergence of SOS in all differentiable games despite the presence of a shaping term (unlike LOLA). Theorem 4. SOS converges locally to stable fixed points for  > 0 sufficiently small.
4.2 AVOIDING STRICT SADDLES
Using the first criterion for p, we prove that SOS only converges to fixed points (unlike LOLA). Proposition 5. If SOS converges to ¯ and  > 0 is small then ¯ is a fixed point of the game.
Now assume that  is initialised randomly (or with arbitrarily small noise), as is standard in ML. Let F () =  - p() be the SOS iteration. Using both the second criterion and the Stable Manifold Theorem from dynamical systems, we can prove that every strict saddle ¯ has a neighbourhood U such that {  U | F n()  ¯ as n  } has measure zero for  > 0 sufficiently small. Since  is initialised randomly, we obtain the following result. Theorem 6. SOS locally avoids strict saddles almost surely, for  > 0 sufficiently small.
This also holds for LookAhead, and could be strenghtened to global initialisations provided a strong boundedness assumption on H 2. This is trickier for SOS since p() is not globally continuous. Altogether, our results for LookAhead and the correct criterion for p-LOLA lead to the strongest theoretical guarantees known so far in multi-agent learning. Furthermore, SOS retains all of LOLA's opponent shaping capacity while LookAhead does not, as shown experimentally in the next section.
5 EXPERIMENTS AND DISCUSSION
We evaluate the performance of SOS in three differentiable games. We first showcase opponent shaping and superiority over LA/CO/SGA/NL in the Iterated Prisoner's Dilemma (IPD). This leaves SOS and LOLA, which have differed only in theory up to now. We bridge this gap by showing that SOS always outperforms LOLA in the tandem game, avoiding arrogant behaviour by decaying p while LOLA overshoots. Finally we test SOS on a more involved GAN learning task reproduced from Balduzzi et al. (2018), with results on par with dedicated methods like CO.
5.1 EXPERIMENTAL SETUP
IPD: This game is an infinite sequence of the well-known Prisoner's Dilemma, where the payoff is discounted by a factor   [0, 1) at each iteration. Agents are endowed with a memory of actions at the previous state. Hence there are 5 parameters for each agent i: the probability P i(C | state) of cooperating at start state s0 =  or state st = (a1t-1, a2t-1) for t > 0. One Nash equilibrium is to always defect (DD), with a normalised loss of 2. A better equilibrium with loss 1 is named tit-for-tat (TFT), where each player begins by cooperating and then mimicks the opponent's previous action.
We run 300 training episodes for SOS, LA, CO, SGA and NL. The parameters are initialised following a normal distribution around 1/2 probability of cooperation, with unit variance. We fix  = 1 and  = 0.96, following Foerster et al. (2018). We choose a = 0.5 and b = 0.1 for SOS. The first is a robust and arbitrary middle ground, while the latter is intentionally small to avoid poor SFP.
6

Under review as a conference paper at ICLR 2019

P2(C | state)

(A) SOS
1.0

(A) LOLA

(A) LA

(A) CO

0.8
CC 0.6 CD
DC 0.4 DD

0.2

0.0 0.0
1.0 0.8 0.6 0.4 0.2 0.0
0.0

0.2 0.4 0.6 0.8
P1(C | state) (A) SGA
0.2 0.4 0.6 0.8
P1(C | state)

1.0 0.0 1.0 0.0

0.2 0.4 0.6 0.8
P1(C | state) (A) NL
0.2 0.4 0.6 0.8
P1(C | state)

1.0 0.0 0.2 0.4 0.6 0.8
P1(C | state)
2.2

1.0 0.0
(B)

0.2 0.4 0.6 0.8
P1(C | state)

2.0

Average Loss

1.8

SOS

1.6 LOLA

LA

1.4

CO SGA

1.2 NL

1.0

1.0 0 20 4L0earning Step60 80

1.0 100

P2(C | state)

Figure 2: Results in the IPD. (A) Probability that agents cooperate, given memory state, at the end of 50 training runs. SOS and LOLA mostly play tit-for-tat, while others mostly defect. (B) Average loss at each step, across 300 runs, with shaded deviations. SOS and LOLA outperform all others.

Tandem: Though local convergence is guaranteed for SOS, it is possible that SOS diverges from poor initialisations. This turns out to be impossible in the tandem game since the Hessian is globally positive semi-definite. We show this explicitly by running 300 training episodes for SOS and LOLA. Parameters are initialised following a normal distribution around the origin. We found performance to be robust to hyperparameters a, b. Here we fix a = b = 0.5 and  = 0.1.
Gaussian mixtures: We reproduce a setup from Balduzzi et al. (2018). The game is to learn a Gaussian mixture distribution using GANs. Data is sampled from a highly multimodal distribution designed to probe the tendency to collapse onto a subset of modes during training ­ see ground truth in Appendix F. The generator and discriminator networks each have 6 ReLU layers of 384 neurons, with 2 and 1 output neurons respectively. Learning rates are chosen by grid search at iteration 8k, with a = 0.5 and b = 0.1 for SOS, following the same reasoning as the IPD.
5.2 RESULTS AND DISCUSSION
IPD: Results are given in Figure 2. Parameters in part (A) are the end-run probabilities of cooperating for each memory state, encoded in different colours. Only 50 runs are shown for visibility. Losses at each step are displayed in part (B), averaged across 300 episodes with shaded deviations.
SOS and LOLA mostly succeed in playing tit-for-tat, displayed by the accumulation of points in the correct corners of (A) plots. For instance, CC and CD points are mostly in the top right and left corners so agent 2 responds to cooperation with cooperation. Agents also cooperate at the start state, represented by  points all hidden in the top right corner. Tit-for-tat strategy is further indicated by the losses close to 1 in part (B). On the other hand, most points for LA/CO/SGA/NL are accumulated at the bottom left, so agents mostly defect. This results in poor losses, demonstrating the limited effectiveness of recent proposals like SGA and CO. Finally note that trained parameters and losses for SOS are almost identical to those for LOLA, displaying equal capacity in opponent shaping while also inheriting convergence guarantees and outperforming LOLA in the next experiment.
Tandem: Results are given in Figure 3. SOS always succeeds in decreasing p to reach the correct equilibria, with losses averaging at 0. LOLA fails to preserve fixed points, overshooting with losses averaging at 4/9. The criterion for SOS is shown in action in part (B), decaying p to avoid overshooting. This illustrates that purely theoretical guarantees descend into practical outperfor-
7

Under review as a conference paper at ICLR 2019

Average Loss

0.6 SOS LOLA
0.4
0.2

(A)

(B)
1.2 1.0 0.8 0.6

Average p

0.0 0.4

0.2 0.2

0.0 0.4

0 5 10 Learni1n5g Step 20 25 30

0 5 10 Learni1n5g Step 20 25 30

Figure 3: Results in the tandem game. (A) Average loss and (B) average p at each learning step, across 300 runs, with shaded deviations. SOS decays p to avoid arrogance and outperforms LOLA.

Iteration = 2k

4k

6k 8k

SOS CO NL

 = 1e - 4

DKL = 0.77

1.12

1.61

2.51

 = 2e - 4

DKL = 0.65

0.31

0.07

0.03

 = 2e - 4

DKL = 0.45

0.15

0.09

0.03

Figure 4: Generator distribution at sampled iterations. NL suffers from mode collapse and hop-
ping, while CO and SOS learn the correct mixture of Gaussians. Below each plot: KL divergence DKL(P || Q) from generator P to ground truth Q, estimated from 25600 samples. To the RHS of each row: learning rate . Best result at each iteration shown in bold.

mance. Note that SOS even gets away from the LOLA fixed points if initialised there (not shown), converging to improved losses using the alignment criterion with LookAhead.
Gaussian mixtures: The generator distribution and KL divergence are given at {2k, 4k, 6k, 8k} iterations for NL, CO and SOS in Figure 4. Results for SGA, LOLA and LA are in Appendix F. SOS achieves convincing results by spreading mass across all Gaussians, as do CO/SGA/LOLA. LookAhead is significantly slower, while NL fails through mode collapse and hopping. Only visual inspection was used for comparison in Balduzzi et al. (2018), while KL divergence gives stronger numerical evidence here. SOS and CO are slightly superior to others with reference to this metric. However CO is aimed specifically toward two-player zero-sum GAN optimisation, while SOS is widely applicable with strong theoretical guarantees in all differentiable games.
8

Under review as a conference paper at ICLR 2019
6 CONCLUSION
Theoretical results in machine learning have significantly helped to understand the underlying causes of success and failure, from optimisation to architecture. While gradient descent on single losses has been studied extensively, algorithms dealing with interacting goals are proliferating, with little understanding of the underlying dynamics. The analysis behind CO and SGA has been helpful in this respect, though lacking either in generality or convergence guarantees. The first contribution of this paper is to provide a unified framework and fill this theoretical gap with robust convergence results for LookAhead in all differentiable games. Capturing stable fixed points as the correct solution concept was essential for these techniques to apply.
Furthermore, we showed that opponent shaping is both a powerful approach leading to experimental success and cooperative behaviour ­ while at the same time preventing LOLA from preserving fixed points in general. This conundrum is solved through a robust interpolation between LookAhead and LOLA, giving birth to SOS through a robust criterion. This was partially enabled by choosing to preserve the `middle' term in LOLA, and using it to inherit stability from LookAhead. This results in convergence guarantees stronger than all previous algorithms, but also in practical superiority over LOLA in the tandem game. Moreover, SOS fully preserves opponent shaping and outperforms SGA, CO, LA and NL in the IPD by encouraging tit-for-tat policy instead of defecting. Finally, SOS convincingly learns Gaussian mixtures on par with the dedicated CO algorithm.
REFERENCES
D. Balduzzi, S. Racaniere, J. Martens, J. Foerster, K. Tuyls, and T. Graepel. The Mechanics of n-Player Differentiable Games. ICML, 2018.
M. Bowling and M. Veloso. Rational and convergent learning in stochastic games. In Proceedings of the 17th International Joint Conference on Artificial Intelligence - Volume 2, pp. 1021­1026. Morgan Kaufmann Publishers Inc., 2001.
L. Busoniu, R. Babuska, and B. De Schutter. A comprehensive survey of multiagent reinforcement learning. IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews), 38(2):156­172, March 2008.
V. Conitzer and T. Sandholm. AWESOME: A General Multiagent Learning Algorithm that Converges in Self-Play and Learns a Best Response Against Stationary Opponents. Machine Learning, 67(1):23­43, May 2007.
C. Daskalakis, P. Goldberg, and C. Papadimitriou. The complexity of computing a nash equilibrium. SIAM Journal on Computing, 39(1):195­259, 2009.
J. N. Foerster, R. Y. Chen, M. Al-Shedivat, S. Whiteson, P. Abbeel, and I. Mordatch. Learning with Opponent-Learning Awareness. AAMAS, 2018.
J. N. Foerster, G. Farquhar, M. Al-Shedivat, T. Rockta¨schel, E. P. Xing, and S. Whiteson. DiCE: The Infinitely Differentiable Monte-Carlo Estimator. ICML, 2018.
I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair, A. Courville, and Y. Bengio. Generative Adversarial Networks. NIPS, 2014.
M. Heusel, H. Ramsauer, T. Unterthiner, B. Nessler, and S. Hochreiter. GANs Trained by a Two Time-Scale Update Rule Converge to a Local Nash Equilibrium. NIPS, 2017.
M. Jaderberg, W. M. Czarnecki, S. Osindero, O. Vinyals, A. Graves, D. Silver, and K. Kavukcuoglu. Decoupled Neural Interfaces using Synthetic Gradients. ICML, 2017.
J. D. Lee, M. Simchowitz, M. I. Jordan, and B. Recht. Gradient Descent Only Converges to Minimizers. In 29th Annual Conference on Learning Theory, volume 49 of Proceedings of Machine Learning Research, pp. 1246­1257, 2016.
J. D. Lee, I. Panageas, G. Piliouras, M. Simchowitz, M. I. Jordan, and B. Recht. First-order Methods Almost Always Avoid Saddle Points. ArXiv e-prints, 2017.
9

Under review as a conference paper at ICLR 2019
L. Mescheder, S. Nowozin, and A. Geiger. The Numerics of GANs. NIPS, 2017. V. Nagarajan and J. Kolter. Gradient descent GAN optimization is locally stable. NIPS, 2017. J. Ortega and W. Rheinboldt. Iterative Solution of Nonlinear Equations in Several Variables. Society
for Industrial and Applied Mathematics, 2000. I. Panageas and G. Piliouras. Gradient Descent Only Converges to Minimizers: Non-Isolated Critical
Points and Invariant Regions. In ITCS 2017, volume 67 of Leibniz International Proceedings in Informatics, pp. 2:1­2:12, 2017. D. Pathak, P. Agrawal, A. A. Efros, and T. Darrell. Curiosity-driven Exploration by Self-supervised Prediction. ICML, 2017. S. Racanie`re, T. Weber, D. P. Reichert, L. Buesing, A. Guez, D. Jimenez Rezende, A. Puigdome`nech Badia, O. Vinyals, N. Heess, Y. Li, R. Pascanu, P. Battaglia, D. Hassabis, D. Silver, and D. Wierstra. Imagination-Augmented Agents for Deep Reinforcement Learning. NIPS, 2017. A. S. Vezhnevets, S. Osindero, T. Schaul, N. Heess, M. Jaderberg, D. Silver, and K. Kavukcuoglu. FeUdal Networks for Hierarchical Reinforcement Learning. ICML, 2017. G. Wayne and L. F. Abbott. Hierarchical control using networks trained with higher-level forward models. Neural Computation, 26(10):2163­2193, 2014. C. Zhang and V. Lesser. Multi-Agent Learning with Policy Prediction. AAAI Conference on Artificial Intelligence, 2010.
10

Under review as a conference paper at ICLR 2019
APPENDIX
A STABLE FIXED POINTS
In the main text we showed that Nash equilibria are inadequate in multi-agent learning, exemplified by the simple game given by L1 = L2 = xy, where the origin is a global Nash equilibrium but a saddle point of the losses. It is not however obvious that SFP are a better solution concept. We begin by pointing out that for single losses, invertibility and symmetry of the Hessian imply positive definiteness at SFP. These are exactly local minima of L detected by the second partial derivative test, namely those points provably attainable by gradient descent.
To emphasise this, note that gradient descent does not converge locally to all local minima. This can be seen by considering the example L(x, y) = y2 and the local (global) minimum (0, 0). There is no neighbourhood for which gradient descent converges to (0, 0), since initialising at (x0, y0) will always converge to (x0, 0) for appropriate learning rates, with x0 = 0 almost surely. This occurs precisely because the Hessian is singular at (0, 0). Though a degenerate example, this suggests an important difference to make between the ideal solution concept (local minima) and that for which local convergence claims are possible to attain (local minima with invertible H 0).
Accordingly, the definition of SFP is the immediate generalisation of `fixed points with positive semi-definite Hessian', or in other words, `second-order-tractable local minima'. It is important to impose only positive semi-definiteness to keep the class as large as possible, despite strict positive definiteness holding for single losses due to symmetry. Imposing strict positivity would for instance exclude the origin in the cyclic game L1 = xy = -L2, a point certainly worthy of convergence.
Note also that imposing a weaker condition than H 0 would be incorrect. Invertibility aside, local convergence of gradient descent on single functions cannot be guaranteed if H 0, since such points are strict saddles. These are almost always avoided by gradient descent, as proven by Lee et al. (2016) and Panageas & Piliouras (2017). It is thus necessary to impose H 0 as a minimal requirement in optimisation methods attempting to generalise gradient descent. Remark A.1. A matrix H is positive semi-definite iff the same holds for its symmetric part S = (H + H )/2, so SFP could equivalently be defined as S(¯) 0. This is the original formulation given by Balduzzi et al. (2018), though they impose the extra requirement S() 0 in a neighbourhood of ¯. This was discussed with the main author, pointing out that this requirement is 1) more restrictive, 2) superficial to all theoretical results and 3) weakens the analogy with tractable local minima. The only thing gained by imposing semi-positivity in a neighbourhood, is that SFP become a subset of Nash equilibria.
Regarding unstable fixed points and strict saddles, note that H(¯) 0 implies H() 0 in a neighbourhood, hence being equivalent to the definition in Balduzzi et al. (2018). It follows also that unstable points are a subset of strict saddles: if H(¯)  0 then all eigenvalues are negative since any eigenpair (v, ) satisfies
0 > Re(v Hv) = Re(v v) = Re() .
We introduced strict saddles in this paper as a generalisation of unstable FP, which are more difficult to handle but nonetheless tractable using dynamical systems. The name is chosen by analogy to the definition in Lee et al. (2016) for single losses.
B LOLA VECTORIAL FORM
Proposition B.1. The LOLA gradient adjustment is
LOLA = (I - Ho) - diag(Ho L) . in the usual assumption of equal learning rates.
Proof. Recall the modified objective L1(1, 2 - 2L2, . . . , n - nLn)
11

Under review as a conference paper at ICLR 2019

for agent 1, and so on for each agent. First-order Taylor expansion yields

L1 -  (j L1) j Lj
j=1

and similarly for each agent. Differentiating with respect to i, the adjustment for player i is



LOLAi = i Li -  (j Li) j Lj 
j=i

= iLi -  (jiLi) j Lj + (jiLj ) j Li
j=i
= iLi -  ij Lij Lj -  (jiLj ) j Li
j=i j=i

and thus as required.

= i -  (Ho)ij j -  (Ho )ij (L)ji
jj
= i - (Ho)i - (Ho L)ii =  - Ho -  diag(Ho L) i
LOLA = (I - Ho) - diag(Ho L)

C TANDEM GAME

We provide a more detailed exposition of the tandem game in this section, including computation of fixed points for NL/LOLA and corresponding losses. Recall that losses are
L1(x, y) = (x + y)2 - 2x and L2(x, y) = (x + y)2 - 2y .
Intuitively, agents wants to have x  -y since (x + y)2 is the leading loss, but would also prefer to have positive x and y. These are incompatible, so the agents must not be `arrogant' and instead make concessions. The fixed points are given by

 = 2(x + y - 1) 1 = 0 , 1

namely any pair (x, 1 - x). The corresponding losses are L1 = 1 - 2x = -L2, summing to 0 for any x. We have

11 H =2
11

0

everywhere, so all fixed points are SFP. LOLA fails to preserve these, since

 = diag(Ho L) = 4 diag

0 1

1 0

x+y-1 x+y

1

= 4(x + y)

x+y x+y-1

1

which is non-zero for any SFP (x, 1 - x). Instead, LOLA can only converge to points such that LOLA =  - Ho -  = 0 .
We solve this explicitly as follows:

1

01 1

1

LOLA = 2(x + y - 1)

- 4(x + y - 1)

- 4(x + y)

1

10 1

1

1

= 2 [(1 - 4)(x + y) - (1 - 2)]

.

1

12

Under review as a conference paper at ICLR 2019

The fixed points for LOLA are thus pairs (x, y) such that

1 - 2 x + y = 1 - 4 , noting that (1 - 2)/(1 - 4) > 1 for all  > 0. This leads to worse losses

L1 =

1 - 2 1 - 4

2
- 2x > 1 - 2x = L1(x, 1 - x)

for agent 1 and similarly for agent 2. In particular, losses always sum to something greater than 0. This becomes negligible as the learning rate becomes smaller, but is always positive nonetheless Taking  arbitrarily small is not a viable solution since convergence will in turn be arbitrarily slow. LOLA is thus not a strong algorithm candidate for all differentiable games.

D CONVERGENCE PROOFS

We use Ostrowski's theorem as a unified framework for proving local convergence of gradient-based methods. This is a standard result on fixed-point iterations, adapted from (Ortega & Rheinboldt, 2000, 10.1.3). We also invoke and prove a topological result of our own, Lemma D.9, at the end of this section. This is useful in deducing local convergence ­ though not central to intuition. Theorem D.1 (Ostrowski). Let F :   Rd be continuously differentiable on an open subset   Rd, and assume x¯   is a fixed point. If all eigenvalues of F (x¯) are strictly in the unit circle of C, then there is an open neighbourhood U of x¯ such that for all x0  U , the sequence F (k)(x0) converges to x¯. Moreover, the rate of convergence is at least linear in k.
Definition D.2. A matrix M is called positive stable if all its eigenvalues have positive real part.
Recall the simultaneous gradient  and the Hessian H in any differentiable game. Let X be any matrix with continuously differentiable entries.
Corollary D.3. Assume x¯ is a fixed point of a differentiable game such that XH(x¯) is positive stable. Then the iterative procedure
F (x) = x - X(x)
converges locally to x¯ for small enough  > 0.

Proof. By definition of fixed points, (x¯) = 0 and so

[X](x¯) = X(x¯)(x¯) + X(x¯)(x¯) = XH(x¯)

is positive stable by assumption, namely has eigenvalues ak + ibk with ak > 0. It follows that F (x¯) = I - [X](x¯)

has eigenvalues 1 - ak - ibk, which are in the unit circle for small . More precisely,

 

|1 - ak - ibk|2 < 1

1 - 2ak + 2ak2 + 2bk2 < 1

0

<



<

2ak ak2 + b2k

which is always possible for ak > 0. Hence F (x¯) has eigenvalues in the unit circle for 0 <  < mink 2ak/(a2k + bk2), and we are done by Ostrowkski's Theorem since x¯ is a fixed point of F .

We apply this corollary to LookAhead, which is given by
F () =  - X()
where X = (I - Ho). It is thus sufficient to prove the following result. Theorem D.4. Let H 0 invertible with symmetric diagonal blocks. Then there exists > 0 such that (I - Ho)H is positive stable for all 0 <  < .

13

Under review as a conference paper at ICLR 2019

Remark D.5. Note that G may not be positive definite, although one can show this is true for 2 × 2 matrices and perhaps also 3 × 3. This fails one dimension up, exemplified by the matrix

 9

-4 -3 -3

H

=

-2 

1

2

1

  

.

-3 0 1 0 



-3 1 2 1

By direct computation (symbolic in ), one can show that G = (I - Ho)H always has positive eigenvalues for small  > 0, whereas its symmetric part S always has a negative eigenvalue with magnitude in the order of . This implies that S is not positive definite, which is equivalent to H As such, an analytical proof involving bounds on matrix-vector products will fail.
This makes the result all the more interesting, but more involved. Central to the proof is a similarity transformation proving positive definiteness with respect to a different inner product, a novel technique not found in the literature of multi-agent learning.

Proof. We cannot study the eigenvalues of G directly, since there is no necessary relationship between eigenpairs of H and Ho. In the aim of using analytical tools, the trick is to find a positive definite matrix which is similar to H, thus sharing the same positive eigenvalues. First define
G1 = (I + Hd)H and G2 = -H2 ,

where Hd is the sub-matrix of diagonal blocks,and rewrite
G = (I - Ho)H = (I - (H - Hd))H = (I + Hd)H - H2 = G1 + G2 .
Note that Hd is block diagonal with symmetric blocks iiLi 0, so (I + Hd) is symmetric and positive definite for all   0. In particular its principal square root

M = (I + Hd)1/2

is unique and invertible. Now note that M -1G1M = M -1M 2HM = M HM ,

which is positive semi-definite since

u M HM u = (M u) H(M u)  0

for all non-zero u. In particular M provides a similarity transformation which eliminates Hd from G1 while simultaneously delivering positive semi-definiteness. We can now prove that
M -1GM = M -1G1M + M -1G2M
is positive definite, establishing positive stability of G by similarity. Let m = d - 1 where d is the vector space dimension, namely H  Rd×d. Take any unit vector u  Sm and consider
u M -1GM u .

First note that a Taylor expansion of M in  yields

M = (I + Hd)1/2 = I + O()

and This implies in turn that

M -1 = (I + Hd)-1/2 = I + O() . u M -1GM u = u Gu + O() .

There are two cases to distinguish. If u Hu > 0 then

u M -1GM u = u Gu + O() = u G1u + O() = u Hu + O() > 0

for sufficiently small . Otherwise, u Hu = 0 = u Su and by Cholesky decomposition, there exists a matrix T such that S = T T . In particular 0 = u Su = T u 2 implies T u = 0, and in

14

Under review as a conference paper at ICLR 2019

turn Su = 0. Since H is invertible and u = 0, we have 0 = Hu = Au and so Au 2 > 0. It follows that
-u H2u = -u (S - A )(S + A)u = u A Au =  Au 2 > 0 .
Using positive semi-definiteness of M -1G1M , u M -1GM u = u M -1G1M u + u M -1G2M u  -u M -1H2M u = -u H2u + O(2) =  Au 2 + O(2) > 0
for  > 0 small enough. We conclude that for any u  Sm there is u > 0 such that u M -1GM u > 0
for all 0 <  < u, where g(, u) = u M -1GM u is a function g : R+ × Sm  R with Sm compact. By Lemma D.9, this can be extended uniformly with some > 0 such that
u M -1GM u > 0
for all u  Sm and 0 <  < . It follows that M -1GM is positive definite for all 0 <  < and thus G is positive stable for  in the same range, by similarity.
Corollary D.6. Lookahead converges locally to stable fixed points for  > 0 sufficiently small.
Proof. For any SFP ¯ we have (¯) = 0 and H(¯) 0 invertible by definition, with diagonal blocks iiLi symmetric by twice continuous differentiability. We are done by the result above and Corollary D.3.

We now prove that local convergence results descend to SOS. The following lemma establishes the crucial claim that our criterion for p is C1 in neighbourhoods of fixed points. This is necessary to invoke analytical arguments including Ostrowski's Theorem, and would be untrue globally.
Lemma D.7. If ¯ is a fixed point and  is sufficiently small then p =  2 in a neighbourhood of ¯.

Proof. First note that (¯) = 0, so there is a (bounded) neighbourhood V of ¯ such that () < b for all   V , for any choice of hyperparameter b  (0, 1). In particular p2() = () 2 by definition of the second criterion. We want to show that p() = p2() near ¯, or equivalently p1()  p2(). Since p2() = () 2 < b2 < 1 in V , it remains only to show that

-a 0 2 -, 0



() 2

in some neighbourhood U  V of ¯, for any choice of hyperparameter a  (0, 1). Now by boundedness of V and continuity of , there exists c > 0 such that -() = 2 () < c for all   V and bounded . It follows by Cauchy-Schwartz that

-a 0 2 -, 0



a 0 -

> a 0 /c

in V . Now note that

0 = (I - Ho)  d 

in V , for some d > 0 and  sufficiently small, by boundedness of V and continuity of Ho. Finally

there is a sub-neighbourhood U  V such that () < ad/c for all   U , so that ad  /c >

() 2 and hence

-a 0 2 -, 0

>

 2 = p2

in U . Hence p() = min{p1(), p2()} = p2() = () 2 for all   U , as required.

Theorem D.8. SOS converges locally to stable fixed points for  > 0 sufficiently small.

15

Under review as a conference paper at ICLR 2019

Proof. Though the criterion is dual, we will only use the second part. More precisely,

p = min{p1, p2}  p2 = 
if  < b. The aim is to show that if ¯ is an SFP then p(¯) is positive stable for small , using Ostrowski to conclude as usual. The first problem we face is that p does not exist everywhere, since p() is not a continuous function. However we know by Lemma D.7 that p =  2 in a neighbourhood U of ¯, so p is continuously differentiable in U . Moreover, p(¯) = (¯) 2 = 0 with gradient
p(¯) = 2H (¯) = 0

by definition of fixed points. It follows that

p(¯) = (I - Ho)H(¯) - p(¯)(¯) - p(¯)(¯) = (I - Ho)H(¯)

which is identical to LookAhead. This is positive stable for all 0 <  < , and ¯ is a fixed point of

the iteration since

p(¯) = (I - Ho)(¯) - p(¯)(¯) = 0 .

We conclude by Corollary D.3 that SOS converges locally to SFP for any a, b  (0, 1) and 

small.

Lemma D.9. Let g : R+ × Y  Z continuous with Y compact and Z  R. Assume that for any
u  Y there is u > 0 such that g(, u) > 0 for all 0 <  < u. Then there exists > 0 such that g(, u) > 0 for all 0 <  < and u  Y .

Proof. For any u  Y there is u > 0 such that (0, u) × {u}  g-1(0, ) .

We would like to extend this uniformly in u, namely prove that

(0, ) × Y  g-1(0, ) .

for some > 0. Now g-1(0, ) is open by continuity of g, so each (0, u) × {u} has a neighbourhood Xu contained in g-1(0, ). Open sets in a product topology are unions of open products, so
Xu = Ux × Vx .

x

In particular (0, u)  x Ux and at least one Vx contains u, so we can take the open neighbourhood to be
Xu = (0, u) × Vu  g-1(0, )

for some neighbourhood Vu of u. In particular Y  uY Vu, and by compactness there is a finite

cover Y 

k i=1

Vui

.

Letting

= min{ i}ki=1 > 0, we obtain the required inclusion

kk

k

(0, ) × Y  (0, ) × Vui = (0, ) × Vui  (0, i) × Vui  g-1(0, ) .

i=1 i=1

i=1

E NON-CONVERGENCE PROOFS

Lemma E.1. Let ak and bk be sequences of real numbers, and define ck = min{ak, bk}. If

L = lim ck and L = lim ak

k

k

both exist then L  L .

Proof. Assume for contradiction that L > L , then there exists  > 0 such that L > L + . By definition of limits, there exist M, N  N such that
|ck - L| < /2
and |ak - L | < /2

16

Under review as a conference paper at ICLR 2019

for all k  M , k  N . Expanding the absolute value, this implies

L - /2 < ck < L + /2 and L - /2 < ak < L + /2

for all k  max{M, N }. Now ck  ak for all k, hence

L - /2 < ck  ak < L + /2

which implies the contradiction

L<L +.

Proposition E.2. If SOS converges to ¯ and  > 0 is small then ¯ is a fixed point of the game.

Proof. The iterative procedure is given by
k+1 = F (k) = k - p(k) . If k  ¯ as k   then taking limits on both sides of the iteration yields
¯ = ¯ -  lim p(k)
k
and so lim p(k) = 0, omitting k   for convenience. It follows by continuity that
k
0(¯) + lim p(k) - (¯) = 0 ,
k
noting that p() is not a globally continuous function. Assume for contradiction that 0(¯) = 0. There are two cases to distinguish for clarity.

(i) First assume -, 0 (¯)  0. Note that limk p(k)  0 since p()  0 for all , and so

lim p(k), 0(¯) = lim p(k) -, 0 (¯) + 0(¯) 2 > 0 .
kk

This is a contradiction since limk p(k) = 0.

(ii) Otherwise, -, 0 (¯) < 0 and hence -, 0 () < 0 in a neighbourhood. In particular there exists N  N such that -, 0 (k) < 0
for all k  N . In particular

p1(k) = min

1,

-a 0(k) 2 -, 0 (k)

for all k  N . Now notice that

lim p(k) = lim min
kk

1,

-a 0(k) 2 -, 0 (k)

,

p2(k

)

,

which implies

lim p(k)  lim
kk

-a 0(k) 2 -, 0 (k)

=

-a 0(¯) 2 -, 0 (¯)

by continuity and Lemma E.1. Finally we conclude

lim p, 0 (k) = lim p(k) -, 0 (¯) + 0(¯) 2  -a 0(¯) 2 + 0(¯) 2 > 0
kk

for any a  (0, 1), a contradiction.

In both cases a contradiction is obtained, hence 0(¯) = 0 = (I - Ho)(¯). Now note that (I - Ho)(¯) is singular iff Ho(¯) has an eigenvalue 1/, which is impossible for  sufficiently small. Hence (I - Ho)(¯) = 0 implies (¯) = 0, as required.

Now assume that  is initialised randomly (or with arbitrarily small noise around a point), as is standard in ML. We prove that SOS locally avoids strict saddles using the Stable Manifold Theorem, inspired from Lee et al. (2017).

17

Under review as a conference paper at ICLR 2019
Theorem E.3 (Stable Manifold Theorem). Let x¯ be a fixed point for the C1 local diffeomorphism F : U  Rd, where U is a neighbourhood of x¯ in Rd. Let Es  Eu be the generalised eigenspaces of F (x¯) corresponding to eigenvalues with ||  1 and || > 1 respectively. Then there exists a local stable center manifold W with tangent space Es at x¯ and a neighbourhood B of x¯ such that F (W )  B  W and n=0F -n(B)  W .
In particular, if F (x¯) has at least one eigenvalue || > 1 then Eu has dimension at least 1. Since W has tangent space Es at x¯, with codimension at least one, it follows that W has measure zero. This is central in proving that the set of initial points in a neighbourhood which converge through SOS to a given strict saddle ¯ has measure zero. Theorem E.4. SOS locally avoids strict saddles almost surely, for  > 0 sufficiently small.
Proof. Let ¯ a strict saddle and recall that SOS is given by F () =  - (I - Ho)() + 2p()() .
Recall by Lemma D.7 that p() = () 2 for all  in a neighbourhood U of ¯. Restricting F to U , all terms involved are continuously differentiable and
F (¯) = I - (I - Ho)H(¯) by assumption that (¯) = 0. Since all terms except I are of order at least , F (¯) is invertible for all  sufficiently small. By the inverse function theorem, there exists a neighbourhood V of ¯ such that F is has a continuously differentiable inverse on V . Hence F restricted to U  V is a C1 diffeomorphism with fixed point ¯. By definition of strict saddles, H(¯) has a negative eigenvalue. It follows by continuity that (I - Ho)H(¯) also has a negative eigenvalue a + ib with a < 0 for  sufficiently small. Finally,
F (¯) = I - (I - Ho)H(¯) has an eigenvalue  = 1 - a - ib with
|| = 1 - 2a + 2(a2 + b2)  1 - 2a > 1 . It follows that Es has codimension at least one, implying in turn that the local stable set W has measure zero. We can now prove that
Z = {  U  V | lim F n() = ¯}
n
has measure zero, or in other words, that local convergence to ¯ occurs with zero probability. Let B the neighbourhood guaranteed by the Stable Manifold Theorem, and take any   Z. By definition of convergence there exists N  N such that F N+n()  B for all n  0, so that
F N ()  n=0F -n(B)  W by the Stable Manifold Theorem. This implies that   F -N (W ), and finally   nNF -n(W ). Since  was arbitrary, we obtain the inclusion
Z  nNF -n(W ) . Now F -1 is C1, hence locally Lipschitz and thus preserves sets of measure zero, so that F -n(W ) has measure zero for each n. Countable unions of measure zero sets are still measure zero, so we conclude that Z also has measure zero. In other words, SOS converges to ¯ with zero probability upon random initialisation of  in U .
F FURTHER GAUSSIAN MIXTURE EXPERIMENTS
In the Gaussian mixture experiment, data is sampled from a highly multimodal distribution designed to probe the tendency to collapse onto a subset of modes during training, given in Figure 5. The generator distribution and KL divergence are given at {2k, 4k, 6k, 8k} iterations for LA, LOLA and SGA in Figure 6. LOLA and SGA successfully spread mass across all Gaussians. Lookahead displays mode collapse and hopping in early stages, but begins to incorporate further mixtures near
18

Under review as a conference paper at ICLR 2019

LA

 = 9e - 5

Figure 5: Ground truth in the Gaussian mixture experiment.

8k iterations. We ran further iterations and discovered that LookAhead eventually spreads mass across all mixtures, though very slowly. Comparing with results for NL/CO/SOS in the main text, we see that CO/SOS/LOLA/SGA are equally successful in qualitative terms.
Note that SOS/CO are slightly superior with respect to KL divergence after 6-8k iterations, though LOLA is initially faster. This may be due only to random sampling. We also noticed experimentally that LOLA often moves away from the correct distribution after 8-10k iterations (not shown), while SOS stays stable in the long run. This may occur thanks to the two-part criterion encouraging convergence, while LOLA continually attempts to exploit opponent learning.

Iteration = 2k

4k

6k 8k

DKL = 0.84

1.19

1.01

0.78

LOLA

DKL = 0.30

0.11

0.09

0.07

SGA

DKL = 0.63

0.32

0.19

0.12

Figure 6: Generator distribution at sampled iterations for LA/LOLA/SGA. LA suffers in the early
stages from mode collapse and hopping, but incorporates more mixtures later on. LOLA and SGA learn the correct mixture of Gaussians. Below each plot: KL divergence DKL(P || Q) from generator P to ground truth Q, estimated from 25600 samples. Best result at each iteration in bold.

19

 = 2e - 4

 = 1e - 4

Under review as a conference paper at ICLR 2019

||||

SOS

104

LA NL

103

102

101

100

10-1

10-2 0

2000

4000 Ite6r0a0t0ion 8000

10000

Figure 7: Semilog plot of  at each iteration for SOS, LA and NL.

12000

Finally we plot  at all iterations up to 12k for SOS, LA and NL in Figure 7 (other algorithms are omitted for visibility). This gives further evidence of SOS converging quite rapidly to the correct distribution, while NL perpetually suffers from mode hopping and LA lags behind significantly.

20

